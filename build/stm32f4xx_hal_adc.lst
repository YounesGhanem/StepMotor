ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc."
  22      6572732F 
  22      53544D33 
  22      32463478 
  22      785F4841 
  23 0033 6300     		.ascii	"c\000"
  24              		.section	.text.HAL_ADC_Init,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_ADC_Init
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	HAL_ADC_Init:
  32              	.LFB128:
  33              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @version V1.4.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @date    09-October-2015
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + IO operation functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + State and errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 2


  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 3


  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 4


 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      without specific prior written permission.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 5


 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 6


 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  34              		.loc 1 259 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 7860     		str	r0, [r7, #4]
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  50              		.loc 1 261 5
  51 0008 7B68     		ldr	r3, [r7, #4]
  52 000a 002B     		cmp	r3, #0
  53 000c 01D1     		bne	.L2
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      return HAL_ERROR;
  54              		.loc 1 263 13
  55 000e 0123     		movs	r3, #1
  56 0010 37E1     		b	.L3
  57              	.L2:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  58              		.loc 1 267 3
  59 0012 7B68     		ldr	r3, [r7, #4]
  60 0014 1B68     		ldr	r3, [r3]
  61 0016 8E4A     		ldr	r2, .L18
  62 0018 9342     		cmp	r3, r2
  63 001a 04D0     		beq	.L4
  64              		.loc 1 267 3 is_stmt 0 discriminator 1
  65 001c 40F20B11 		movw	r1, #267
  66 0020 8C48     		ldr	r0, .L18+4
  67 0022 FFF7FEFF 		bl	assert_failed
  68              	.L4:
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  69              		.loc 1 268 3 is_stmt 1
  70 0026 7B68     		ldr	r3, [r7, #4]
  71 0028 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 7


  72 002a 002B     		cmp	r3, #0
  73 002c 13D0     		beq	.L5
  74              		.loc 1 268 3 is_stmt 0 discriminator 1
  75 002e 7B68     		ldr	r3, [r7, #4]
  76 0030 5B68     		ldr	r3, [r3, #4]
  77 0032 B3F5803F 		cmp	r3, #65536
  78 0036 0ED0     		beq	.L5
  79              		.loc 1 268 3 discriminator 2
  80 0038 7B68     		ldr	r3, [r7, #4]
  81 003a 5B68     		ldr	r3, [r3, #4]
  82 003c B3F5003F 		cmp	r3, #131072
  83 0040 09D0     		beq	.L5
  84              		.loc 1 268 3 discriminator 3
  85 0042 7B68     		ldr	r3, [r7, #4]
  86 0044 5B68     		ldr	r3, [r3, #4]
  87 0046 B3F5403F 		cmp	r3, #196608
  88 004a 04D0     		beq	.L5
  89              		.loc 1 268 3 discriminator 4
  90 004c 4FF48671 		mov	r1, #268
  91 0050 8048     		ldr	r0, .L18+4
  92 0052 FFF7FEFF 		bl	assert_failed
  93              	.L5:
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  94              		.loc 1 269 3 is_stmt 1
  95 0056 7B68     		ldr	r3, [r7, #4]
  96 0058 9B68     		ldr	r3, [r3, #8]
  97 005a 002B     		cmp	r3, #0
  98 005c 13D0     		beq	.L6
  99              		.loc 1 269 3 is_stmt 0 discriminator 1
 100 005e 7B68     		ldr	r3, [r7, #4]
 101 0060 9B68     		ldr	r3, [r3, #8]
 102 0062 B3F1807F 		cmp	r3, #16777216
 103 0066 0ED0     		beq	.L6
 104              		.loc 1 269 3 discriminator 2
 105 0068 7B68     		ldr	r3, [r7, #4]
 106 006a 9B68     		ldr	r3, [r3, #8]
 107 006c B3F1007F 		cmp	r3, #33554432
 108 0070 09D0     		beq	.L6
 109              		.loc 1 269 3 discriminator 3
 110 0072 7B68     		ldr	r3, [r7, #4]
 111 0074 9B68     		ldr	r3, [r3, #8]
 112 0076 B3F1407F 		cmp	r3, #50331648
 113 007a 04D0     		beq	.L6
 114              		.loc 1 269 3 discriminator 4
 115 007c 40F20D11 		movw	r1, #269
 116 0080 7448     		ldr	r0, .L18+4
 117 0082 FFF7FEFF 		bl	assert_failed
 118              	.L6:
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 119              		.loc 1 270 3 is_stmt 1
 120 0086 7B68     		ldr	r3, [r7, #4]
 121 0088 1B69     		ldr	r3, [r3, #16]
 122 008a 002B     		cmp	r3, #0
 123 008c 08D0     		beq	.L7
 124              		.loc 1 270 3 is_stmt 0 discriminator 1
 125 008e 7B68     		ldr	r3, [r7, #4]
 126 0090 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 8


 127 0092 012B     		cmp	r3, #1
 128 0094 04D0     		beq	.L7
 129              		.loc 1 270 3 discriminator 2
 130 0096 4FF48771 		mov	r1, #270
 131 009a 6E48     		ldr	r0, .L18+4
 132 009c FFF7FEFF 		bl	assert_failed
 133              	.L7:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 134              		.loc 1 271 3 is_stmt 1
 135 00a0 7B68     		ldr	r3, [r7, #4]
 136 00a2 9B69     		ldr	r3, [r3, #24]
 137 00a4 002B     		cmp	r3, #0
 138 00a6 08D0     		beq	.L8
 139              		.loc 1 271 3 is_stmt 0 discriminator 1
 140 00a8 7B68     		ldr	r3, [r7, #4]
 141 00aa 9B69     		ldr	r3, [r3, #24]
 142 00ac 012B     		cmp	r3, #1
 143 00ae 04D0     		beq	.L8
 144              		.loc 1 271 3 discriminator 2
 145 00b0 40F20F11 		movw	r1, #271
 146 00b4 6748     		ldr	r0, .L18+4
 147 00b6 FFF7FEFF 		bl	assert_failed
 148              	.L8:
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 149              		.loc 1 272 3 is_stmt 1
 150 00ba 7B68     		ldr	r3, [r7, #4]
 151 00bc DB6A     		ldr	r3, [r3, #44]
 152 00be 002B     		cmp	r3, #0
 153 00c0 54D0     		beq	.L9
 154              		.loc 1 272 3 is_stmt 0 discriminator 1
 155 00c2 7B68     		ldr	r3, [r7, #4]
 156 00c4 DB6A     		ldr	r3, [r3, #44]
 157 00c6 B3F1807F 		cmp	r3, #16777216
 158 00ca 4FD0     		beq	.L9
 159              		.loc 1 272 3 discriminator 2
 160 00cc 7B68     		ldr	r3, [r7, #4]
 161 00ce DB6A     		ldr	r3, [r3, #44]
 162 00d0 B3F1007F 		cmp	r3, #33554432
 163 00d4 4AD0     		beq	.L9
 164              		.loc 1 272 3 discriminator 3
 165 00d6 7B68     		ldr	r3, [r7, #4]
 166 00d8 DB6A     		ldr	r3, [r3, #44]
 167 00da B3F1407F 		cmp	r3, #50331648
 168 00de 45D0     		beq	.L9
 169              		.loc 1 272 3 discriminator 4
 170 00e0 7B68     		ldr	r3, [r7, #4]
 171 00e2 DB6A     		ldr	r3, [r3, #44]
 172 00e4 B3F1806F 		cmp	r3, #67108864
 173 00e8 40D0     		beq	.L9
 174              		.loc 1 272 3 discriminator 5
 175 00ea 7B68     		ldr	r3, [r7, #4]
 176 00ec DB6A     		ldr	r3, [r3, #44]
 177 00ee B3F1A06F 		cmp	r3, #83886080
 178 00f2 3BD0     		beq	.L9
 179              		.loc 1 272 3 discriminator 6
 180 00f4 7B68     		ldr	r3, [r7, #4]
 181 00f6 DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 9


 182 00f8 B3F1C06F 		cmp	r3, #100663296
 183 00fc 36D0     		beq	.L9
 184              		.loc 1 272 3 discriminator 7
 185 00fe 7B68     		ldr	r3, [r7, #4]
 186 0100 DB6A     		ldr	r3, [r3, #44]
 187 0102 B3F1E06F 		cmp	r3, #117440512
 188 0106 31D0     		beq	.L9
 189              		.loc 1 272 3 discriminator 8
 190 0108 7B68     		ldr	r3, [r7, #4]
 191 010a DB6A     		ldr	r3, [r3, #44]
 192 010c B3F1006F 		cmp	r3, #134217728
 193 0110 2CD0     		beq	.L9
 194              		.loc 1 272 3 discriminator 9
 195 0112 7B68     		ldr	r3, [r7, #4]
 196 0114 DB6A     		ldr	r3, [r3, #44]
 197 0116 B3F1106F 		cmp	r3, #150994944
 198 011a 27D0     		beq	.L9
 199              		.loc 1 272 3 discriminator 10
 200 011c 7B68     		ldr	r3, [r7, #4]
 201 011e DB6A     		ldr	r3, [r3, #44]
 202 0120 B3F1206F 		cmp	r3, #167772160
 203 0124 22D0     		beq	.L9
 204              		.loc 1 272 3 discriminator 11
 205 0126 7B68     		ldr	r3, [r7, #4]
 206 0128 DB6A     		ldr	r3, [r3, #44]
 207 012a B3F1306F 		cmp	r3, #184549376
 208 012e 1DD0     		beq	.L9
 209              		.loc 1 272 3 discriminator 12
 210 0130 7B68     		ldr	r3, [r7, #4]
 211 0132 DB6A     		ldr	r3, [r3, #44]
 212 0134 B3F1406F 		cmp	r3, #201326592
 213 0138 18D0     		beq	.L9
 214              		.loc 1 272 3 discriminator 13
 215 013a 7B68     		ldr	r3, [r7, #4]
 216 013c DB6A     		ldr	r3, [r3, #44]
 217 013e B3F1506F 		cmp	r3, #218103808
 218 0142 13D0     		beq	.L9
 219              		.loc 1 272 3 discriminator 14
 220 0144 7B68     		ldr	r3, [r7, #4]
 221 0146 DB6A     		ldr	r3, [r3, #44]
 222 0148 B3F1606F 		cmp	r3, #234881024
 223 014c 0ED0     		beq	.L9
 224              		.loc 1 272 3 discriminator 15
 225 014e 7B68     		ldr	r3, [r7, #4]
 226 0150 DB6A     		ldr	r3, [r3, #44]
 227 0152 B3F1706F 		cmp	r3, #251658240
 228 0156 09D0     		beq	.L9
 229              		.loc 1 272 3 discriminator 16
 230 0158 7B68     		ldr	r3, [r7, #4]
 231 015a DB6A     		ldr	r3, [r3, #44]
 232 015c 3E4A     		ldr	r2, .L18+8
 233 015e 9342     		cmp	r3, r2
 234 0160 04D0     		beq	.L9
 235              		.loc 1 272 3 discriminator 17
 236 0162 4FF48871 		mov	r1, #272
 237 0166 3B48     		ldr	r0, .L18+4
 238 0168 FFF7FEFF 		bl	assert_failed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 10


 239              	.L9:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 240              		.loc 1 273 3 is_stmt 1
 241 016c 7B68     		ldr	r3, [r7, #4]
 242 016e DB68     		ldr	r3, [r3, #12]
 243 0170 002B     		cmp	r3, #0
 244 0172 09D0     		beq	.L10
 245              		.loc 1 273 3 is_stmt 0 discriminator 1
 246 0174 7B68     		ldr	r3, [r7, #4]
 247 0176 DB68     		ldr	r3, [r3, #12]
 248 0178 B3F5006F 		cmp	r3, #2048
 249 017c 04D0     		beq	.L10
 250              		.loc 1 273 3 discriminator 2
 251 017e 40F21111 		movw	r1, #273
 252 0182 3448     		ldr	r0, .L18+4
 253 0184 FFF7FEFF 		bl	assert_failed
 254              	.L10:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 255              		.loc 1 274 3 is_stmt 1
 256 0188 7B68     		ldr	r3, [r7, #4]
 257 018a 1B6A     		ldr	r3, [r3, #32]
 258 018c 002B     		cmp	r3, #0
 259 018e 03D0     		beq	.L11
 260              		.loc 1 274 3 is_stmt 0 discriminator 2
 261 0190 7B68     		ldr	r3, [r7, #4]
 262 0192 1B6A     		ldr	r3, [r3, #32]
 263 0194 102B     		cmp	r3, #16
 264 0196 04D9     		bls	.L12
 265              	.L11:
 266              		.loc 1 274 3 discriminator 3
 267 0198 4FF48971 		mov	r1, #274
 268 019c 2D48     		ldr	r0, .L18+4
 269 019e FFF7FEFF 		bl	assert_failed
 270              	.L12:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 271              		.loc 1 275 3 is_stmt 1
 272 01a2 7B68     		ldr	r3, [r7, #4]
 273 01a4 DB69     		ldr	r3, [r3, #28]
 274 01a6 002B     		cmp	r3, #0
 275 01a8 08D0     		beq	.L13
 276              		.loc 1 275 3 is_stmt 0 discriminator 1
 277 01aa 7B68     		ldr	r3, [r7, #4]
 278 01ac DB69     		ldr	r3, [r3, #28]
 279 01ae 012B     		cmp	r3, #1
 280 01b0 04D0     		beq	.L13
 281              		.loc 1 275 3 discriminator 2
 282 01b2 40F21311 		movw	r1, #275
 283 01b6 2748     		ldr	r0, .L18+4
 284 01b8 FFF7FEFF 		bl	assert_failed
 285              	.L13:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 286              		.loc 1 276 3 is_stmt 1
 287 01bc 7B68     		ldr	r3, [r7, #4]
 288 01be 5B69     		ldr	r3, [r3, #20]
 289 01c0 012B     		cmp	r3, #1
 290 01c2 0CD0     		beq	.L14
 291              		.loc 1 276 3 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 11


 292 01c4 7B68     		ldr	r3, [r7, #4]
 293 01c6 5B69     		ldr	r3, [r3, #20]
 294 01c8 002B     		cmp	r3, #0
 295 01ca 08D0     		beq	.L14
 296              		.loc 1 276 3 discriminator 2
 297 01cc 7B68     		ldr	r3, [r7, #4]
 298 01ce 5B69     		ldr	r3, [r3, #20]
 299 01d0 022B     		cmp	r3, #2
 300 01d2 04D0     		beq	.L14
 301              		.loc 1 276 3 discriminator 3
 302 01d4 4FF48A71 		mov	r1, #276
 303 01d8 1E48     		ldr	r0, .L18+4
 304 01da FFF7FEFF 		bl	assert_failed
 305              	.L14:
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 306              		.loc 1 277 3 is_stmt 1
 307 01de 7B68     		ldr	r3, [r7, #4]
 308 01e0 5B6A     		ldr	r3, [r3, #36]
 309 01e2 002B     		cmp	r3, #0
 310 01e4 08D0     		beq	.L15
 311              		.loc 1 277 3 is_stmt 0 discriminator 1
 312 01e6 7B68     		ldr	r3, [r7, #4]
 313 01e8 5B6A     		ldr	r3, [r3, #36]
 314 01ea 012B     		cmp	r3, #1
 315 01ec 04D0     		beq	.L15
 316              		.loc 1 277 3 discriminator 2
 317 01ee 40F21511 		movw	r1, #277
 318 01f2 1848     		ldr	r0, .L18+4
 319 01f4 FFF7FEFF 		bl	assert_failed
 320              	.L15:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 321              		.loc 1 279 16 is_stmt 1
 322 01f8 7B68     		ldr	r3, [r7, #4]
 323 01fa DB6A     		ldr	r3, [r3, #44]
 324              		.loc 1 279 5
 325 01fc 164A     		ldr	r2, .L18+8
 326 01fe 9342     		cmp	r3, r2
 327 0200 17D0     		beq	.L16
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 328              		.loc 1 281 5
 329 0202 7B68     		ldr	r3, [r7, #4]
 330 0204 1B6B     		ldr	r3, [r3, #48]
 331 0206 002B     		cmp	r3, #0
 332 0208 13D0     		beq	.L16
 333              		.loc 1 281 5 is_stmt 0 discriminator 1
 334 020a 7B68     		ldr	r3, [r7, #4]
 335 020c 1B6B     		ldr	r3, [r3, #48]
 336 020e B3F1805F 		cmp	r3, #268435456
 337 0212 0ED0     		beq	.L16
 338              		.loc 1 281 5 discriminator 2
 339 0214 7B68     		ldr	r3, [r7, #4]
 340 0216 1B6B     		ldr	r3, [r3, #48]
 341 0218 B3F1005F 		cmp	r3, #536870912
 342 021c 09D0     		beq	.L16
 343              		.loc 1 281 5 discriminator 3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 12


 344 021e 7B68     		ldr	r3, [r7, #4]
 345 0220 1B6B     		ldr	r3, [r3, #48]
 346 0222 B3F1405F 		cmp	r3, #805306368
 347 0226 04D0     		beq	.L16
 348              		.loc 1 281 5 discriminator 4
 349 0228 40F21911 		movw	r1, #281
 350 022c 0948     		ldr	r0, .L18+4
 351 022e FFF7FEFF 		bl	assert_failed
 352              	.L16:
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 353              		.loc 1 284 10 is_stmt 1
 354 0232 7B68     		ldr	r3, [r7, #4]
 355 0234 93F83D30 		ldrb	r3, [r3, #61]
 356 0238 DBB2     		uxtb	r3, r3
 357              		.loc 1 284 5
 358 023a 002B     		cmp	r3, #0
 359 023c 0ED1     		bne	.L17
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 360              		.loc 1 287 16
 361 023e 7B68     		ldr	r3, [r7, #4]
 362 0240 0022     		movs	r2, #0
 363 0242 83F83C20 		strb	r2, [r3, #60]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 364              		.loc 1 289 5
 365 0246 7868     		ldr	r0, [r7, #4]
 366 0248 FFF7FEFF 		bl	HAL_ADC_MspInit
 367 024c 06E0     		b	.L19
 368              	.L20:
 369 024e 00BF     		.align	2
 370              	.L18:
 371 0250 00200140 		.word	1073815552
 372 0254 00000000 		.word	.LC0
 373 0258 0100000F 		.word	251658241
 374              	.L19:
 375              	.L17:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Initialize the ADC state */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_BUSY;
 376              		.loc 1 293 15
 377 025c 7B68     		ldr	r3, [r7, #4]
 378 025e 0222     		movs	r2, #2
 379 0260 83F83D20 		strb	r2, [r3, #61]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Init(hadc);
 380              		.loc 1 296 3
 381 0264 7868     		ldr	r0, [r7, #4]
 382 0266 FFF7FEFF 		bl	ADC_Init
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to none */
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode = HAL_ADC_ERROR_NONE;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 13


 383              		.loc 1 299 19
 384 026a 7B68     		ldr	r3, [r7, #4]
 385 026c 0022     		movs	r2, #0
 386 026e 1A64     		str	r2, [r3, #64]
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Initialize the ADC state */
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_READY;
 387              		.loc 1 302 15
 388 0270 7B68     		ldr	r3, [r7, #4]
 389 0272 0122     		movs	r2, #1
 390 0274 83F83D20 		strb	r2, [r3, #61]
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 391              		.loc 1 305 3
 392 0278 7B68     		ldr	r3, [r7, #4]
 393 027a 0022     		movs	r2, #0
 394 027c 83F83C20 		strb	r2, [r3, #60]
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 395              		.loc 1 308 10
 396 0280 0023     		movs	r3, #0
 397              	.L3:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 398              		.loc 1 309 1
 399 0282 1846     		mov	r0, r3
 400 0284 0837     		adds	r7, r7, #8
 401              	.LCFI3:
 402              		.cfi_def_cfa_offset 8
 403 0286 BD46     		mov	sp, r7
 404              	.LCFI4:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 0288 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE128:
 411 028a 00BF     		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_ADC_DeInit
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 418              	HAL_ADC_DeInit:
 419              	.LFB129:
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 420              		.loc 1 318 1
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 14


 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              	.LCFI5:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              	.LCFI6:
 431              		.cfi_def_cfa_offset 16
 432 0004 00AF     		add	r7, sp, #0
 433              	.LCFI7:
 434              		.cfi_def_cfa_register 7
 435 0006 7860     		str	r0, [r7, #4]
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 436              		.loc 1 320 5
 437 0008 7B68     		ldr	r3, [r7, #4]
 438 000a 002B     		cmp	r3, #0
 439 000c 01D1     		bne	.L22
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      return HAL_ERROR;
 440              		.loc 1 322 13
 441 000e 0123     		movs	r3, #1
 442 0010 18E0     		b	.L23
 443              	.L22:
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   } 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 444              		.loc 1 326 3
 445 0012 7B68     		ldr	r3, [r7, #4]
 446 0014 1B68     		ldr	r3, [r3]
 447 0016 0D4A     		ldr	r2, .L25
 448 0018 9342     		cmp	r3, r2
 449 001a 04D0     		beq	.L24
 450              		.loc 1 326 3 is_stmt 0 discriminator 1
 451 001c 4FF4A371 		mov	r1, #326
 452 0020 0B48     		ldr	r0, .L25+4
 453 0022 FFF7FEFF 		bl	assert_failed
 454              	.L24:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Change ADC state */
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_BUSY;
 455              		.loc 1 329 15 is_stmt 1
 456 0026 7B68     		ldr	r3, [r7, #4]
 457 0028 0222     		movs	r2, #2
 458 002a 83F83D20 		strb	r2, [r3, #61]
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* DeInit the low level hardware */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 459              		.loc 1 332 3
 460 002e 7868     		ldr	r0, [r7, #4]
 461 0030 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to none */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode = HAL_ADC_ERROR_NONE;
 462              		.loc 1 335 19
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 15


 463 0034 7B68     		ldr	r3, [r7, #4]
 464 0036 0022     		movs	r2, #0
 465 0038 1A64     		str	r2, [r3, #64]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Change ADC state */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 466              		.loc 1 338 15
 467 003a 7B68     		ldr	r3, [r7, #4]
 468 003c 0022     		movs	r2, #0
 469 003e 83F83D20 		strb	r2, [r3, #61]
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 470              		.loc 1 341 10
 471 0042 0023     		movs	r3, #0
 472              	.L23:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 473              		.loc 1 342 1
 474 0044 1846     		mov	r0, r3
 475 0046 0837     		adds	r7, r7, #8
 476              	.LCFI8:
 477              		.cfi_def_cfa_offset 8
 478 0048 BD46     		mov	sp, r7
 479              	.LCFI9:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 004a 80BD     		pop	{r7, pc}
 483              	.L26:
 484              		.align	2
 485              	.L25:
 486 004c 00200140 		.word	1073815552
 487 0050 00000000 		.word	.LC0
 488              		.cfi_endproc
 489              	.LFE129:
 491              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 492              		.align	1
 493              		.weak	HAL_ADC_MspInit
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	HAL_ADC_MspInit:
 499              	.LFB130:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 500              		.loc 1 351 1
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 8
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 505 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 16


 506              	.LCFI10:
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 83B0     		sub	sp, sp, #12
 510              	.LCFI11:
 511              		.cfi_def_cfa_offset 16
 512 0004 00AF     		add	r7, sp, #0
 513              	.LCFI12:
 514              		.cfi_def_cfa_register 7
 515 0006 7860     		str	r0, [r7, #4]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 516              		.loc 1 355 1
 517 0008 00BF     		nop
 518 000a 0C37     		adds	r7, r7, #12
 519              	.LCFI13:
 520              		.cfi_def_cfa_offset 4
 521 000c BD46     		mov	sp, r7
 522              	.LCFI14:
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 000e 5DF8047B 		ldr	r7, [sp], #4
 526              	.LCFI15:
 527              		.cfi_restore 7
 528              		.cfi_def_cfa_offset 0
 529 0012 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE130:
 533              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 534              		.align	1
 535              		.weak	HAL_ADC_MspDeInit
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HAL_ADC_MspDeInit:
 541              	.LFB131:
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 542              		.loc 1 364 1
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              	.LCFI16:
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 17


 552              	.LCFI17:
 553              		.cfi_def_cfa_offset 16
 554 0004 00AF     		add	r7, sp, #0
 555              	.LCFI18:
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 558              		.loc 1 368 1
 559 0008 00BF     		nop
 560 000a 0C37     		adds	r7, r7, #12
 561              	.LCFI19:
 562              		.cfi_def_cfa_offset 4
 563 000c BD46     		mov	sp, r7
 564              	.LCFI20:
 565              		.cfi_def_cfa_register 13
 566              		@ sp needed
 567 000e 5DF8047B 		ldr	r7, [sp], #4
 568              	.LCFI21:
 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0012 7047     		bx	lr
 572              		.cfi_endproc
 573              	.LFE131:
 575              		.section	.text.HAL_ADC_Start,"ax",%progbits
 576              		.align	1
 577              		.global	HAL_ADC_Start
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	HAL_ADC_Start:
 583              	.LFB132:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 18


 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 584              		.loc 1 401 1
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 16
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588 0000 80B5     		push	{r7, lr}
 589              	.LCFI22:
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 84B0     		sub	sp, sp, #16
 594              	.LCFI23:
 595              		.cfi_def_cfa_offset 24
 596 0004 00AF     		add	r7, sp, #0
 597              	.LCFI24:
 598              		.cfi_def_cfa_register 7
 599 0006 7860     		str	r0, [r7, #4]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0;
 600              		.loc 1 402 17
 601 0008 0023     		movs	r3, #0
 602 000a FB60     		str	r3, [r7, #12]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 603              		.loc 1 405 3
 604 000c 7B68     		ldr	r3, [r7, #4]
 605 000e 9B69     		ldr	r3, [r3, #24]
 606 0010 002B     		cmp	r3, #0
 607 0012 08D0     		beq	.L30
 608              		.loc 1 405 3 is_stmt 0 discriminator 1
 609 0014 7B68     		ldr	r3, [r7, #4]
 610 0016 9B69     		ldr	r3, [r3, #24]
 611 0018 012B     		cmp	r3, #1
 612 001a 04D0     		beq	.L30
 613              		.loc 1 405 3 discriminator 2
 614 001c 40F29511 		movw	r1, #405
 615 0020 4348     		ldr	r0, .L41
 616 0022 FFF7FEFF 		bl	assert_failed
 617              	.L30:
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 618              		.loc 1 406 3 is_stmt 1
 619 0026 7B68     		ldr	r3, [r7, #4]
 620 0028 1B6B     		ldr	r3, [r3, #48]
 621 002a 002B     		cmp	r3, #0
 622 002c 13D0     		beq	.L31
 623              		.loc 1 406 3 is_stmt 0 discriminator 1
 624 002e 7B68     		ldr	r3, [r7, #4]
 625 0030 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 19


 626 0032 B3F1805F 		cmp	r3, #268435456
 627 0036 0ED0     		beq	.L31
 628              		.loc 1 406 3 discriminator 2
 629 0038 7B68     		ldr	r3, [r7, #4]
 630 003a 1B6B     		ldr	r3, [r3, #48]
 631 003c B3F1005F 		cmp	r3, #536870912
 632 0040 09D0     		beq	.L31
 633              		.loc 1 406 3 discriminator 3
 634 0042 7B68     		ldr	r3, [r7, #4]
 635 0044 1B6B     		ldr	r3, [r3, #48]
 636 0046 B3F1405F 		cmp	r3, #805306368
 637 004a 04D0     		beq	.L31
 638              		.loc 1 406 3 discriminator 4
 639 004c 4FF4CB71 		mov	r1, #406
 640 0050 3748     		ldr	r0, .L41
 641 0052 FFF7FEFF 		bl	assert_failed
 642              	.L31:
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 643              		.loc 1 409 3 is_stmt 1
 644 0056 7B68     		ldr	r3, [r7, #4]
 645 0058 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 646 005c 012B     		cmp	r3, #1
 647 005e 01D1     		bne	.L32
 648              		.loc 1 409 3 is_stmt 0 discriminator 1
 649 0060 0223     		movs	r3, #2
 650 0062 61E0     		b	.L33
 651              	.L32:
 652              		.loc 1 409 3 discriminator 2
 653 0064 7B68     		ldr	r3, [r7, #4]
 654 0066 0122     		movs	r2, #1
 655 0068 83F83C20 		strb	r2, [r3, #60]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if an injected conversion is ongoing */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_BUSY_INJ)
 656              		.loc 1 412 10 is_stmt 1 discriminator 2
 657 006c 7B68     		ldr	r3, [r7, #4]
 658 006e 93F83D30 		ldrb	r3, [r3, #61]
 659 0072 DBB2     		uxtb	r3, r3
 660              		.loc 1 412 5 discriminator 2
 661 0074 222B     		cmp	r3, #34
 662 0076 04D1     		bne	.L34
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_BUSY_INJ_REG;  
 663              		.loc 1 415 17
 664 0078 7B68     		ldr	r3, [r7, #4]
 665 007a 3222     		movs	r2, #50
 666 007c 83F83D20 		strb	r2, [r3, #61]
 667 0080 03E0     		b	.L35
 668              	.L34:
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_BUSY_REG;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 20


 669              		.loc 1 420 17
 670 0082 7B68     		ldr	r3, [r7, #4]
 671 0084 1222     		movs	r2, #18
 672 0086 83F83D20 		strb	r2, [r3, #61]
 673              	.L35:
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   } 
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 674              		.loc 1 425 11
 675 008a 7B68     		ldr	r3, [r7, #4]
 676 008c 1B68     		ldr	r3, [r3]
 677              		.loc 1 425 21
 678 008e 9B68     		ldr	r3, [r3, #8]
 679              		.loc 1 425 27
 680 0090 03F00103 		and	r3, r3, #1
 681              		.loc 1 425 5
 682 0094 012B     		cmp	r3, #1
 683 0096 18D0     		beq	.L36
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 684              		.loc 1 428 5
 685 0098 7B68     		ldr	r3, [r7, #4]
 686 009a 1B68     		ldr	r3, [r3]
 687 009c 9A68     		ldr	r2, [r3, #8]
 688 009e 7B68     		ldr	r3, [r7, #4]
 689 00a0 1B68     		ldr	r3, [r3]
 690 00a2 42F00102 		orr	r2, r2, #1
 691 00a6 9A60     		str	r2, [r3, #8]
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 692              		.loc 1 432 53
 693 00a8 224B     		ldr	r3, .L41+4
 694 00aa 1B68     		ldr	r3, [r3]
 695 00ac 224A     		ldr	r2, .L41+8
 696 00ae A2FB0323 		umull	r2, r3, r2, r3
 697 00b2 9A0C     		lsrs	r2, r3, #18
 698              		.loc 1 432 34
 699 00b4 1346     		mov	r3, r2
 700 00b6 5B00     		lsls	r3, r3, #1
 701 00b8 1344     		add	r3, r3, r2
 702              		.loc 1 432 13
 703 00ba FB60     		str	r3, [r7, #12]
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 704              		.loc 1 433 10
 705 00bc 02E0     		b	.L37
 706              	.L38:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 707              		.loc 1 435 14
 708 00be FB68     		ldr	r3, [r7, #12]
 709 00c0 013B     		subs	r3, r3, #1
 710 00c2 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 21


 711              	.L37:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 712              		.loc 1 433 19
 713 00c4 FB68     		ldr	r3, [r7, #12]
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 714              		.loc 1 433 10
 715 00c6 002B     		cmp	r3, #0
 716 00c8 F9D1     		bne	.L38
 717              	.L36:
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 718              		.loc 1 440 3
 719 00ca 7B68     		ldr	r3, [r7, #4]
 720 00cc 0022     		movs	r2, #0
 721 00ce 83F83C20 		strb	r2, [r3, #60]
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if Multimode enabled */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 722              		.loc 1 443 6
 723 00d2 1A4B     		ldr	r3, .L41+12
 724 00d4 5B68     		ldr	r3, [r3, #4]
 725 00d6 03F01F03 		and	r3, r3, #31
 726              		.loc 1 443 5
 727 00da 002B     		cmp	r3, #0
 728 00dc 0FD1     		bne	.L39
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* if no external trigger present enable software conversion of regular channels */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 729              		.loc 1 446 13
 730 00de 7B68     		ldr	r3, [r7, #4]
 731 00e0 1B68     		ldr	r3, [r3]
 732              		.loc 1 446 23
 733 00e2 9B68     		ldr	r3, [r3, #8]
 734              		.loc 1 446 29
 735 00e4 03F04053 		and	r3, r3, #805306368
 736              		.loc 1 446 7
 737 00e8 002B     		cmp	r3, #0
 738 00ea 1CD1     		bne	.L40
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Enable the selected ADC software conversion for regular group */
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 739              		.loc 1 449 11
 740 00ec 7B68     		ldr	r3, [r7, #4]
 741 00ee 1B68     		ldr	r3, [r3]
 742              		.loc 1 449 27
 743 00f0 9A68     		ldr	r2, [r3, #8]
 744              		.loc 1 449 11
 745 00f2 7B68     		ldr	r3, [r7, #4]
 746 00f4 1B68     		ldr	r3, [r3]
 747              		.loc 1 449 27
 748 00f6 42F08042 		orr	r2, r2, #1073741824
 749 00fa 9A60     		str	r2, [r3, #8]
 750 00fc 13E0     		b	.L40
 751              	.L39:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 22


 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* if instance of handle correspond to ADC1 and  no external trigger present enable software co
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 752              		.loc 1 455 13
 753 00fe 7B68     		ldr	r3, [r7, #4]
 754 0100 1B68     		ldr	r3, [r3]
 755              		.loc 1 455 7
 756 0102 0F4A     		ldr	r2, .L41+16
 757 0104 9342     		cmp	r3, r2
 758 0106 0ED1     		bne	.L40
 759              		.loc 1 455 42 discriminator 1
 760 0108 7B68     		ldr	r3, [r7, #4]
 761 010a 1B68     		ldr	r3, [r3]
 762              		.loc 1 455 52 discriminator 1
 763 010c 9B68     		ldr	r3, [r3, #8]
 764              		.loc 1 455 58 discriminator 1
 765 010e 03F04053 		and	r3, r3, #805306368
 766              		.loc 1 455 33 discriminator 1
 767 0112 002B     		cmp	r3, #0
 768 0114 07D1     		bne	.L40
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Enable the selected ADC software conversion for regular group */
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 769              		.loc 1 458 13
 770 0116 7B68     		ldr	r3, [r7, #4]
 771 0118 1B68     		ldr	r3, [r3]
 772              		.loc 1 458 29
 773 011a 9A68     		ldr	r2, [r3, #8]
 774              		.loc 1 458 13
 775 011c 7B68     		ldr	r3, [r7, #4]
 776 011e 1B68     		ldr	r3, [r3]
 777              		.loc 1 458 29
 778 0120 42F08042 		orr	r2, r2, #1073741824
 779 0124 9A60     		str	r2, [r3, #8]
 780              	.L40:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 781              		.loc 1 463 10
 782 0126 0023     		movs	r3, #0
 783              	.L33:
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 784              		.loc 1 464 1
 785 0128 1846     		mov	r0, r3
 786 012a 1037     		adds	r7, r7, #16
 787              	.LCFI25:
 788              		.cfi_def_cfa_offset 8
 789 012c BD46     		mov	sp, r7
 790              	.LCFI26:
 791              		.cfi_def_cfa_register 13
 792              		@ sp needed
 793 012e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 23


 794              	.L42:
 795              		.align	2
 796              	.L41:
 797 0130 00000000 		.word	.LC0
 798 0134 00000000 		.word	SystemCoreClock
 799 0138 83DE1B43 		.word	1125899907
 800 013c 00230140 		.word	1073816320
 801 0140 00200140 		.word	1073815552
 802              		.cfi_endproc
 803              	.LFE132:
 805              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 806              		.align	1
 807              		.global	HAL_ADC_Stop
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 812              	HAL_ADC_Stop:
 813              	.LFB133:
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 814              		.loc 1 477 1
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI27:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 83B0     		sub	sp, sp, #12
 824              	.LCFI28:
 825              		.cfi_def_cfa_offset 16
 826 0004 00AF     		add	r7, sp, #0
 827              	.LCFI29:
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable the Peripheral */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 830              		.loc 1 479 3
 831 0008 7B68     		ldr	r3, [r7, #4]
 832 000a 1B68     		ldr	r3, [r3]
 833 000c 9A68     		ldr	r2, [r3, #8]
 834 000e 7B68     		ldr	r3, [r7, #4]
 835 0010 1B68     		ldr	r3, [r3]
 836 0012 22F00102 		bic	r2, r2, #1
 837 0016 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 24


 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Change ADC state */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_READY;
 838              		.loc 1 482 15
 839 0018 7B68     		ldr	r3, [r7, #4]
 840 001a 0122     		movs	r2, #1
 841 001c 83F83D20 		strb	r2, [r3, #61]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 842              		.loc 1 485 10
 843 0020 0023     		movs	r3, #0
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 844              		.loc 1 486 1
 845 0022 1846     		mov	r0, r3
 846 0024 0C37     		adds	r7, r7, #12
 847              	.LCFI30:
 848              		.cfi_def_cfa_offset 4
 849 0026 BD46     		mov	sp, r7
 850              	.LCFI31:
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 0028 5DF8047B 		ldr	r7, [sp], #4
 854              	.LCFI32:
 855              		.cfi_restore 7
 856              		.cfi_def_cfa_offset 0
 857 002c 7047     		bx	lr
 858              		.cfi_endproc
 859              	.LFE133:
 861              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 862              		.align	1
 863              		.global	HAL_ADC_PollForConversion
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 868              	HAL_ADC_PollForConversion:
 869              	.LFB134:
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.  
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 870              		.loc 1 504 1
 871              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 25


 872              		@ args = 0, pretend = 0, frame = 16
 873              		@ frame_needed = 1, uses_anonymous_args = 0
 874 0000 80B5     		push	{r7, lr}
 875              	.LCFI33:
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 7, -8
 878              		.cfi_offset 14, -4
 879 0002 84B0     		sub	sp, sp, #16
 880              	.LCFI34:
 881              		.cfi_def_cfa_offset 24
 882 0004 00AF     		add	r7, sp, #0
 883              	.LCFI35:
 884              		.cfi_def_cfa_register 7
 885 0006 7860     		str	r0, [r7, #4]
 886 0008 3960     		str	r1, [r7]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0;
 887              		.loc 1 505 12
 888 000a 0023     		movs	r3, #0
 889 000c FB60     		str	r3, [r7, #12]
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 890              		.loc 1 513 7
 891 000e 7B68     		ldr	r3, [r7, #4]
 892 0010 1B68     		ldr	r3, [r3]
 893 0012 9B68     		ldr	r3, [r3, #8]
 894 0014 03F48063 		and	r3, r3, #1024
 895              		.loc 1 513 6
 896 0018 002B     		cmp	r3, #0
 897 001a 10D0     		beq	.L46
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 898              		.loc 1 514 7 discriminator 1
 899 001c 7B68     		ldr	r3, [r7, #4]
 900 001e 1B68     		ldr	r3, [r3]
 901 0020 9B68     		ldr	r3, [r3, #8]
 902 0022 03F48073 		and	r3, r3, #256
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 903              		.loc 1 513 57 discriminator 1
 904 0026 002B     		cmp	r3, #0
 905 0028 09D0     		beq	.L46
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_ERROR;
 906              		.loc 1 517 17
 907 002a 7B68     		ldr	r3, [r7, #4]
 908 002c 0422     		movs	r2, #4
 909 002e 83F83D20 		strb	r2, [r3, #61]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 910              		.loc 1 520 5
 911 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 26


 912 0034 0022     		movs	r2, #0
 913 0036 83F83C20 		strb	r2, [r3, #60]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 914              		.loc 1 522 12
 915 003a 0123     		movs	r3, #1
 916 003c 33E0     		b	.L47
 917              	.L46:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 918              		.loc 1 526 15
 919 003e FFF7FEFF 		bl	HAL_GetTick
 920 0042 F860     		str	r0, [r7, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 921              		.loc 1 529 8
 922 0044 18E0     		b	.L48
 923              	.L50:
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 924              		.loc 1 532 7
 925 0046 3B68     		ldr	r3, [r7]
 926 0048 B3F1FF3F 		cmp	r3, #-1
 927 004c 14D0     		beq	.L48
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 928              		.loc 1 534 9
 929 004e 3B68     		ldr	r3, [r7]
 930 0050 002B     		cmp	r3, #0
 931 0052 07D0     		beq	.L49
 932              		.loc 1 534 28 discriminator 1
 933 0054 FFF7FEFF 		bl	HAL_GetTick
 934 0058 0246     		mov	r2, r0
 935              		.loc 1 534 42 discriminator 1
 936 005a FB68     		ldr	r3, [r7, #12]
 937 005c D31A     		subs	r3, r2, r3
 938              		.loc 1 534 24 discriminator 1
 939 005e 3A68     		ldr	r2, [r7]
 940 0060 9A42     		cmp	r2, r3
 941 0062 09D2     		bcs	.L48
 942              	.L49:
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->State= HAL_ADC_STATE_TIMEOUT;
 943              		.loc 1 536 20
 944 0064 7B68     		ldr	r3, [r7, #4]
 945 0066 0322     		movs	r2, #3
 946 0068 83F83D20 		strb	r2, [r3, #61]
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 947              		.loc 1 538 9
 948 006c 7B68     		ldr	r3, [r7, #4]
 949 006e 0022     		movs	r2, #0
 950 0070 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 27


 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 951              		.loc 1 539 16
 952 0074 0323     		movs	r3, #3
 953 0076 16E0     		b	.L47
 954              	.L48:
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 955              		.loc 1 529 11
 956 0078 7B68     		ldr	r3, [r7, #4]
 957 007a 1B68     		ldr	r3, [r3]
 958 007c 1B68     		ldr	r3, [r3]
 959 007e 03F00203 		and	r3, r3, #2
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 960              		.loc 1 529 8
 961 0082 022B     		cmp	r3, #2
 962 0084 DFD1     		bne	.L50
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if an injected conversion is ready */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_EOC_INJ)
 963              		.loc 1 545 10
 964 0086 7B68     		ldr	r3, [r7, #4]
 965 0088 93F83D30 		ldrb	r3, [r3, #61]
 966 008c DBB2     		uxtb	r3, r3
 967              		.loc 1 545 5
 968 008e 252B     		cmp	r3, #37
 969 0090 04D1     		bne	.L51
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_EOC_INJ_REG;  
 970              		.loc 1 548 17
 971 0092 7B68     		ldr	r3, [r7, #4]
 972 0094 3522     		movs	r2, #53
 973 0096 83F83D20 		strb	r2, [r3, #61]
 974 009a 03E0     		b	.L52
 975              	.L51:
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_EOC_REG;
 976              		.loc 1 553 17
 977 009c 7B68     		ldr	r3, [r7, #4]
 978 009e 1522     		movs	r2, #21
 979 00a0 83F83D20 		strb	r2, [r3, #61]
 980              	.L52:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 981              		.loc 1 557 10
 982 00a4 0023     		movs	r3, #0
 983              	.L47:
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 984              		.loc 1 558 1
 985 00a6 1846     		mov	r0, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 28


 986 00a8 1037     		adds	r7, r7, #16
 987              	.LCFI36:
 988              		.cfi_def_cfa_offset 8
 989 00aa BD46     		mov	sp, r7
 990              	.LCFI37:
 991              		.cfi_def_cfa_register 13
 992              		@ sp needed
 993 00ac 80BD     		pop	{r7, pc}
 994              		.cfi_endproc
 995              	.LFE134:
 997              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 998              		.align	1
 999              		.global	HAL_ADC_PollForEvent
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	HAL_ADC_PollForEvent:
 1005              	.LFB135:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType: the ADC event type.
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.   
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1006              		.loc 1 572 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 24
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI38:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 86B0     		sub	sp, sp, #24
 1016              	.LCFI39:
 1017              		.cfi_def_cfa_offset 32
 1018 0004 00AF     		add	r7, sp, #0
 1019              	.LCFI40:
 1020              		.cfi_def_cfa_register 7
 1021 0006 F860     		str	r0, [r7, #12]
 1022 0008 B960     		str	r1, [r7, #8]
 1023 000a 7A60     		str	r2, [r7, #4]
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0;
 1024              		.loc 1 573 12
 1025 000c 0023     		movs	r3, #0
 1026 000e 7B61     		str	r3, [r7, #20]
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 29


 1027              		.loc 1 576 3
 1028 0010 BB68     		ldr	r3, [r7, #8]
 1029 0012 012B     		cmp	r3, #1
 1030 0014 07D0     		beq	.L54
 1031              		.loc 1 576 3 is_stmt 0 discriminator 1
 1032 0016 BB68     		ldr	r3, [r7, #8]
 1033 0018 202B     		cmp	r3, #32
 1034 001a 04D0     		beq	.L54
 1035              		.loc 1 576 3 discriminator 2
 1036 001c 4FF41071 		mov	r1, #576
 1037 0020 2148     		ldr	r0, .L61
 1038 0022 FFF7FEFF 		bl	assert_failed
 1039              	.L54:
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1040              		.loc 1 579 15 is_stmt 1
 1041 0026 FFF7FEFF 		bl	HAL_GetTick
 1042 002a 7861     		str	r0, [r7, #20]
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 1043              		.loc 1 582 8
 1044 002c 18E0     		b	.L55
 1045              	.L58:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 1046              		.loc 1 585 7
 1047 002e 7B68     		ldr	r3, [r7, #4]
 1048 0030 B3F1FF3F 		cmp	r3, #-1
 1049 0034 14D0     		beq	.L55
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1050              		.loc 1 587 9
 1051 0036 7B68     		ldr	r3, [r7, #4]
 1052 0038 002B     		cmp	r3, #0
 1053 003a 07D0     		beq	.L56
 1054              		.loc 1 587 28 discriminator 1
 1055 003c FFF7FEFF 		bl	HAL_GetTick
 1056 0040 0246     		mov	r2, r0
 1057              		.loc 1 587 42 discriminator 1
 1058 0042 7B69     		ldr	r3, [r7, #20]
 1059 0044 D31A     		subs	r3, r2, r3
 1060              		.loc 1 587 24 discriminator 1
 1061 0046 7A68     		ldr	r2, [r7, #4]
 1062 0048 9A42     		cmp	r2, r3
 1063 004a 09D2     		bcs	.L55
 1064              	.L56:
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->State= HAL_ADC_STATE_TIMEOUT;
 1065              		.loc 1 589 20
 1066 004c FB68     		ldr	r3, [r7, #12]
 1067 004e 0322     		movs	r2, #3
 1068 0050 83F83D20 		strb	r2, [r3, #61]
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 30


 1069              		.loc 1 591 9
 1070 0054 FB68     		ldr	r3, [r7, #12]
 1071 0056 0022     		movs	r2, #0
 1072 0058 83F83C20 		strb	r2, [r3, #60]
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 1073              		.loc 1 592 16
 1074 005c 0323     		movs	r3, #3
 1075 005e 1EE0     		b	.L57
 1076              	.L55:
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1077              		.loc 1 582 11
 1078 0060 FB68     		ldr	r3, [r7, #12]
 1079 0062 1B68     		ldr	r3, [r3]
 1080 0064 1A68     		ldr	r2, [r3]
 1081 0066 BB68     		ldr	r3, [r7, #8]
 1082 0068 1340     		ands	r3, r3, r2
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 1083              		.loc 1 582 8
 1084 006a BA68     		ldr	r2, [r7, #8]
 1085 006c 9A42     		cmp	r2, r3
 1086 006e DED1     		bne	.L58
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check analog watchdog flag */
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 1087              		.loc 1 598 5
 1088 0070 BB68     		ldr	r3, [r7, #8]
 1089 0072 012B     		cmp	r3, #1
 1090 0074 09D1     		bne	.L59
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      /* Change ADC state */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      hadc->State = HAL_ADC_STATE_AWD;
 1091              		.loc 1 601 18
 1092 0076 FB68     		ldr	r3, [r7, #12]
 1093 0078 0622     		movs	r2, #6
 1094 007a 83F83D20 		strb	r2, [r3, #61]
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      /* Clear the ADCx's analog watchdog flag */
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1095              		.loc 1 604 6
 1096 007e FB68     		ldr	r3, [r7, #12]
 1097 0080 1B68     		ldr	r3, [r3]
 1098 0082 6FF00102 		mvn	r2, #1
 1099 0086 1A60     		str	r2, [r3]
 1100 0088 08E0     		b	.L60
 1101              	.L59:
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      /* Change ADC state */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      hadc->State = HAL_ADC_STATE_ERROR;
 1102              		.loc 1 609 18
 1103 008a FB68     		ldr	r3, [r7, #12]
 1104 008c 0422     		movs	r2, #4
 1105 008e 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 31


 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      /* Clear the ADCx's Overrun flag */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1106              		.loc 1 612 6
 1107 0092 FB68     		ldr	r3, [r7, #12]
 1108 0094 1B68     		ldr	r3, [r3]
 1109 0096 6FF02002 		mvn	r2, #32
 1110 009a 1A60     		str	r2, [r3]
 1111              	.L60:
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1112              		.loc 1 616 10
 1113 009c 0023     		movs	r3, #0
 1114              	.L57:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1115              		.loc 1 617 1
 1116 009e 1846     		mov	r0, r3
 1117 00a0 1837     		adds	r7, r7, #24
 1118              	.LCFI41:
 1119              		.cfi_def_cfa_offset 8
 1120 00a2 BD46     		mov	sp, r7
 1121              	.LCFI42:
 1122              		.cfi_def_cfa_register 13
 1123              		@ sp needed
 1124 00a4 80BD     		pop	{r7, pc}
 1125              	.L62:
 1126 00a6 00BF     		.align	2
 1127              	.L61:
 1128 00a8 00000000 		.word	.LC0
 1129              		.cfi_endproc
 1130              	.LFE135:
 1132              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1133              		.align	1
 1134              		.global	HAL_ADC_Start_IT
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1139              	HAL_ADC_Start_IT:
 1140              	.LFB136:
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1141              		.loc 1 627 1
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 16
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              	.LCFI43:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 32


 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 84B0     		sub	sp, sp, #16
 1151              	.LCFI44:
 1152              		.cfi_def_cfa_offset 24
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI45:
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0;
 1157              		.loc 1 628 17
 1158 0008 0023     		movs	r3, #0
 1159 000a FB60     		str	r3, [r7, #12]
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1160              		.loc 1 631 3
 1161 000c 7B68     		ldr	r3, [r7, #4]
 1162 000e 9B69     		ldr	r3, [r3, #24]
 1163 0010 002B     		cmp	r3, #0
 1164 0012 08D0     		beq	.L64
 1165              		.loc 1 631 3 is_stmt 0 discriminator 1
 1166 0014 7B68     		ldr	r3, [r7, #4]
 1167 0016 9B69     		ldr	r3, [r3, #24]
 1168 0018 012B     		cmp	r3, #1
 1169 001a 04D0     		beq	.L64
 1170              		.loc 1 631 3 discriminator 2
 1171 001c 40F27721 		movw	r1, #631
 1172 0020 4D48     		ldr	r0, .L75
 1173 0022 FFF7FEFF 		bl	assert_failed
 1174              	.L64:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 1175              		.loc 1 632 3 is_stmt 1
 1176 0026 7B68     		ldr	r3, [r7, #4]
 1177 0028 1B6B     		ldr	r3, [r3, #48]
 1178 002a 002B     		cmp	r3, #0
 1179 002c 13D0     		beq	.L65
 1180              		.loc 1 632 3 is_stmt 0 discriminator 1
 1181 002e 7B68     		ldr	r3, [r7, #4]
 1182 0030 1B6B     		ldr	r3, [r3, #48]
 1183 0032 B3F1805F 		cmp	r3, #268435456
 1184 0036 0ED0     		beq	.L65
 1185              		.loc 1 632 3 discriminator 2
 1186 0038 7B68     		ldr	r3, [r7, #4]
 1187 003a 1B6B     		ldr	r3, [r3, #48]
 1188 003c B3F1005F 		cmp	r3, #536870912
 1189 0040 09D0     		beq	.L65
 1190              		.loc 1 632 3 discriminator 3
 1191 0042 7B68     		ldr	r3, [r7, #4]
 1192 0044 1B6B     		ldr	r3, [r3, #48]
 1193 0046 B3F1405F 		cmp	r3, #805306368
 1194 004a 04D0     		beq	.L65
 1195              		.loc 1 632 3 discriminator 4
 1196 004c 4FF41E71 		mov	r1, #632
 1197 0050 4148     		ldr	r0, .L75
 1198 0052 FFF7FEFF 		bl	assert_failed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 33


 1199              	.L65:
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1200              		.loc 1 635 3 is_stmt 1
 1201 0056 7B68     		ldr	r3, [r7, #4]
 1202 0058 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1203 005c 012B     		cmp	r3, #1
 1204 005e 01D1     		bne	.L66
 1205              		.loc 1 635 3 is_stmt 0 discriminator 1
 1206 0060 0223     		movs	r3, #2
 1207 0062 74E0     		b	.L67
 1208              	.L66:
 1209              		.loc 1 635 3 discriminator 2
 1210 0064 7B68     		ldr	r3, [r7, #4]
 1211 0066 0122     		movs	r2, #1
 1212 0068 83F83C20 		strb	r2, [r3, #60]
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if an injected conversion is ongoing */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_BUSY_INJ)
 1213              		.loc 1 638 10 is_stmt 1 discriminator 2
 1214 006c 7B68     		ldr	r3, [r7, #4]
 1215 006e 93F83D30 		ldrb	r3, [r3, #61]
 1216 0072 DBB2     		uxtb	r3, r3
 1217              		.loc 1 638 5 discriminator 2
 1218 0074 222B     		cmp	r3, #34
 1219 0076 04D1     		bne	.L68
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_BUSY_INJ_REG;  
 1220              		.loc 1 641 17
 1221 0078 7B68     		ldr	r3, [r7, #4]
 1222 007a 3222     		movs	r2, #50
 1223 007c 83F83D20 		strb	r2, [r3, #61]
 1224 0080 03E0     		b	.L69
 1225              	.L68:
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_BUSY_REG;
 1226              		.loc 1 646 17
 1227 0082 7B68     		ldr	r3, [r7, #4]
 1228 0084 1222     		movs	r2, #18
 1229 0086 83F83D20 		strb	r2, [r3, #61]
 1230              	.L69:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   } 
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to none */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode = HAL_ADC_ERROR_NONE;
 1231              		.loc 1 650 19
 1232 008a 7B68     		ldr	r3, [r7, #4]
 1233 008c 0022     		movs	r2, #0
 1234 008e 1A64     		str	r2, [r3, #64]
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Tstab time the ADC's stabilization */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 34


 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1235              		.loc 1 654 11
 1236 0090 7B68     		ldr	r3, [r7, #4]
 1237 0092 1B68     		ldr	r3, [r3]
 1238              		.loc 1 654 21
 1239 0094 9B68     		ldr	r3, [r3, #8]
 1240              		.loc 1 654 27
 1241 0096 03F00103 		and	r3, r3, #1
 1242              		.loc 1 654 5
 1243 009a 012B     		cmp	r3, #1
 1244 009c 18D0     		beq	.L70
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1245              		.loc 1 657 5
 1246 009e 7B68     		ldr	r3, [r7, #4]
 1247 00a0 1B68     		ldr	r3, [r3]
 1248 00a2 9A68     		ldr	r2, [r3, #8]
 1249 00a4 7B68     		ldr	r3, [r7, #4]
 1250 00a6 1B68     		ldr	r3, [r3]
 1251 00a8 42F00102 		orr	r2, r2, #1
 1252 00ac 9A60     		str	r2, [r3, #8]
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 1253              		.loc 1 661 53
 1254 00ae 2B4B     		ldr	r3, .L75+4
 1255 00b0 1B68     		ldr	r3, [r3]
 1256 00b2 2B4A     		ldr	r2, .L75+8
 1257 00b4 A2FB0323 		umull	r2, r3, r2, r3
 1258 00b8 9A0C     		lsrs	r2, r3, #18
 1259              		.loc 1 661 34
 1260 00ba 1346     		mov	r3, r2
 1261 00bc 5B00     		lsls	r3, r3, #1
 1262 00be 1344     		add	r3, r3, r2
 1263              		.loc 1 661 13
 1264 00c0 FB60     		str	r3, [r7, #12]
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 1265              		.loc 1 662 10
 1266 00c2 02E0     		b	.L71
 1267              	.L72:
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1268              		.loc 1 664 14
 1269 00c4 FB68     		ldr	r3, [r7, #12]
 1270 00c6 013B     		subs	r3, r3, #1
 1271 00c8 FB60     		str	r3, [r7, #12]
 1272              	.L71:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 1273              		.loc 1 662 19
 1274 00ca FB68     		ldr	r3, [r7, #12]
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 1275              		.loc 1 662 10
 1276 00cc 002B     		cmp	r3, #0
 1277 00ce F9D1     		bne	.L72
 1278              	.L70:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 35


 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC overrun interrupt */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1279              		.loc 1 669 3
 1280 00d0 7B68     		ldr	r3, [r7, #4]
 1281 00d2 1B68     		ldr	r3, [r3]
 1282 00d4 5A68     		ldr	r2, [r3, #4]
 1283 00d6 7B68     		ldr	r3, [r7, #4]
 1284 00d8 1B68     		ldr	r3, [r3]
 1285 00da 42F08062 		orr	r2, r2, #67108864
 1286 00de 5A60     		str	r2, [r3, #4]
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC end of conversion interrupt for regular group */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
 1287              		.loc 1 672 3
 1288 00e0 7B68     		ldr	r3, [r7, #4]
 1289 00e2 1B68     		ldr	r3, [r3]
 1290 00e4 5A68     		ldr	r2, [r3, #4]
 1291 00e6 7B68     		ldr	r3, [r7, #4]
 1292 00e8 1B68     		ldr	r3, [r3]
 1293 00ea 42F02002 		orr	r2, r2, #32
 1294 00ee 5A60     		str	r2, [r3, #4]
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1295              		.loc 1 675 3
 1296 00f0 7B68     		ldr	r3, [r7, #4]
 1297 00f2 0022     		movs	r2, #0
 1298 00f4 83F83C20 		strb	r2, [r3, #60]
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if Multimode enabled */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 1299              		.loc 1 678 6
 1300 00f8 1A4B     		ldr	r3, .L75+12
 1301 00fa 5B68     		ldr	r3, [r3, #4]
 1302 00fc 03F01F03 		and	r3, r3, #31
 1303              		.loc 1 678 5
 1304 0100 002B     		cmp	r3, #0
 1305 0102 0FD1     		bne	.L73
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* if no external trigger present enable software conversion of regular channels */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1306              		.loc 1 681 13
 1307 0104 7B68     		ldr	r3, [r7, #4]
 1308 0106 1B68     		ldr	r3, [r3]
 1309              		.loc 1 681 23
 1310 0108 9B68     		ldr	r3, [r3, #8]
 1311              		.loc 1 681 29
 1312 010a 03F04053 		and	r3, r3, #805306368
 1313              		.loc 1 681 7
 1314 010e 002B     		cmp	r3, #0
 1315 0110 1CD1     		bne	.L74
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Enable the selected ADC software conversion for regular group */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 36


 1316              		.loc 1 684 11
 1317 0112 7B68     		ldr	r3, [r7, #4]
 1318 0114 1B68     		ldr	r3, [r3]
 1319              		.loc 1 684 27
 1320 0116 9A68     		ldr	r2, [r3, #8]
 1321              		.loc 1 684 11
 1322 0118 7B68     		ldr	r3, [r7, #4]
 1323 011a 1B68     		ldr	r3, [r3]
 1324              		.loc 1 684 27
 1325 011c 42F08042 		orr	r2, r2, #1073741824
 1326 0120 9A60     		str	r2, [r3, #8]
 1327 0122 13E0     		b	.L74
 1328              	.L73:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* if instance of handle correspond to ADC1 and  no external trigger present enable software co
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((hadc->Instance == (ADC_TypeDef*)0x40012000) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RE
 1329              		.loc 1 690 13
 1330 0124 7B68     		ldr	r3, [r7, #4]
 1331 0126 1B68     		ldr	r3, [r3]
 1332              		.loc 1 690 7
 1333 0128 0F4A     		ldr	r2, .L75+16
 1334 012a 9342     		cmp	r3, r2
 1335 012c 0ED1     		bne	.L74
 1336              		.loc 1 690 62 discriminator 1
 1337 012e 7B68     		ldr	r3, [r7, #4]
 1338 0130 1B68     		ldr	r3, [r3]
 1339              		.loc 1 690 72 discriminator 1
 1340 0132 9B68     		ldr	r3, [r3, #8]
 1341              		.loc 1 690 78 discriminator 1
 1342 0134 03F04053 		and	r3, r3, #805306368
 1343              		.loc 1 690 53 discriminator 1
 1344 0138 002B     		cmp	r3, #0
 1345 013a 07D1     		bne	.L74
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Enable the selected ADC software conversion for regular group */
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1346              		.loc 1 693 13
 1347 013c 7B68     		ldr	r3, [r7, #4]
 1348 013e 1B68     		ldr	r3, [r3]
 1349              		.loc 1 693 29
 1350 0140 9A68     		ldr	r2, [r3, #8]
 1351              		.loc 1 693 13
 1352 0142 7B68     		ldr	r3, [r7, #4]
 1353 0144 1B68     		ldr	r3, [r3]
 1354              		.loc 1 693 29
 1355 0146 42F08042 		orr	r2, r2, #1073741824
 1356 014a 9A60     		str	r2, [r3, #8]
 1357              	.L74:
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1358              		.loc 1 698 10
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 37


 1359 014c 0023     		movs	r3, #0
 1360              	.L67:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1361              		.loc 1 699 1
 1362 014e 1846     		mov	r0, r3
 1363 0150 1037     		adds	r7, r7, #16
 1364              	.LCFI46:
 1365              		.cfi_def_cfa_offset 8
 1366 0152 BD46     		mov	sp, r7
 1367              	.LCFI47:
 1368              		.cfi_def_cfa_register 13
 1369              		@ sp needed
 1370 0154 80BD     		pop	{r7, pc}
 1371              	.L76:
 1372 0156 00BF     		.align	2
 1373              	.L75:
 1374 0158 00000000 		.word	.LC0
 1375 015c 00000000 		.word	SystemCoreClock
 1376 0160 83DE1B43 		.word	1125899907
 1377 0164 00230140 		.word	1073816320
 1378 0168 00200140 		.word	1073815552
 1379              		.cfi_endproc
 1380              	.LFE136:
 1382              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1383              		.align	1
 1384              		.global	HAL_ADC_Stop_IT
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1389              	HAL_ADC_Stop_IT:
 1390              	.LFB137:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1391              		.loc 1 711 1
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 8
 1394              		@ frame_needed = 1, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396 0000 80B4     		push	{r7}
 1397              	.LCFI48:
 1398              		.cfi_def_cfa_offset 4
 1399              		.cfi_offset 7, -4
 1400 0002 83B0     		sub	sp, sp, #12
 1401              	.LCFI49:
 1402              		.cfi_def_cfa_offset 16
 1403 0004 00AF     		add	r7, sp, #0
 1404              	.LCFI50:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 38


 1405              		.cfi_def_cfa_register 7
 1406 0006 7860     		str	r0, [r7, #4]
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable the ADC end of conversion interrupt for regular group */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1407              		.loc 1 713 3
 1408 0008 7B68     		ldr	r3, [r7, #4]
 1409 000a 1B68     		ldr	r3, [r3]
 1410 000c 5A68     		ldr	r2, [r3, #4]
 1411 000e 7B68     		ldr	r3, [r7, #4]
 1412 0010 1B68     		ldr	r3, [r3]
 1413 0012 22F02002 		bic	r2, r2, #32
 1414 0016 5A60     		str	r2, [r3, #4]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable the ADC end of conversion interrupt for injected group */
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, ADC_CR1_JEOCIE);
 1415              		.loc 1 716 3
 1416 0018 7B68     		ldr	r3, [r7, #4]
 1417 001a 1B68     		ldr	r3, [r3]
 1418 001c 5A68     		ldr	r2, [r3, #4]
 1419 001e 7B68     		ldr	r3, [r7, #4]
 1420 0020 1B68     		ldr	r3, [r3]
 1421 0022 22F08002 		bic	r2, r2, #128
 1422 0026 5A60     		str	r2, [r3, #4]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the Peripheral */
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1423              		.loc 1 719 3
 1424 0028 7B68     		ldr	r3, [r7, #4]
 1425 002a 1B68     		ldr	r3, [r3]
 1426 002c 9A68     		ldr	r2, [r3, #8]
 1427 002e 7B68     		ldr	r3, [r7, #4]
 1428 0030 1B68     		ldr	r3, [r3]
 1429 0032 22F00102 		bic	r2, r2, #1
 1430 0036 9A60     		str	r2, [r3, #8]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Change ADC state */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_READY;
 1431              		.loc 1 722 15
 1432 0038 7B68     		ldr	r3, [r7, #4]
 1433 003a 0122     		movs	r2, #1
 1434 003c 83F83D20 		strb	r2, [r3, #61]
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1435              		.loc 1 725 10
 1436 0040 0023     		movs	r3, #0
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1437              		.loc 1 726 1
 1438 0042 1846     		mov	r0, r3
 1439 0044 0C37     		adds	r7, r7, #12
 1440              	.LCFI51:
 1441              		.cfi_def_cfa_offset 4
 1442 0046 BD46     		mov	sp, r7
 1443              	.LCFI52:
 1444              		.cfi_def_cfa_register 13
 1445              		@ sp needed
 1446 0048 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 39


 1447              	.LCFI53:
 1448              		.cfi_restore 7
 1449              		.cfi_def_cfa_offset 0
 1450 004c 7047     		bx	lr
 1451              		.cfi_endproc
 1452              	.LFE137:
 1454              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1455              		.align	1
 1456              		.global	HAL_ADC_IRQHandler
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1461              	HAL_ADC_IRQHandler:
 1462              	.LFB138:
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1463              		.loc 1 735 1
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 16
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467 0000 80B5     		push	{r7, lr}
 1468              	.LCFI54:
 1469              		.cfi_def_cfa_offset 8
 1470              		.cfi_offset 7, -8
 1471              		.cfi_offset 14, -4
 1472 0002 84B0     		sub	sp, sp, #16
 1473              	.LCFI55:
 1474              		.cfi_def_cfa_offset 24
 1475 0004 00AF     		add	r7, sp, #0
 1476              	.LCFI56:
 1477              		.cfi_def_cfa_register 7
 1478 0006 7860     		str	r0, [r7, #4]
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 1479              		.loc 1 736 12
 1480 0008 0023     		movs	r3, #0
 1481 000a FB60     		str	r3, [r7, #12]
 1482              		.loc 1 736 22
 1483 000c 0023     		movs	r3, #0
 1484 000e BB60     		str	r3, [r7, #8]
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1485              		.loc 1 739 3
 1486 0010 7B68     		ldr	r3, [r7, #4]
 1487 0012 9B69     		ldr	r3, [r3, #24]
 1488 0014 002B     		cmp	r3, #0
 1489 0016 08D0     		beq	.L80
 1490              		.loc 1 739 3 is_stmt 0 discriminator 1
 1491 0018 7B68     		ldr	r3, [r7, #4]
 1492 001a 9B69     		ldr	r3, [r3, #24]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 40


 1493 001c 012B     		cmp	r3, #1
 1494 001e 04D0     		beq	.L80
 1495              		.loc 1 739 3 discriminator 2
 1496 0020 40F2E321 		movw	r1, #739
 1497 0024 5D48     		ldr	r0, .L98
 1498 0026 FFF7FEFF 		bl	assert_failed
 1499              	.L80:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 1500              		.loc 1 740 3 is_stmt 1
 1501 002a 7B68     		ldr	r3, [r7, #4]
 1502 002c 1B6A     		ldr	r3, [r3, #32]
 1503 002e 002B     		cmp	r3, #0
 1504 0030 03D0     		beq	.L81
 1505              		.loc 1 740 3 is_stmt 0 discriminator 2
 1506 0032 7B68     		ldr	r3, [r7, #4]
 1507 0034 1B6A     		ldr	r3, [r3, #32]
 1508 0036 102B     		cmp	r3, #16
 1509 0038 04D9     		bls	.L82
 1510              	.L81:
 1511              		.loc 1 740 3 discriminator 3
 1512 003a 4FF43971 		mov	r1, #740
 1513 003e 5748     		ldr	r0, .L98
 1514 0040 FFF7FEFF 		bl	assert_failed
 1515              	.L82:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 1516              		.loc 1 741 3 is_stmt 1
 1517 0044 7B68     		ldr	r3, [r7, #4]
 1518 0046 5B69     		ldr	r3, [r3, #20]
 1519 0048 012B     		cmp	r3, #1
 1520 004a 0CD0     		beq	.L83
 1521              		.loc 1 741 3 is_stmt 0 discriminator 1
 1522 004c 7B68     		ldr	r3, [r7, #4]
 1523 004e 5B69     		ldr	r3, [r3, #20]
 1524 0050 002B     		cmp	r3, #0
 1525 0052 08D0     		beq	.L83
 1526              		.loc 1 741 3 discriminator 2
 1527 0054 7B68     		ldr	r3, [r7, #4]
 1528 0056 5B69     		ldr	r3, [r3, #20]
 1529 0058 022B     		cmp	r3, #2
 1530 005a 04D0     		beq	.L83
 1531              		.loc 1 741 3 discriminator 3
 1532 005c 40F2E521 		movw	r1, #741
 1533 0060 4E48     		ldr	r0, .L98
 1534 0062 FFF7FEFF 		bl	assert_failed
 1535              	.L83:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
 1536              		.loc 1 743 10 is_stmt 1
 1537 0066 7B68     		ldr	r3, [r7, #4]
 1538 0068 1B68     		ldr	r3, [r3]
 1539 006a 1B68     		ldr	r3, [r3]
 1540 006c 03F00203 		and	r3, r3, #2
 1541 0070 022B     		cmp	r3, #2
 1542 0072 0CBF     		ite	eq
 1543 0074 0123     		moveq	r3, #1
 1544 0076 0023     		movne	r3, #0
 1545 0078 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 41


 1546              		.loc 1 743 8
 1547 007a FB60     		str	r3, [r7, #12]
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1548              		.loc 1 744 10
 1549 007c 7B68     		ldr	r3, [r7, #4]
 1550 007e 1B68     		ldr	r3, [r3]
 1551 0080 5B68     		ldr	r3, [r3, #4]
 1552 0082 03F02003 		and	r3, r3, #32
 1553 0086 202B     		cmp	r3, #32
 1554 0088 0CBF     		ite	eq
 1555 008a 0123     		moveq	r3, #1
 1556 008c 0023     		movne	r3, #0
 1557 008e DBB2     		uxtb	r3, r3
 1558              		.loc 1 744 8
 1559 0090 BB60     		str	r3, [r7, #8]
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1560              		.loc 1 746 5
 1561 0092 FB68     		ldr	r3, [r7, #12]
 1562 0094 002B     		cmp	r3, #0
 1563 0096 5AD0     		beq	.L84
 1564              		.loc 1 746 11 discriminator 1
 1565 0098 BB68     		ldr	r3, [r7, #8]
 1566 009a 002B     		cmp	r3, #0
 1567 009c 57D0     		beq	.L84
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if an injected conversion is ready */
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(hadc->State == HAL_ADC_STATE_EOC_INJ)
 1568              		.loc 1 749 12
 1569 009e 7B68     		ldr	r3, [r7, #4]
 1570 00a0 93F83D30 		ldrb	r3, [r3, #61]
 1571 00a4 DBB2     		uxtb	r3, r3
 1572              		.loc 1 749 7
 1573 00a6 252B     		cmp	r3, #37
 1574 00a8 04D1     		bne	.L85
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Change ADC state */
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_EOC_INJ_REG;  
 1575              		.loc 1 752 19
 1576 00aa 7B68     		ldr	r3, [r7, #4]
 1577 00ac 3522     		movs	r2, #53
 1578 00ae 83F83D20 		strb	r2, [r3, #61]
 1579 00b2 03E0     		b	.L86
 1580              	.L85:
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Change ADC state */
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_EOC_REG;
 1581              		.loc 1 757 19
 1582 00b4 7B68     		ldr	r3, [r7, #4]
 1583 00b6 1522     		movs	r2, #21
 1584 00b8 83F83D20 		strb	r2, [r3, #61]
 1585              	.L86:
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((hadc->Init.ContinuousConvMode == DISABLE) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESE
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 42


 1586              		.loc 1 760 19
 1587 00bc 7B68     		ldr	r3, [r7, #4]
 1588 00be 9B69     		ldr	r3, [r3, #24]
 1589              		.loc 1 760 7
 1590 00c0 002B     		cmp	r3, #0
 1591 00c2 3CD1     		bne	.L87
 1592              		.loc 1 760 60 discriminator 1
 1593 00c4 7B68     		ldr	r3, [r7, #4]
 1594 00c6 1B68     		ldr	r3, [r3]
 1595              		.loc 1 760 70 discriminator 1
 1596 00c8 9B68     		ldr	r3, [r3, #8]
 1597              		.loc 1 760 76 discriminator 1
 1598 00ca 03F04053 		and	r3, r3, #805306368
 1599              		.loc 1 760 51 discriminator 1
 1600 00ce 002B     		cmp	r3, #0
 1601 00d0 35D1     		bne	.L87
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if(hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 1602              		.loc 1 762 20
 1603 00d2 7B68     		ldr	r3, [r7, #4]
 1604 00d4 5B69     		ldr	r3, [r3, #20]
 1605              		.loc 1 762 9
 1606 00d6 002B     		cmp	r3, #0
 1607 00d8 10D1     		bne	.L88
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {   
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* DISABLE the ADC end of conversion interrupt for regular group */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1608              		.loc 1 765 9
 1609 00da 7B68     		ldr	r3, [r7, #4]
 1610 00dc 1B68     		ldr	r3, [r3]
 1611 00de 5A68     		ldr	r2, [r3, #4]
 1612 00e0 7B68     		ldr	r3, [r7, #4]
 1613 00e2 1B68     		ldr	r3, [r3]
 1614 00e4 22F02002 		bic	r2, r2, #32
 1615 00e8 5A60     		str	r2, [r3, #4]
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* DISABLE the ADC overrun interrupt */
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1616              		.loc 1 768 9
 1617 00ea 7B68     		ldr	r3, [r7, #4]
 1618 00ec 1B68     		ldr	r3, [r3]
 1619 00ee 5A68     		ldr	r2, [r3, #4]
 1620 00f0 7B68     		ldr	r3, [r7, #4]
 1621 00f2 1B68     		ldr	r3, [r3]
 1622 00f4 22F08062 		bic	r2, r2, #67108864
 1623 00f8 5A60     		str	r2, [r3, #4]
 1624 00fa 20E0     		b	.L87
 1625              	.L88:
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       else
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if (hadc->NbrOfCurrentConversionRank == 0)
 1626              		.loc 1 772 17
 1627 00fc 7B68     		ldr	r3, [r7, #4]
 1628 00fe 5B6B     		ldr	r3, [r3, #52]
 1629              		.loc 1 772 12
 1630 0100 002B     		cmp	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 43


 1631 0102 03D1     		bne	.L89
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->NbrOfCurrentConversionRank = hadc->Init.NbrOfConversion;
 1632              		.loc 1 774 56
 1633 0104 7B68     		ldr	r3, [r7, #4]
 1634 0106 1A6A     		ldr	r2, [r3, #32]
 1635              		.loc 1 774 44
 1636 0108 7B68     		ldr	r3, [r7, #4]
 1637 010a 5A63     		str	r2, [r3, #52]
 1638              	.L89:
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Decrement the number of conversion when an interrupt occurs */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->NbrOfCurrentConversionRank--;
 1639              		.loc 1 778 13
 1640 010c 7B68     		ldr	r3, [r7, #4]
 1641 010e 5B6B     		ldr	r3, [r3, #52]
 1642              		.loc 1 778 41
 1643 0110 5A1E     		subs	r2, r3, #1
 1644 0112 7B68     		ldr	r3, [r7, #4]
 1645 0114 5A63     		str	r2, [r3, #52]
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Check if all conversions are finished */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         if(hadc->NbrOfCurrentConversionRank == 0)
 1646              		.loc 1 781 16
 1647 0116 7B68     		ldr	r3, [r7, #4]
 1648 0118 5B6B     		ldr	r3, [r3, #52]
 1649              		.loc 1 781 11
 1650 011a 002B     		cmp	r3, #0
 1651 011c 0FD1     		bne	.L87
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         {
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* DISABLE the ADC end of conversion interrupt for regular group */
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1652              		.loc 1 784 11
 1653 011e 7B68     		ldr	r3, [r7, #4]
 1654 0120 1B68     		ldr	r3, [r3]
 1655 0122 5A68     		ldr	r2, [r3, #4]
 1656 0124 7B68     		ldr	r3, [r7, #4]
 1657 0126 1B68     		ldr	r3, [r3]
 1658 0128 22F02002 		bic	r2, r2, #32
 1659 012c 5A60     		str	r2, [r3, #4]
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           /* DISABLE the ADC overrun interrupt */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1660              		.loc 1 787 11
 1661 012e 7B68     		ldr	r3, [r7, #4]
 1662 0130 1B68     		ldr	r3, [r3]
 1663 0132 5A68     		ldr	r2, [r3, #4]
 1664 0134 7B68     		ldr	r3, [r7, #4]
 1665 0136 1B68     		ldr	r3, [r3]
 1666 0138 22F08062 		bic	r2, r2, #67108864
 1667 013c 5A60     		str	r2, [r3, #4]
 1668              	.L87:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         }
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 44


 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 1669              		.loc 1 793 5
 1670 013e 7868     		ldr	r0, [r7, #4]
 1671 0140 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Clear the ADCx flag for regular end of conversion */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc,ADC_FLAG_EOC);
 1672              		.loc 1 796 5
 1673 0144 7B68     		ldr	r3, [r7, #4]
 1674 0146 1B68     		ldr	r3, [r3]
 1675 0148 6FF00202 		mvn	r2, #2
 1676 014c 1A60     		str	r2, [r3]
 1677              	.L84:
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
 1678              		.loc 1 799 10
 1679 014e 7B68     		ldr	r3, [r7, #4]
 1680 0150 1B68     		ldr	r3, [r3]
 1681 0152 1B68     		ldr	r3, [r3]
 1682 0154 03F00403 		and	r3, r3, #4
 1683 0158 042B     		cmp	r3, #4
 1684 015a 0CBF     		ite	eq
 1685 015c 0123     		moveq	r3, #1
 1686 015e 0023     		movne	r3, #0
 1687 0160 DBB2     		uxtb	r3, r3
 1688              		.loc 1 799 8
 1689 0162 FB60     		str	r3, [r7, #12]
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 1690              		.loc 1 800 10
 1691 0164 7B68     		ldr	r3, [r7, #4]
 1692 0166 1B68     		ldr	r3, [r3]
 1693 0168 5B68     		ldr	r3, [r3, #4]
 1694 016a 03F08003 		and	r3, r3, #128
 1695 016e 802B     		cmp	r3, #128
 1696 0170 0CBF     		ite	eq
 1697 0172 0123     		moveq	r3, #1
 1698 0174 0023     		movne	r3, #0
 1699 0176 DBB2     		uxtb	r3, r3
 1700              		.loc 1 800 8
 1701 0178 BB60     		str	r3, [r7, #8]
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1702              		.loc 1 802 5
 1703 017a FB68     		ldr	r3, [r7, #12]
 1704 017c 002B     		cmp	r3, #0
 1705 017e 43D0     		beq	.L90
 1706              		.loc 1 802 11 discriminator 1
 1707 0180 BB68     		ldr	r3, [r7, #8]
 1708 0182 002B     		cmp	r3, #0
 1709 0184 40D0     		beq	.L90
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if a regular conversion is ready */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(hadc->State == HAL_ADC_STATE_EOC_REG)
 1710              		.loc 1 805 12
 1711 0186 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 45


 1712 0188 93F83D30 		ldrb	r3, [r3, #61]
 1713 018c DBB2     		uxtb	r3, r3
 1714              		.loc 1 805 7
 1715 018e 152B     		cmp	r3, #21
 1716 0190 06D1     		bne	.L91
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Change ADC state */
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_EOC_INJ_REG;  
 1717              		.loc 1 808 19
 1718 0192 7B68     		ldr	r3, [r7, #4]
 1719 0194 3522     		movs	r2, #53
 1720 0196 83F83D20 		strb	r2, [r3, #61]
 1721 019a 05E0     		b	.L92
 1722              	.L99:
 1723              		.align	2
 1724              	.L98:
 1725 019c 00000000 		.word	.LC0
 1726              	.L91:
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Change ADC state */
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_EOC_INJ;
 1727              		.loc 1 813 19
 1728 01a0 7B68     		ldr	r3, [r7, #4]
 1729 01a2 2522     		movs	r2, #37
 1730 01a4 83F83D20 		strb	r2, [r3, #61]
 1731              	.L92:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp1 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 1732              		.loc 1 816 12
 1733 01a8 7B68     		ldr	r3, [r7, #4]
 1734 01aa 1B68     		ldr	r3, [r3]
 1735 01ac 5B68     		ldr	r3, [r3, #4]
 1736 01ae 03F48063 		and	r3, r3, #1024
 1737 01b2 002B     		cmp	r3, #0
 1738 01b4 0CBF     		ite	eq
 1739 01b6 0123     		moveq	r3, #1
 1740 01b8 0023     		movne	r3, #0
 1741 01ba DBB2     		uxtb	r3, r3
 1742              		.loc 1 816 10
 1743 01bc FB60     		str	r3, [r7, #12]
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_JEXTEN);
 1744              		.loc 1 817 12
 1745 01be 7B68     		ldr	r3, [r7, #4]
 1746 01c0 1B68     		ldr	r3, [r3]
 1747 01c2 9B68     		ldr	r3, [r3, #8]
 1748 01c4 03F44013 		and	r3, r3, #3145728
 1749 01c8 002B     		cmp	r3, #0
 1750 01ca 0CBF     		ite	eq
 1751 01cc 0123     		moveq	r3, #1
 1752 01ce 0023     		movne	r3, #0
 1753 01d0 DBB2     		uxtb	r3, r3
 1754              		.loc 1 817 10
 1755 01d2 BB60     		str	r3, [r7, #8]
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(((hadc->Init.ContinuousConvMode == DISABLE) || tmp1) && tmp2)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 46


 1756              		.loc 1 818 20
 1757 01d4 7B68     		ldr	r3, [r7, #4]
 1758 01d6 9B69     		ldr	r3, [r3, #24]
 1759              		.loc 1 818 7
 1760 01d8 002B     		cmp	r3, #0
 1761 01da 02D0     		beq	.L93
 1762              		.loc 1 818 52 discriminator 2
 1763 01dc FB68     		ldr	r3, [r7, #12]
 1764 01de 002B     		cmp	r3, #0
 1765 01e0 0AD0     		beq	.L94
 1766              	.L93:
 1767              		.loc 1 818 61 discriminator 3
 1768 01e2 BB68     		ldr	r3, [r7, #8]
 1769 01e4 002B     		cmp	r3, #0
 1770 01e6 07D0     		beq	.L94
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* DISABLE the ADC end of conversion interrupt for injected group */
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1771              		.loc 1 821 7
 1772 01e8 7B68     		ldr	r3, [r7, #4]
 1773 01ea 1B68     		ldr	r3, [r3]
 1774 01ec 5A68     		ldr	r2, [r3, #4]
 1775 01ee 7B68     		ldr	r3, [r7, #4]
 1776 01f0 1B68     		ldr	r3, [r3]
 1777 01f2 22F08002 		bic	r2, r2, #128
 1778 01f6 5A60     		str	r2, [r3, #4]
 1779              	.L94:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 1780              		.loc 1 825 5
 1781 01f8 7868     		ldr	r0, [r7, #4]
 1782 01fa FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    /* Clear the ADCx flag for injected end of conversion */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc,ADC_FLAG_JEOC);
 1783              		.loc 1 828 5
 1784 01fe 7B68     		ldr	r3, [r7, #4]
 1785 0200 1B68     		ldr	r3, [r3]
 1786 0202 6FF00402 		mvn	r2, #4
 1787 0206 1A60     		str	r2, [r3]
 1788              	.L90:
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
 1789              		.loc 1 831 10
 1790 0208 7B68     		ldr	r3, [r7, #4]
 1791 020a 1B68     		ldr	r3, [r3]
 1792 020c 1B68     		ldr	r3, [r3]
 1793 020e 03F00103 		and	r3, r3, #1
 1794 0212 012B     		cmp	r3, #1
 1795 0214 0CBF     		ite	eq
 1796 0216 0123     		moveq	r3, #1
 1797 0218 0023     		movne	r3, #0
 1798 021a DBB2     		uxtb	r3, r3
 1799              		.loc 1 831 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 47


 1800 021c FB60     		str	r3, [r7, #12]
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 1801              		.loc 1 832 10
 1802 021e 7B68     		ldr	r3, [r7, #4]
 1803 0220 1B68     		ldr	r3, [r3]
 1804 0222 5B68     		ldr	r3, [r3, #4]
 1805 0224 03F04003 		and	r3, r3, #64
 1806 0228 402B     		cmp	r3, #64
 1807 022a 0CBF     		ite	eq
 1808 022c 0123     		moveq	r3, #1
 1809 022e 0023     		movne	r3, #0
 1810 0230 DBB2     		uxtb	r3, r3
 1811              		.loc 1 832 8
 1812 0232 BB60     		str	r3, [r7, #8]
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1813              		.loc 1 834 5
 1814 0234 FB68     		ldr	r3, [r7, #12]
 1815 0236 002B     		cmp	r3, #0
 1816 0238 0ED0     		beq	.L95
 1817              		.loc 1 834 11 discriminator 1
 1818 023a BB68     		ldr	r3, [r7, #8]
 1819 023c 002B     		cmp	r3, #0
 1820 023e 0BD0     		beq	.L95
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_AWD;
 1821              		.loc 1 837 17
 1822 0240 7B68     		ldr	r3, [r7, #4]
 1823 0242 0622     		movs	r2, #6
 1824 0244 83F83D20 		strb	r2, [r3, #61]
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the ADCx's Analog watchdog flag */
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc,ADC_FLAG_AWD);
 1825              		.loc 1 840 5
 1826 0248 7B68     		ldr	r3, [r7, #4]
 1827 024a 1B68     		ldr	r3, [r3]
 1828 024c 6FF00102 		mvn	r2, #1
 1829 0250 1A60     		str	r2, [r3]
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Level out of window callback */ 
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
 1830              		.loc 1 843 5
 1831 0252 7868     		ldr	r0, [r7, #4]
 1832 0254 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1833              	.L95:
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
 1834              		.loc 1 846 10
 1835 0258 7B68     		ldr	r3, [r7, #4]
 1836 025a 1B68     		ldr	r3, [r3]
 1837 025c 1B68     		ldr	r3, [r3]
 1838 025e 03F02003 		and	r3, r3, #32
 1839 0262 202B     		cmp	r3, #32
 1840 0264 0CBF     		ite	eq
 1841 0266 0123     		moveq	r3, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 48


 1842 0268 0023     		movne	r3, #0
 1843 026a DBB2     		uxtb	r3, r3
 1844              		.loc 1 846 8
 1845 026c FB60     		str	r3, [r7, #12]
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 1846              		.loc 1 847 10
 1847 026e 7B68     		ldr	r3, [r7, #4]
 1848 0270 1B68     		ldr	r3, [r3]
 1849 0272 5B68     		ldr	r3, [r3, #4]
 1850 0274 03F08063 		and	r3, r3, #67108864
 1851 0278 B3F1806F 		cmp	r3, #67108864
 1852 027c 0CBF     		ite	eq
 1853 027e 0123     		moveq	r3, #1
 1854 0280 0023     		movne	r3, #0
 1855 0282 DBB2     		uxtb	r3, r3
 1856              		.loc 1 847 8
 1857 0284 BB60     		str	r3, [r7, #8]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1858              		.loc 1 849 5
 1859 0286 FB68     		ldr	r3, [r7, #12]
 1860 0288 002B     		cmp	r3, #0
 1861 028a 14D0     		beq	.L97
 1862              		.loc 1 849 11 discriminator 1
 1863 028c BB68     		ldr	r3, [r7, #8]
 1864 028e 002B     		cmp	r3, #0
 1865 0290 11D0     		beq	.L97
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state to overrun state */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_ERROR;
 1866              		.loc 1 852 17
 1867 0292 7B68     		ldr	r3, [r7, #4]
 1868 0294 0422     		movs	r2, #4
 1869 0296 83F83D20 		strb	r2, [r3, #61]
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_OVR;
 1870              		.loc 1 855 21
 1871 029a 7B68     		ldr	r3, [r7, #4]
 1872 029c 1B6C     		ldr	r3, [r3, #64]
 1873 029e 43F00102 		orr	r2, r3, #1
 1874 02a2 7B68     		ldr	r3, [r7, #4]
 1875 02a4 1A64     		str	r2, [r3, #64]
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc,ADC_FLAG_OVR);
 1876              		.loc 1 858 5
 1877 02a6 7B68     		ldr	r3, [r7, #4]
 1878 02a8 1B68     		ldr	r3, [r3]
 1879 02aa 6FF02002 		mvn	r2, #32
 1880 02ae 1A60     		str	r2, [r3]
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ErrorCallback(hadc);
 1881              		.loc 1 861 5
 1882 02b0 7868     		ldr	r0, [r7, #4]
 1883 02b2 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 49


 1884              	.L97:
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1885              		.loc 1 863 1
 1886 02b6 00BF     		nop
 1887 02b8 1037     		adds	r7, r7, #16
 1888              	.LCFI57:
 1889              		.cfi_def_cfa_offset 8
 1890 02ba BD46     		mov	sp, r7
 1891              	.LCFI58:
 1892              		.cfi_def_cfa_register 13
 1893              		@ sp needed
 1894 02bc 80BD     		pop	{r7, pc}
 1895              		.cfi_endproc
 1896              	.LFE138:
 1898 02be 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1899              		.align	1
 1900              		.global	HAL_ADC_Start_DMA
 1901              		.syntax unified
 1902              		.thumb
 1903              		.thumb_func
 1905              	HAL_ADC_Start_DMA:
 1906              	.LFB139:
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData: The destination Buffer address.
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1907              		.loc 1 874 1
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 24
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0000 80B5     		push	{r7, lr}
 1912              	.LCFI59:
 1913              		.cfi_def_cfa_offset 8
 1914              		.cfi_offset 7, -8
 1915              		.cfi_offset 14, -4
 1916 0002 86B0     		sub	sp, sp, #24
 1917              	.LCFI60:
 1918              		.cfi_def_cfa_offset 32
 1919 0004 00AF     		add	r7, sp, #0
 1920              	.LCFI61:
 1921              		.cfi_def_cfa_register 7
 1922 0006 F860     		str	r0, [r7, #12]
 1923 0008 B960     		str	r1, [r7, #8]
 1924 000a 7A60     		str	r2, [r7, #4]
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0;
 1925              		.loc 1 875 17
 1926 000c 0023     		movs	r3, #0
 1927 000e 7B61     		str	r3, [r7, #20]
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 50


 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 1928              		.loc 1 878 3
 1929 0010 FB68     		ldr	r3, [r7, #12]
 1930 0012 9B69     		ldr	r3, [r3, #24]
 1931 0014 002B     		cmp	r3, #0
 1932 0016 08D0     		beq	.L101
 1933              		.loc 1 878 3 is_stmt 0 discriminator 1
 1934 0018 FB68     		ldr	r3, [r7, #12]
 1935 001a 9B69     		ldr	r3, [r3, #24]
 1936 001c 012B     		cmp	r3, #1
 1937 001e 04D0     		beq	.L101
 1938              		.loc 1 878 3 discriminator 2
 1939 0020 40F26E31 		movw	r1, #878
 1940 0024 4348     		ldr	r0, .L109
 1941 0026 FFF7FEFF 		bl	assert_failed
 1942              	.L101:
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 1943              		.loc 1 879 3 is_stmt 1
 1944 002a FB68     		ldr	r3, [r7, #12]
 1945 002c 1B6B     		ldr	r3, [r3, #48]
 1946 002e 002B     		cmp	r3, #0
 1947 0030 13D0     		beq	.L102
 1948              		.loc 1 879 3 is_stmt 0 discriminator 1
 1949 0032 FB68     		ldr	r3, [r7, #12]
 1950 0034 1B6B     		ldr	r3, [r3, #48]
 1951 0036 B3F1805F 		cmp	r3, #268435456
 1952 003a 0ED0     		beq	.L102
 1953              		.loc 1 879 3 discriminator 2
 1954 003c FB68     		ldr	r3, [r7, #12]
 1955 003e 1B6B     		ldr	r3, [r3, #48]
 1956 0040 B3F1005F 		cmp	r3, #536870912
 1957 0044 09D0     		beq	.L102
 1958              		.loc 1 879 3 discriminator 3
 1959 0046 FB68     		ldr	r3, [r7, #12]
 1960 0048 1B6B     		ldr	r3, [r3, #48]
 1961 004a B3F1405F 		cmp	r3, #805306368
 1962 004e 04D0     		beq	.L102
 1963              		.loc 1 879 3 discriminator 4
 1964 0050 40F26F31 		movw	r1, #879
 1965 0054 3748     		ldr	r0, .L109
 1966 0056 FFF7FEFF 		bl	assert_failed
 1967              	.L102:
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1968              		.loc 1 882 3 is_stmt 1
 1969 005a FB68     		ldr	r3, [r7, #12]
 1970 005c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1971 0060 012B     		cmp	r3, #1
 1972 0062 01D1     		bne	.L103
 1973              		.loc 1 882 3 is_stmt 0 discriminator 1
 1974 0064 0223     		movs	r3, #2
 1975 0066 61E0     		b	.L104
 1976              	.L103:
 1977              		.loc 1 882 3 discriminator 2
 1978 0068 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 51


 1979 006a 0122     		movs	r2, #1
 1980 006c 83F83C20 		strb	r2, [r3, #60]
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable ADC overrun interrupt */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1981              		.loc 1 885 3 is_stmt 1 discriminator 2
 1982 0070 FB68     		ldr	r3, [r7, #12]
 1983 0072 1B68     		ldr	r3, [r3]
 1984 0074 5A68     		ldr	r2, [r3, #4]
 1985 0076 FB68     		ldr	r3, [r7, #12]
 1986 0078 1B68     		ldr	r3, [r3]
 1987 007a 42F08062 		orr	r2, r2, #67108864
 1988 007e 5A60     		str	r2, [r3, #4]
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable ADC DMA mode */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMA;
 1989              		.loc 1 888 7 discriminator 2
 1990 0080 FB68     		ldr	r3, [r7, #12]
 1991 0082 1B68     		ldr	r3, [r3]
 1992              		.loc 1 888 23 discriminator 2
 1993 0084 9A68     		ldr	r2, [r3, #8]
 1994              		.loc 1 888 7 discriminator 2
 1995 0086 FB68     		ldr	r3, [r7, #12]
 1996 0088 1B68     		ldr	r3, [r3]
 1997              		.loc 1 888 23 discriminator 2
 1998 008a 42F48072 		orr	r2, r2, #256
 1999 008e 9A60     		str	r2, [r3, #8]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the DMA transfer complete callback */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 2000              		.loc 1 891 7 discriminator 2
 2001 0090 FB68     		ldr	r3, [r7, #12]
 2002 0092 9B6B     		ldr	r3, [r3, #56]
 2003              		.loc 1 891 38 discriminator 2
 2004 0094 284A     		ldr	r2, .L109+4
 2005 0096 DA63     		str	r2, [r3, #60]
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the DMA half transfer complete callback */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 2006              		.loc 1 894 7 discriminator 2
 2007 0098 FB68     		ldr	r3, [r7, #12]
 2008 009a 9B6B     		ldr	r3, [r3, #56]
 2009              		.loc 1 894 42 discriminator 2
 2010 009c 274A     		ldr	r2, .L109+8
 2011 009e 1A64     		str	r2, [r3, #64]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the DMA error callback */
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 2012              		.loc 1 897 7 discriminator 2
 2013 00a0 FB68     		ldr	r3, [r7, #12]
 2014 00a2 9B6B     		ldr	r3, [r3, #56]
 2015              		.loc 1 897 39 discriminator 2
 2016 00a4 264A     		ldr	r2, .L109+12
 2017 00a6 9A64     		str	r2, [r3, #72]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the DMA Stream */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 52


 2018              		.loc 1 900 3 discriminator 2
 2019 00a8 FB68     		ldr	r3, [r7, #12]
 2020 00aa 986B     		ldr	r0, [r3, #56]
 2021              		.loc 1 900 53 discriminator 2
 2022 00ac FB68     		ldr	r3, [r7, #12]
 2023 00ae 1B68     		ldr	r3, [r3]
 2024              		.loc 1 900 48 discriminator 2
 2025 00b0 4C33     		adds	r3, r3, #76
 2026              		.loc 1 900 3 discriminator 2
 2027 00b2 1946     		mov	r1, r3
 2028 00b4 BA68     		ldr	r2, [r7, #8]
 2029 00b6 7B68     		ldr	r3, [r7, #4]
 2030 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Change ADC state */
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_BUSY_REG;
 2031              		.loc 1 903 15 discriminator 2
 2032 00bc FB68     		ldr	r3, [r7, #12]
 2033 00be 1222     		movs	r2, #18
 2034 00c0 83F83D20 		strb	r2, [r3, #61]
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2035              		.loc 1 906 3 discriminator 2
 2036 00c4 FB68     		ldr	r3, [r7, #12]
 2037 00c6 0022     		movs	r2, #0
 2038 00c8 83F83C20 		strb	r2, [r3, #60]
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      Tstab time the ADC's stabilization */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 2039              		.loc 1 910 11 discriminator 2
 2040 00cc FB68     		ldr	r3, [r7, #12]
 2041 00ce 1B68     		ldr	r3, [r3]
 2042              		.loc 1 910 21 discriminator 2
 2043 00d0 9B68     		ldr	r3, [r3, #8]
 2044              		.loc 1 910 27 discriminator 2
 2045 00d2 03F00103 		and	r3, r3, #1
 2046              		.loc 1 910 5 discriminator 2
 2047 00d6 012B     		cmp	r3, #1
 2048 00d8 18D0     		beq	.L105
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 2049              		.loc 1 913 5
 2050 00da FB68     		ldr	r3, [r7, #12]
 2051 00dc 1B68     		ldr	r3, [r3]
 2052 00de 9A68     		ldr	r2, [r3, #8]
 2053 00e0 FB68     		ldr	r3, [r7, #12]
 2054 00e2 1B68     		ldr	r3, [r3]
 2055 00e4 42F00102 		orr	r2, r2, #1
 2056 00e8 9A60     		str	r2, [r3, #8]
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 2057              		.loc 1 917 53
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 53


 2058 00ea 164B     		ldr	r3, .L109+16
 2059 00ec 1B68     		ldr	r3, [r3]
 2060 00ee 164A     		ldr	r2, .L109+20
 2061 00f0 A2FB0323 		umull	r2, r3, r2, r3
 2062 00f4 9A0C     		lsrs	r2, r3, #18
 2063              		.loc 1 917 34
 2064 00f6 1346     		mov	r3, r2
 2065 00f8 5B00     		lsls	r3, r3, #1
 2066 00fa 1344     		add	r3, r3, r2
 2067              		.loc 1 917 13
 2068 00fc 7B61     		str	r3, [r7, #20]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 2069              		.loc 1 918 10
 2070 00fe 02E0     		b	.L106
 2071              	.L107:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 2072              		.loc 1 920 14
 2073 0100 7B69     		ldr	r3, [r7, #20]
 2074 0102 013B     		subs	r3, r3, #1
 2075 0104 7B61     		str	r3, [r7, #20]
 2076              	.L106:
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 2077              		.loc 1 918 19
 2078 0106 7B69     		ldr	r3, [r7, #20]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0)
 2079              		.loc 1 918 10
 2080 0108 002B     		cmp	r3, #0
 2081 010a F9D1     		bne	.L107
 2082              	.L105:
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if no external trigger present enable software conversion of regular channels */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 2083              		.loc 1 925 11
 2084 010c FB68     		ldr	r3, [r7, #12]
 2085 010e 1B68     		ldr	r3, [r3]
 2086              		.loc 1 925 21
 2087 0110 9B68     		ldr	r3, [r3, #8]
 2088              		.loc 1 925 27
 2089 0112 03F04053 		and	r3, r3, #805306368
 2090              		.loc 1 925 5
 2091 0116 002B     		cmp	r3, #0
 2092 0118 07D1     		bne	.L108
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC software conversion for regular group */
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_SWSTART;
 2093              		.loc 1 928 9
 2094 011a FB68     		ldr	r3, [r7, #12]
 2095 011c 1B68     		ldr	r3, [r3]
 2096              		.loc 1 928 25
 2097 011e 9A68     		ldr	r2, [r3, #8]
 2098              		.loc 1 928 9
 2099 0120 FB68     		ldr	r3, [r7, #12]
 2100 0122 1B68     		ldr	r3, [r3]
 2101              		.loc 1 928 25
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 54


 2102 0124 42F08042 		orr	r2, r2, #1073741824
 2103 0128 9A60     		str	r2, [r3, #8]
 2104              	.L108:
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2105              		.loc 1 932 10
 2106 012a 0023     		movs	r3, #0
 2107              	.L104:
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2108              		.loc 1 933 1
 2109 012c 1846     		mov	r0, r3
 2110 012e 1837     		adds	r7, r7, #24
 2111              	.LCFI62:
 2112              		.cfi_def_cfa_offset 8
 2113 0130 BD46     		mov	sp, r7
 2114              	.LCFI63:
 2115              		.cfi_def_cfa_register 13
 2116              		@ sp needed
 2117 0132 80BD     		pop	{r7, pc}
 2118              	.L110:
 2119              		.align	2
 2120              	.L109:
 2121 0134 00000000 		.word	.LC0
 2122 0138 00000000 		.word	ADC_DMAConvCplt
 2123 013c 00000000 		.word	ADC_DMAHalfConvCplt
 2124 0140 00000000 		.word	ADC_DMAError
 2125 0144 00000000 		.word	SystemCoreClock
 2126 0148 83DE1B43 		.word	1125899907
 2127              		.cfi_endproc
 2128              	.LFE139:
 2130              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2131              		.align	1
 2132              		.global	HAL_ADC_Stop_DMA
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2137              	HAL_ADC_Stop_DMA:
 2138              	.LFB140:
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2139              		.loc 1 942 1
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 8
 2142              		@ frame_needed = 1, uses_anonymous_args = 0
 2143 0000 80B5     		push	{r7, lr}
 2144              	.LCFI64:
 2145              		.cfi_def_cfa_offset 8
 2146              		.cfi_offset 7, -8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 55


 2147              		.cfi_offset 14, -4
 2148 0002 82B0     		sub	sp, sp, #8
 2149              	.LCFI65:
 2150              		.cfi_def_cfa_offset 16
 2151 0004 00AF     		add	r7, sp, #0
 2152              	.LCFI66:
 2153              		.cfi_def_cfa_register 7
 2154 0006 7860     		str	r0, [r7, #4]
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable the Peripheral */
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 2155              		.loc 1 944 3
 2156 0008 7B68     		ldr	r3, [r7, #4]
 2157 000a 1B68     		ldr	r3, [r3]
 2158 000c 9A68     		ldr	r2, [r3, #8]
 2159 000e 7B68     		ldr	r3, [r7, #4]
 2160 0010 1B68     		ldr	r3, [r3]
 2161 0012 22F00102 		bic	r2, r2, #1
 2162 0016 9A60     		str	r2, [r3, #8]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC overrun interrupt */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2163              		.loc 1 947 3
 2164 0018 7B68     		ldr	r3, [r7, #4]
 2165 001a 1B68     		ldr	r3, [r3]
 2166 001c 5A68     		ldr	r2, [r3, #4]
 2167 001e 7B68     		ldr	r3, [r7, #4]
 2168 0020 1B68     		ldr	r3, [r3]
 2169 0022 22F08062 		bic	r2, r2, #67108864
 2170 0026 5A60     		str	r2, [r3, #4]
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable the selected ADC DMA mode */
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 2171              		.loc 1 950 7
 2172 0028 7B68     		ldr	r3, [r7, #4]
 2173 002a 1B68     		ldr	r3, [r3]
 2174              		.loc 1 950 23
 2175 002c 9A68     		ldr	r2, [r3, #8]
 2176              		.loc 1 950 7
 2177 002e 7B68     		ldr	r3, [r7, #4]
 2178 0030 1B68     		ldr	r3, [r3]
 2179              		.loc 1 950 23
 2180 0032 22F48072 		bic	r2, r2, #256
 2181 0036 9A60     		str	r2, [r3, #8]
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable the ADC DMA Stream */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_DMA_Abort(hadc->DMA_Handle);
 2182              		.loc 1 953 3
 2183 0038 7B68     		ldr	r3, [r7, #4]
 2184 003a 9B6B     		ldr	r3, [r3, #56]
 2185 003c 1846     		mov	r0, r3
 2186 003e FFF7FEFF 		bl	HAL_DMA_Abort
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Change ADC state */
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_READY;
 2187              		.loc 1 956 15
 2188 0042 7B68     		ldr	r3, [r7, #4]
 2189 0044 0122     		movs	r2, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 56


 2190 0046 83F83D20 		strb	r2, [r3, #61]
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2191              		.loc 1 959 10
 2192 004a 0023     		movs	r3, #0
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2193              		.loc 1 960 1
 2194 004c 1846     		mov	r0, r3
 2195 004e 0837     		adds	r7, r7, #8
 2196              	.LCFI67:
 2197              		.cfi_def_cfa_offset 8
 2198 0050 BD46     		mov	sp, r7
 2199              	.LCFI68:
 2200              		.cfi_def_cfa_register 13
 2201              		@ sp needed
 2202 0052 80BD     		pop	{r7, pc}
 2203              		.cfi_endproc
 2204              	.LFE140:
 2206              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2207              		.align	1
 2208              		.global	HAL_ADC_GetValue
 2209              		.syntax unified
 2210              		.thumb
 2211              		.thumb_func
 2213              	HAL_ADC_GetValue:
 2214              	.LFB141:
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 2215              		.loc 1 969 1
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 8
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219              		@ link register save eliminated.
 2220 0000 80B4     		push	{r7}
 2221              	.LCFI69:
 2222              		.cfi_def_cfa_offset 4
 2223              		.cfi_offset 7, -4
 2224 0002 83B0     		sub	sp, sp, #12
 2225              	.LCFI70:
 2226              		.cfi_def_cfa_offset 16
 2227 0004 00AF     		add	r7, sp, #0
 2228              	.LCFI71:
 2229              		.cfi_def_cfa_register 7
 2230 0006 7860     		str	r0, [r7, #4]
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 2231              		.loc 1 971 14
 2232 0008 7B68     		ldr	r3, [r7, #4]
 2233 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 57


 2234              		.loc 1 971 24
 2235 000c DB6C     		ldr	r3, [r3, #76]
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2236              		.loc 1 972 1
 2237 000e 1846     		mov	r0, r3
 2238 0010 0C37     		adds	r7, r7, #12
 2239              	.LCFI72:
 2240              		.cfi_def_cfa_offset 4
 2241 0012 BD46     		mov	sp, r7
 2242              	.LCFI73:
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 0014 5DF8047B 		ldr	r7, [sp], #4
 2246              	.LCFI74:
 2247              		.cfi_restore 7
 2248              		.cfi_def_cfa_offset 0
 2249 0018 7047     		bx	lr
 2250              		.cfi_endproc
 2251              	.LFE141:
 2253              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2254              		.align	1
 2255              		.weak	HAL_ADC_ConvCpltCallback
 2256              		.syntax unified
 2257              		.thumb
 2258              		.thumb_func
 2260              	HAL_ADC_ConvCpltCallback:
 2261              	.LFB142:
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2262              		.loc 1 981 1
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 2267 0000 80B4     		push	{r7}
 2268              	.LCFI75:
 2269              		.cfi_def_cfa_offset 4
 2270              		.cfi_offset 7, -4
 2271 0002 83B0     		sub	sp, sp, #12
 2272              	.LCFI76:
 2273              		.cfi_def_cfa_offset 16
 2274 0004 00AF     		add	r7, sp, #0
 2275              	.LCFI77:
 2276              		.cfi_def_cfa_register 7
 2277 0006 7860     		str	r0, [r7, #4]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2278              		.loc 1 985 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 58


 2279 0008 00BF     		nop
 2280 000a 0C37     		adds	r7, r7, #12
 2281              	.LCFI78:
 2282              		.cfi_def_cfa_offset 4
 2283 000c BD46     		mov	sp, r7
 2284              	.LCFI79:
 2285              		.cfi_def_cfa_register 13
 2286              		@ sp needed
 2287 000e 5DF8047B 		ldr	r7, [sp], #4
 2288              	.LCFI80:
 2289              		.cfi_restore 7
 2290              		.cfi_def_cfa_offset 0
 2291 0012 7047     		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE142:
 2295              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2296              		.align	1
 2297              		.weak	HAL_ADC_ConvHalfCpltCallback
 2298              		.syntax unified
 2299              		.thumb
 2300              		.thumb_func
 2302              	HAL_ADC_ConvHalfCpltCallback:
 2303              	.LFB143:
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2304              		.loc 1 994 1
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 8
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308              		@ link register save eliminated.
 2309 0000 80B4     		push	{r7}
 2310              	.LCFI81:
 2311              		.cfi_def_cfa_offset 4
 2312              		.cfi_offset 7, -4
 2313 0002 83B0     		sub	sp, sp, #12
 2314              	.LCFI82:
 2315              		.cfi_def_cfa_offset 16
 2316 0004 00AF     		add	r7, sp, #0
 2317              	.LCFI83:
 2318              		.cfi_def_cfa_register 7
 2319 0006 7860     		str	r0, [r7, #4]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2320              		.loc 1 998 1
 2321 0008 00BF     		nop
 2322 000a 0C37     		adds	r7, r7, #12
 2323              	.LCFI84:
 2324              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 59


 2325 000c BD46     		mov	sp, r7
 2326              	.LCFI85:
 2327              		.cfi_def_cfa_register 13
 2328              		@ sp needed
 2329 000e 5DF8047B 		ldr	r7, [sp], #4
 2330              	.LCFI86:
 2331              		.cfi_restore 7
 2332              		.cfi_def_cfa_offset 0
 2333 0012 7047     		bx	lr
 2334              		.cfi_endproc
 2335              	.LFE143:
 2337              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2338              		.align	1
 2339              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2344              	HAL_ADC_LevelOutOfWindowCallback:
 2345              	.LFB144:
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2346              		.loc 1 1007 1
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 8
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350              		@ link register save eliminated.
 2351 0000 80B4     		push	{r7}
 2352              	.LCFI87:
 2353              		.cfi_def_cfa_offset 4
 2354              		.cfi_offset 7, -4
 2355 0002 83B0     		sub	sp, sp, #12
 2356              	.LCFI88:
 2357              		.cfi_def_cfa_offset 16
 2358 0004 00AF     		add	r7, sp, #0
 2359              	.LCFI89:
 2360              		.cfi_def_cfa_register 7
 2361 0006 7860     		str	r0, [r7, #4]
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2362              		.loc 1 1011 1
 2363 0008 00BF     		nop
 2364 000a 0C37     		adds	r7, r7, #12
 2365              	.LCFI90:
 2366              		.cfi_def_cfa_offset 4
 2367 000c BD46     		mov	sp, r7
 2368              	.LCFI91:
 2369              		.cfi_def_cfa_register 13
 2370              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 60


 2371 000e 5DF8047B 		ldr	r7, [sp], #4
 2372              	.LCFI92:
 2373              		.cfi_restore 7
 2374              		.cfi_def_cfa_offset 0
 2375 0012 7047     		bx	lr
 2376              		.cfi_endproc
 2377              	.LFE144:
 2379              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2380              		.align	1
 2381              		.weak	HAL_ADC_ErrorCallback
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2386              	HAL_ADC_ErrorCallback:
 2387              	.LFB145:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2388              		.loc 1 1020 1
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 8
 2391              		@ frame_needed = 1, uses_anonymous_args = 0
 2392              		@ link register save eliminated.
 2393 0000 80B4     		push	{r7}
 2394              	.LCFI93:
 2395              		.cfi_def_cfa_offset 4
 2396              		.cfi_offset 7, -4
 2397 0002 83B0     		sub	sp, sp, #12
 2398              	.LCFI94:
 2399              		.cfi_def_cfa_offset 16
 2400 0004 00AF     		add	r7, sp, #0
 2401              	.LCFI95:
 2402              		.cfi_def_cfa_register 7
 2403 0006 7860     		str	r0, [r7, #4]
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2404              		.loc 1 1024 1
 2405 0008 00BF     		nop
 2406 000a 0C37     		adds	r7, r7, #12
 2407              	.LCFI96:
 2408              		.cfi_def_cfa_offset 4
 2409 000c BD46     		mov	sp, r7
 2410              	.LCFI97:
 2411              		.cfi_def_cfa_register 13
 2412              		@ sp needed
 2413 000e 5DF8047B 		ldr	r7, [sp], #4
 2414              	.LCFI98:
 2415              		.cfi_restore 7
 2416              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 61


 2417 0012 7047     		bx	lr
 2418              		.cfi_endproc
 2419              	.LFE145:
 2421              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2422              		.align	1
 2423              		.global	HAL_ADC_ConfigChannel
 2424              		.syntax unified
 2425              		.thumb
 2426              		.thumb_func
 2428              	HAL_ADC_ConfigChannel:
 2429              	.LFB146:
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig: ADC configuration structure. 
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2430              		.loc 1 1056 1
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 16
 2433              		@ frame_needed = 1, uses_anonymous_args = 0
 2434 0000 80B5     		push	{r7, lr}
 2435              	.LCFI99:
 2436              		.cfi_def_cfa_offset 8
 2437              		.cfi_offset 7, -8
 2438              		.cfi_offset 14, -4
 2439 0002 84B0     		sub	sp, sp, #16
 2440              	.LCFI100:
 2441              		.cfi_def_cfa_offset 24
 2442 0004 00AF     		add	r7, sp, #0
 2443              	.LCFI101:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 62


 2444              		.cfi_def_cfa_register 7
 2445 0006 7860     		str	r0, [r7, #4]
 2446 0008 3960     		str	r1, [r7]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0;
 2447              		.loc 1 1057 17
 2448 000a 0023     		movs	r3, #0
 2449 000c FB60     		str	r3, [r7, #12]
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
 2450              		.loc 1 1060 3
 2451 000e 3B68     		ldr	r3, [r7]
 2452 0010 1B68     		ldr	r3, [r3]
 2453 0012 122B     		cmp	r3, #18
 2454 0014 04D9     		bls	.L120
 2455              		.loc 1 1060 3 is_stmt 0 discriminator 1
 2456 0016 40F22441 		movw	r1, #1060
 2457 001a 9A48     		ldr	r0, .L136
 2458 001c FFF7FEFF 		bl	assert_failed
 2459              	.L120:
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2460              		.loc 1 1061 3 is_stmt 1
 2461 0020 3B68     		ldr	r3, [r7]
 2462 0022 5B68     		ldr	r3, [r3, #4]
 2463 0024 002B     		cmp	r3, #0
 2464 0026 03D0     		beq	.L121
 2465              		.loc 1 1061 3 is_stmt 0 discriminator 2
 2466 0028 3B68     		ldr	r3, [r7]
 2467 002a 5B68     		ldr	r3, [r3, #4]
 2468 002c 102B     		cmp	r3, #16
 2469 002e 04D9     		bls	.L122
 2470              	.L121:
 2471              		.loc 1 1061 3 discriminator 3
 2472 0030 40F22541 		movw	r1, #1061
 2473 0034 9348     		ldr	r0, .L136
 2474 0036 FFF7FEFF 		bl	assert_failed
 2475              	.L122:
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2476              		.loc 1 1062 3 is_stmt 1
 2477 003a 3B68     		ldr	r3, [r7]
 2478 003c 9B68     		ldr	r3, [r3, #8]
 2479 003e 002B     		cmp	r3, #0
 2480 0040 20D0     		beq	.L123
 2481              		.loc 1 1062 3 is_stmt 0 discriminator 1
 2482 0042 3B68     		ldr	r3, [r7]
 2483 0044 9B68     		ldr	r3, [r3, #8]
 2484 0046 012B     		cmp	r3, #1
 2485 0048 1CD0     		beq	.L123
 2486              		.loc 1 1062 3 discriminator 2
 2487 004a 3B68     		ldr	r3, [r7]
 2488 004c 9B68     		ldr	r3, [r3, #8]
 2489 004e 022B     		cmp	r3, #2
 2490 0050 18D0     		beq	.L123
 2491              		.loc 1 1062 3 discriminator 3
 2492 0052 3B68     		ldr	r3, [r7]
 2493 0054 9B68     		ldr	r3, [r3, #8]
 2494 0056 032B     		cmp	r3, #3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 63


 2495 0058 14D0     		beq	.L123
 2496              		.loc 1 1062 3 discriminator 4
 2497 005a 3B68     		ldr	r3, [r7]
 2498 005c 9B68     		ldr	r3, [r3, #8]
 2499 005e 042B     		cmp	r3, #4
 2500 0060 10D0     		beq	.L123
 2501              		.loc 1 1062 3 discriminator 5
 2502 0062 3B68     		ldr	r3, [r7]
 2503 0064 9B68     		ldr	r3, [r3, #8]
 2504 0066 052B     		cmp	r3, #5
 2505 0068 0CD0     		beq	.L123
 2506              		.loc 1 1062 3 discriminator 6
 2507 006a 3B68     		ldr	r3, [r7]
 2508 006c 9B68     		ldr	r3, [r3, #8]
 2509 006e 062B     		cmp	r3, #6
 2510 0070 08D0     		beq	.L123
 2511              		.loc 1 1062 3 discriminator 7
 2512 0072 3B68     		ldr	r3, [r7]
 2513 0074 9B68     		ldr	r3, [r3, #8]
 2514 0076 072B     		cmp	r3, #7
 2515 0078 04D0     		beq	.L123
 2516              		.loc 1 1062 3 discriminator 8
 2517 007a 40F22641 		movw	r1, #1062
 2518 007e 8148     		ldr	r0, .L136
 2519 0080 FFF7FEFF 		bl	assert_failed
 2520              	.L123:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2521              		.loc 1 1065 3 is_stmt 1
 2522 0084 7B68     		ldr	r3, [r7, #4]
 2523 0086 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2524 008a 012B     		cmp	r3, #1
 2525 008c 01D1     		bne	.L124
 2526              		.loc 1 1065 3 is_stmt 0 discriminator 1
 2527 008e 0223     		movs	r3, #2
 2528 0090 0DE1     		b	.L125
 2529              	.L124:
 2530              		.loc 1 1065 3 discriminator 2
 2531 0092 7B68     		ldr	r3, [r7, #4]
 2532 0094 0122     		movs	r2, #1
 2533 0096 83F83C20 		strb	r2, [r3, #60]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 2534              		.loc 1 1068 14 is_stmt 1 discriminator 2
 2535 009a 3B68     		ldr	r3, [r7]
 2536 009c 1B68     		ldr	r3, [r3]
 2537              		.loc 1 1068 6 discriminator 2
 2538 009e 092B     		cmp	r3, #9
 2539 00a0 25D9     		bls	.L126
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 2540              		.loc 1 1071 9
 2541 00a2 7B68     		ldr	r3, [r7, #4]
 2542 00a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 64


 2543              		.loc 1 1071 27
 2544 00a6 D968     		ldr	r1, [r3, #12]
 2545              		.loc 1 1071 31
 2546 00a8 3B68     		ldr	r3, [r7]
 2547 00aa 1B68     		ldr	r3, [r3]
 2548 00ac 9BB2     		uxth	r3, r3
 2549 00ae 1A46     		mov	r2, r3
 2550 00b0 1346     		mov	r3, r2
 2551 00b2 5B00     		lsls	r3, r3, #1
 2552 00b4 1344     		add	r3, r3, r2
 2553 00b6 1E3B     		subs	r3, r3, #30
 2554 00b8 0722     		movs	r2, #7
 2555 00ba 02FA03F3 		lsl	r3, r2, r3
 2556              		.loc 1 1071 30
 2557 00be DA43     		mvns	r2, r3
 2558              		.loc 1 1071 9
 2559 00c0 7B68     		ldr	r3, [r7, #4]
 2560 00c2 1B68     		ldr	r3, [r3]
 2561              		.loc 1 1071 27
 2562 00c4 0A40     		ands	r2, r2, r1
 2563 00c6 DA60     		str	r2, [r3, #12]
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 2564              		.loc 1 1074 9
 2565 00c8 7B68     		ldr	r3, [r7, #4]
 2566 00ca 1B68     		ldr	r3, [r3]
 2567              		.loc 1 1074 27
 2568 00cc D968     		ldr	r1, [r3, #12]
 2569              		.loc 1 1074 30
 2570 00ce 3B68     		ldr	r3, [r7]
 2571 00d0 9A68     		ldr	r2, [r3, #8]
 2572 00d2 3B68     		ldr	r3, [r7]
 2573 00d4 1B68     		ldr	r3, [r3]
 2574 00d6 9BB2     		uxth	r3, r3
 2575 00d8 1846     		mov	r0, r3
 2576 00da 0346     		mov	r3, r0
 2577 00dc 5B00     		lsls	r3, r3, #1
 2578 00de 0344     		add	r3, r3, r0
 2579 00e0 1E3B     		subs	r3, r3, #30
 2580 00e2 9A40     		lsls	r2, r2, r3
 2581              		.loc 1 1074 9
 2582 00e4 7B68     		ldr	r3, [r7, #4]
 2583 00e6 1B68     		ldr	r3, [r3]
 2584              		.loc 1 1074 27
 2585 00e8 0A43     		orrs	r2, r2, r1
 2586 00ea DA60     		str	r2, [r3, #12]
 2587 00ec 22E0     		b	.L127
 2588              	.L126:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 2589              		.loc 1 1079 9
 2590 00ee 7B68     		ldr	r3, [r7, #4]
 2591 00f0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 65


 2592              		.loc 1 1079 27
 2593 00f2 1969     		ldr	r1, [r3, #16]
 2594              		.loc 1 1079 31
 2595 00f4 3B68     		ldr	r3, [r7]
 2596 00f6 1B68     		ldr	r3, [r3]
 2597 00f8 9BB2     		uxth	r3, r3
 2598 00fa 1A46     		mov	r2, r3
 2599 00fc 1346     		mov	r3, r2
 2600 00fe 5B00     		lsls	r3, r3, #1
 2601 0100 1344     		add	r3, r3, r2
 2602 0102 0722     		movs	r2, #7
 2603 0104 02FA03F3 		lsl	r3, r2, r3
 2604              		.loc 1 1079 30
 2605 0108 DA43     		mvns	r2, r3
 2606              		.loc 1 1079 9
 2607 010a 7B68     		ldr	r3, [r7, #4]
 2608 010c 1B68     		ldr	r3, [r3]
 2609              		.loc 1 1079 27
 2610 010e 0A40     		ands	r2, r2, r1
 2611 0110 1A61     		str	r2, [r3, #16]
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 2612              		.loc 1 1082 9
 2613 0112 7B68     		ldr	r3, [r7, #4]
 2614 0114 1B68     		ldr	r3, [r3]
 2615              		.loc 1 1082 27
 2616 0116 1969     		ldr	r1, [r3, #16]
 2617              		.loc 1 1082 30
 2618 0118 3B68     		ldr	r3, [r7]
 2619 011a 9A68     		ldr	r2, [r3, #8]
 2620 011c 3B68     		ldr	r3, [r7]
 2621 011e 1B68     		ldr	r3, [r3]
 2622 0120 9BB2     		uxth	r3, r3
 2623 0122 1846     		mov	r0, r3
 2624 0124 0346     		mov	r3, r0
 2625 0126 5B00     		lsls	r3, r3, #1
 2626 0128 0344     		add	r3, r3, r0
 2627 012a 9A40     		lsls	r2, r2, r3
 2628              		.loc 1 1082 9
 2629 012c 7B68     		ldr	r3, [r7, #4]
 2630 012e 1B68     		ldr	r3, [r3]
 2631              		.loc 1 1082 27
 2632 0130 0A43     		orrs	r2, r2, r1
 2633 0132 1A61     		str	r2, [r3, #16]
 2634              	.L127:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7)
 2635              		.loc 1 1086 14
 2636 0134 3B68     		ldr	r3, [r7]
 2637 0136 5B68     		ldr	r3, [r3, #4]
 2638              		.loc 1 1086 6
 2639 0138 062B     		cmp	r3, #6
 2640 013a 24D8     		bhi	.L128
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 66


1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 2641              		.loc 1 1089 9
 2642 013c 7B68     		ldr	r3, [r7, #4]
 2643 013e 1B68     		ldr	r3, [r3]
 2644              		.loc 1 1089 26
 2645 0140 596B     		ldr	r1, [r3, #52]
 2646              		.loc 1 1089 30
 2647 0142 3B68     		ldr	r3, [r7]
 2648 0144 5A68     		ldr	r2, [r3, #4]
 2649 0146 1346     		mov	r3, r2
 2650 0148 9B00     		lsls	r3, r3, #2
 2651 014a 1344     		add	r3, r3, r2
 2652 014c 053B     		subs	r3, r3, #5
 2653 014e 1F22     		movs	r2, #31
 2654 0150 02FA03F3 		lsl	r3, r2, r3
 2655              		.loc 1 1089 29
 2656 0154 DA43     		mvns	r2, r3
 2657              		.loc 1 1089 9
 2658 0156 7B68     		ldr	r3, [r7, #4]
 2659 0158 1B68     		ldr	r3, [r3]
 2660              		.loc 1 1089 26
 2661 015a 0A40     		ands	r2, r2, r1
 2662 015c 5A63     		str	r2, [r3, #52]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 2663              		.loc 1 1092 9
 2664 015e 7B68     		ldr	r3, [r7, #4]
 2665 0160 1B68     		ldr	r3, [r3]
 2666              		.loc 1 1092 26
 2667 0162 596B     		ldr	r1, [r3, #52]
 2668              		.loc 1 1092 29
 2669 0164 3B68     		ldr	r3, [r7]
 2670 0166 1B68     		ldr	r3, [r3]
 2671 0168 9BB2     		uxth	r3, r3
 2672 016a 1846     		mov	r0, r3
 2673 016c 3B68     		ldr	r3, [r7]
 2674 016e 5A68     		ldr	r2, [r3, #4]
 2675 0170 1346     		mov	r3, r2
 2676 0172 9B00     		lsls	r3, r3, #2
 2677 0174 1344     		add	r3, r3, r2
 2678 0176 053B     		subs	r3, r3, #5
 2679 0178 00FA03F2 		lsl	r2, r0, r3
 2680              		.loc 1 1092 9
 2681 017c 7B68     		ldr	r3, [r7, #4]
 2682 017e 1B68     		ldr	r3, [r3]
 2683              		.loc 1 1092 26
 2684 0180 0A43     		orrs	r2, r2, r1
 2685 0182 5A63     		str	r2, [r3, #52]
 2686 0184 4CE0     		b	.L129
 2687              	.L128:
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13)
 2688              		.loc 1 1095 19
 2689 0186 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 67


 2690 0188 5B68     		ldr	r3, [r3, #4]
 2691              		.loc 1 1095 11
 2692 018a 0C2B     		cmp	r3, #12
 2693 018c 24D8     		bhi	.L130
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 2694              		.loc 1 1098 9
 2695 018e 7B68     		ldr	r3, [r7, #4]
 2696 0190 1B68     		ldr	r3, [r3]
 2697              		.loc 1 1098 26
 2698 0192 196B     		ldr	r1, [r3, #48]
 2699              		.loc 1 1098 30
 2700 0194 3B68     		ldr	r3, [r7]
 2701 0196 5A68     		ldr	r2, [r3, #4]
 2702 0198 1346     		mov	r3, r2
 2703 019a 9B00     		lsls	r3, r3, #2
 2704 019c 1344     		add	r3, r3, r2
 2705 019e 233B     		subs	r3, r3, #35
 2706 01a0 1F22     		movs	r2, #31
 2707 01a2 02FA03F3 		lsl	r3, r2, r3
 2708              		.loc 1 1098 29
 2709 01a6 DA43     		mvns	r2, r3
 2710              		.loc 1 1098 9
 2711 01a8 7B68     		ldr	r3, [r7, #4]
 2712 01aa 1B68     		ldr	r3, [r3]
 2713              		.loc 1 1098 26
 2714 01ac 0A40     		ands	r2, r2, r1
 2715 01ae 1A63     		str	r2, [r3, #48]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 2716              		.loc 1 1101 9
 2717 01b0 7B68     		ldr	r3, [r7, #4]
 2718 01b2 1B68     		ldr	r3, [r3]
 2719              		.loc 1 1101 26
 2720 01b4 196B     		ldr	r1, [r3, #48]
 2721              		.loc 1 1101 29
 2722 01b6 3B68     		ldr	r3, [r7]
 2723 01b8 1B68     		ldr	r3, [r3]
 2724 01ba 9BB2     		uxth	r3, r3
 2725 01bc 1846     		mov	r0, r3
 2726 01be 3B68     		ldr	r3, [r7]
 2727 01c0 5A68     		ldr	r2, [r3, #4]
 2728 01c2 1346     		mov	r3, r2
 2729 01c4 9B00     		lsls	r3, r3, #2
 2730 01c6 1344     		add	r3, r3, r2
 2731 01c8 233B     		subs	r3, r3, #35
 2732 01ca 00FA03F2 		lsl	r2, r0, r3
 2733              		.loc 1 1101 9
 2734 01ce 7B68     		ldr	r3, [r7, #4]
 2735 01d0 1B68     		ldr	r3, [r3]
 2736              		.loc 1 1101 26
 2737 01d2 0A43     		orrs	r2, r2, r1
 2738 01d4 1A63     		str	r2, [r3, #48]
 2739 01d6 23E0     		b	.L129
 2740              	.L130:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 68


1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 2741              		.loc 1 1107 9
 2742 01d8 7B68     		ldr	r3, [r7, #4]
 2743 01da 1B68     		ldr	r3, [r3]
 2744              		.loc 1 1107 26
 2745 01dc D96A     		ldr	r1, [r3, #44]
 2746              		.loc 1 1107 30
 2747 01de 3B68     		ldr	r3, [r7]
 2748 01e0 5A68     		ldr	r2, [r3, #4]
 2749 01e2 1346     		mov	r3, r2
 2750 01e4 9B00     		lsls	r3, r3, #2
 2751 01e6 1344     		add	r3, r3, r2
 2752 01e8 413B     		subs	r3, r3, #65
 2753 01ea 1F22     		movs	r2, #31
 2754 01ec 02FA03F3 		lsl	r3, r2, r3
 2755              		.loc 1 1107 29
 2756 01f0 DA43     		mvns	r2, r3
 2757              		.loc 1 1107 9
 2758 01f2 7B68     		ldr	r3, [r7, #4]
 2759 01f4 1B68     		ldr	r3, [r3]
 2760              		.loc 1 1107 26
 2761 01f6 0A40     		ands	r2, r2, r1
 2762 01f8 DA62     		str	r2, [r3, #44]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 2763              		.loc 1 1110 9
 2764 01fa 7B68     		ldr	r3, [r7, #4]
 2765 01fc 1B68     		ldr	r3, [r3]
 2766              		.loc 1 1110 26
 2767 01fe D96A     		ldr	r1, [r3, #44]
 2768              		.loc 1 1110 29
 2769 0200 3B68     		ldr	r3, [r7]
 2770 0202 1B68     		ldr	r3, [r3]
 2771 0204 9BB2     		uxth	r3, r3
 2772 0206 1846     		mov	r0, r3
 2773 0208 3B68     		ldr	r3, [r7]
 2774 020a 5A68     		ldr	r2, [r3, #4]
 2775 020c 1346     		mov	r3, r2
 2776 020e 9B00     		lsls	r3, r3, #2
 2777 0210 1344     		add	r3, r3, r2
 2778 0212 413B     		subs	r3, r3, #65
 2779 0214 00FA03F2 		lsl	r2, r0, r3
 2780              		.loc 1 1110 9
 2781 0218 7B68     		ldr	r3, [r7, #4]
 2782 021a 1B68     		ldr	r3, [r3]
 2783              		.loc 1 1110 26
 2784 021c 0A43     		orrs	r2, r2, r1
 2785 021e DA62     		str	r2, [r3, #44]
 2786              	.L129:
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 69


1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 2787              		.loc 1 1114 12
 2788 0220 7B68     		ldr	r3, [r7, #4]
 2789 0222 1B68     		ldr	r3, [r3]
 2790              		.loc 1 1114 6
 2791 0224 184A     		ldr	r2, .L136+4
 2792 0226 9342     		cmp	r3, r2
 2793 0228 09D1     		bne	.L131
 2794              		.loc 1 1114 43 discriminator 1
 2795 022a 3B68     		ldr	r3, [r7]
 2796 022c 1B68     		ldr	r3, [r3]
 2797              		.loc 1 1114 32 discriminator 1
 2798 022e 122B     		cmp	r3, #18
 2799 0230 05D1     		bne	.L131
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC->CCR |= ADC_CCR_VBATE;
 2800              		.loc 1 1117 14
 2801 0232 164B     		ldr	r3, .L136+8
 2802 0234 5B68     		ldr	r3, [r3, #4]
 2803 0236 154A     		ldr	r2, .L136+8
 2804 0238 43F48003 		orr	r3, r3, #4194304
 2805 023c 5360     		str	r3, [r2, #4]
 2806              	.L131:
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 2807              		.loc 1 1121 12
 2808 023e 7B68     		ldr	r3, [r7, #4]
 2809 0240 1B68     		ldr	r3, [r3]
 2810              		.loc 1 1121 6
 2811 0242 114A     		ldr	r2, .L136+4
 2812 0244 9342     		cmp	r3, r2
 2813 0246 2DD1     		bne	.L132
 2814              		.loc 1 1121 44 discriminator 1
 2815 0248 3B68     		ldr	r3, [r7]
 2816 024a 1B68     		ldr	r3, [r3]
 2817              		.loc 1 1121 32 discriminator 1
 2818 024c 102B     		cmp	r3, #16
 2819 024e 03D0     		beq	.L133
 2820              		.loc 1 1121 92 discriminator 2
 2821 0250 3B68     		ldr	r3, [r7]
 2822 0252 1B68     		ldr	r3, [r3]
 2823              		.loc 1 1121 81 discriminator 2
 2824 0254 112B     		cmp	r3, #17
 2825 0256 25D1     		bne	.L132
 2826              	.L133:
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the TSVREFE channel*/
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC->CCR |= ADC_CCR_TSVREFE;
 2827              		.loc 1 1124 14
 2828 0258 0C4B     		ldr	r3, .L136+8
 2829 025a 5B68     		ldr	r3, [r3, #4]
 2830 025c 0B4A     		ldr	r2, .L136+8
 2831 025e 43F40003 		orr	r3, r3, #8388608
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 70


 2832 0262 5360     		str	r3, [r2, #4]
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 2833              		.loc 1 1126 16
 2834 0264 3B68     		ldr	r3, [r7]
 2835 0266 1B68     		ldr	r3, [r3]
 2836              		.loc 1 1126 7
 2837 0268 102B     		cmp	r3, #16
 2838 026a 1BD1     		bne	.L132
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
 2839              		.loc 1 1130 61
 2840 026c 084B     		ldr	r3, .L136+12
 2841 026e 1B68     		ldr	r3, [r3]
 2842 0270 084A     		ldr	r2, .L136+16
 2843 0272 A2FB0323 		umull	r2, r3, r2, r3
 2844 0276 9A0C     		lsrs	r2, r3, #18
 2845              		.loc 1 1130 42
 2846 0278 1346     		mov	r3, r2
 2847 027a 9B00     		lsls	r3, r3, #2
 2848 027c 1344     		add	r3, r3, r2
 2849 027e 5B00     		lsls	r3, r3, #1
 2850              		.loc 1 1130 15
 2851 0280 FB60     		str	r3, [r7, #12]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0)
 2852              		.loc 1 1131 12
 2853 0282 0CE0     		b	.L134
 2854              	.L137:
 2855              		.align	2
 2856              	.L136:
 2857 0284 00000000 		.word	.LC0
 2858 0288 00200140 		.word	1073815552
 2859 028c 00230140 		.word	1073816320
 2860 0290 00000000 		.word	SystemCoreClock
 2861 0294 83DE1B43 		.word	1125899907
 2862              	.L135:
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 2863              		.loc 1 1133 16
 2864 0298 FB68     		ldr	r3, [r7, #12]
 2865 029a 013B     		subs	r3, r3, #1
 2866 029c FB60     		str	r3, [r7, #12]
 2867              	.L134:
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0)
 2868              		.loc 1 1131 21
 2869 029e FB68     		ldr	r3, [r7, #12]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0)
 2870              		.loc 1 1131 12
 2871 02a0 002B     		cmp	r3, #0
 2872 02a2 F9D1     		bne	.L135
 2873              	.L132:
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 71


1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2874              		.loc 1 1139 3
 2875 02a4 7B68     		ldr	r3, [r7, #4]
 2876 02a6 0022     		movs	r2, #0
 2877 02a8 83F83C20 		strb	r2, [r3, #60]
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2878              		.loc 1 1142 10
 2879 02ac 0023     		movs	r3, #0
 2880              	.L125:
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2881              		.loc 1 1143 1
 2882 02ae 1846     		mov	r0, r3
 2883 02b0 1037     		adds	r7, r7, #16
 2884              	.LCFI102:
 2885              		.cfi_def_cfa_offset 8
 2886 02b2 BD46     		mov	sp, r7
 2887              	.LCFI103:
 2888              		.cfi_def_cfa_register 13
 2889              		@ sp needed
 2890 02b4 80BD     		pop	{r7, pc}
 2891              		.cfi_endproc
 2892              	.LFE146:
 2894 02b6 00BF     		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2895              		.align	1
 2896              		.global	HAL_ADC_AnalogWDGConfig
 2897              		.syntax unified
 2898              		.thumb
 2899              		.thumb_func
 2901              	HAL_ADC_AnalogWDGConfig:
 2902              	.LFB147:
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig : pointer to an ADC_AnalogWDGConfTypeDef structure 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2903              		.loc 1 1154 1
 2904              		.cfi_startproc
 2905              		@ args = 0, pretend = 0, frame = 16
 2906              		@ frame_needed = 1, uses_anonymous_args = 0
 2907 0000 80B5     		push	{r7, lr}
 2908              	.LCFI104:
 2909              		.cfi_def_cfa_offset 8
 2910              		.cfi_offset 7, -8
 2911              		.cfi_offset 14, -4
 2912 0002 84B0     		sub	sp, sp, #16
 2913              	.LCFI105:
 2914              		.cfi_def_cfa_offset 24
 2915 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 72


 2916              	.LCFI106:
 2917              		.cfi_def_cfa_register 7
 2918 0006 7860     		str	r0, [r7, #4]
 2919 0008 3960     		str	r1, [r7]
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0;
 2920              		.loc 1 1156 12
 2921 000a 0023     		movs	r3, #0
 2922 000c FB60     		str	r3, [r7, #12]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
 2923              		.loc 1 1160 3
 2924 000e 3B68     		ldr	r3, [r7]
 2925 0010 1B68     		ldr	r3, [r3]
 2926 0012 734A     		ldr	r2, .L156
 2927 0014 9342     		cmp	r3, r2
 2928 0016 21D0     		beq	.L139
 2929              		.loc 1 1160 3 is_stmt 0 discriminator 1
 2930 0018 3B68     		ldr	r3, [r7]
 2931 001a 1B68     		ldr	r3, [r3]
 2932 001c 714A     		ldr	r2, .L156+4
 2933 001e 9342     		cmp	r3, r2
 2934 0020 1CD0     		beq	.L139
 2935              		.loc 1 1160 3 discriminator 2
 2936 0022 3B68     		ldr	r3, [r7]
 2937 0024 1B68     		ldr	r3, [r3]
 2938 0026 704A     		ldr	r2, .L156+8
 2939 0028 9342     		cmp	r3, r2
 2940 002a 17D0     		beq	.L139
 2941              		.loc 1 1160 3 discriminator 3
 2942 002c 3B68     		ldr	r3, [r7]
 2943 002e 1B68     		ldr	r3, [r3]
 2944 0030 B3F5000F 		cmp	r3, #8388608
 2945 0034 12D0     		beq	.L139
 2946              		.loc 1 1160 3 discriminator 4
 2947 0036 3B68     		ldr	r3, [r7]
 2948 0038 1B68     		ldr	r3, [r3]
 2949 003a B3F5800F 		cmp	r3, #4194304
 2950 003e 0DD0     		beq	.L139
 2951              		.loc 1 1160 3 discriminator 5
 2952 0040 3B68     		ldr	r3, [r7]
 2953 0042 1B68     		ldr	r3, [r3]
 2954 0044 B3F5400F 		cmp	r3, #12582912
 2955 0048 08D0     		beq	.L139
 2956              		.loc 1 1160 3 discriminator 6
 2957 004a 3B68     		ldr	r3, [r7]
 2958 004c 1B68     		ldr	r3, [r3]
 2959 004e 002B     		cmp	r3, #0
 2960 0050 04D0     		beq	.L139
 2961              		.loc 1 1160 3 discriminator 7
 2962 0052 4FF49161 		mov	r1, #1160
 2963 0056 6548     		ldr	r0, .L156+12
 2964 0058 FFF7FEFF 		bl	assert_failed
 2965              	.L139:
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 73


 2966              		.loc 1 1161 3 is_stmt 1
 2967 005c 3B68     		ldr	r3, [r7]
 2968 005e DB68     		ldr	r3, [r3, #12]
 2969 0060 122B     		cmp	r3, #18
 2970 0062 04D9     		bls	.L140
 2971              		.loc 1 1161 3 is_stmt 0 discriminator 1
 2972 0064 40F28941 		movw	r1, #1161
 2973 0068 6048     		ldr	r0, .L156+12
 2974 006a FFF7FEFF 		bl	assert_failed
 2975              	.L140:
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 2976              		.loc 1 1162 3 is_stmt 1
 2977 006e 3B68     		ldr	r3, [r7]
 2978 0070 1B69     		ldr	r3, [r3, #16]
 2979 0072 002B     		cmp	r3, #0
 2980 0074 08D0     		beq	.L141
 2981              		.loc 1 1162 3 is_stmt 0 discriminator 1
 2982 0076 3B68     		ldr	r3, [r7]
 2983 0078 1B69     		ldr	r3, [r3, #16]
 2984 007a 012B     		cmp	r3, #1
 2985 007c 04D0     		beq	.L141
 2986              		.loc 1 1162 3 discriminator 2
 2987 007e 40F28A41 		movw	r1, #1162
 2988 0082 5A48     		ldr	r0, .L156+12
 2989 0084 FFF7FEFF 		bl	assert_failed
 2990              	.L141:
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
 2991              		.loc 1 1165 9 is_stmt 1
 2992 0088 7B68     		ldr	r3, [r7, #4]
 2993 008a 1B68     		ldr	r3, [r3]
 2994 008c 5B68     		ldr	r3, [r3, #4]
 2995              		.loc 1 1165 7
 2996 008e 03F04073 		and	r3, r3, #50331648
 2997 0092 FB60     		str	r3, [r7, #12]
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
 2998              		.loc 1 1166 3
 2999 0094 FB68     		ldr	r3, [r7, #12]
 3000 0096 002B     		cmp	r3, #0
 3001 0098 04D1     		bne	.L142
 3002              		.loc 1 1166 3 is_stmt 0 discriminator 2
 3003 009a 3B68     		ldr	r3, [r7]
 3004 009c 5B68     		ldr	r3, [r3, #4]
 3005 009e B3F5805F 		cmp	r3, #4096
 3006 00a2 1DD3     		bcc	.L143
 3007              	.L142:
 3008              		.loc 1 1166 3 discriminator 3
 3009 00a4 FB68     		ldr	r3, [r7, #12]
 3010 00a6 B3F1807F 		cmp	r3, #16777216
 3011 00aa 04D1     		bne	.L144
 3012              		.loc 1 1166 3 discriminator 5
 3013 00ac 3B68     		ldr	r3, [r7]
 3014 00ae 5B68     		ldr	r3, [r3, #4]
 3015 00b0 B3F5806F 		cmp	r3, #1024
 3016 00b4 14D3     		bcc	.L143
 3017              	.L144:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 74


 3018              		.loc 1 1166 3 discriminator 6
 3019 00b6 FB68     		ldr	r3, [r7, #12]
 3020 00b8 B3F1007F 		cmp	r3, #33554432
 3021 00bc 03D1     		bne	.L145
 3022              		.loc 1 1166 3 discriminator 8
 3023 00be 3B68     		ldr	r3, [r7]
 3024 00c0 5B68     		ldr	r3, [r3, #4]
 3025 00c2 FF2B     		cmp	r3, #255
 3026 00c4 0CD9     		bls	.L143
 3027              	.L145:
 3028              		.loc 1 1166 3 discriminator 9
 3029 00c6 FB68     		ldr	r3, [r7, #12]
 3030 00c8 B3F1407F 		cmp	r3, #50331648
 3031 00cc 03D1     		bne	.L146
 3032              		.loc 1 1166 3 discriminator 11
 3033 00ce 3B68     		ldr	r3, [r7]
 3034 00d0 5B68     		ldr	r3, [r3, #4]
 3035 00d2 3F2B     		cmp	r3, #63
 3036 00d4 04D9     		bls	.L143
 3037              	.L146:
 3038              		.loc 1 1166 3 discriminator 12
 3039 00d6 40F28E41 		movw	r1, #1166
 3040 00da 4448     		ldr	r0, .L156+12
 3041 00dc FFF7FEFF 		bl	assert_failed
 3042              	.L143:
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
 3043              		.loc 1 1167 3 is_stmt 1
 3044 00e0 FB68     		ldr	r3, [r7, #12]
 3045 00e2 002B     		cmp	r3, #0
 3046 00e4 04D1     		bne	.L147
 3047              		.loc 1 1167 3 is_stmt 0 discriminator 2
 3048 00e6 3B68     		ldr	r3, [r7]
 3049 00e8 9B68     		ldr	r3, [r3, #8]
 3050 00ea B3F5805F 		cmp	r3, #4096
 3051 00ee 1DD3     		bcc	.L148
 3052              	.L147:
 3053              		.loc 1 1167 3 discriminator 3
 3054 00f0 FB68     		ldr	r3, [r7, #12]
 3055 00f2 B3F1807F 		cmp	r3, #16777216
 3056 00f6 04D1     		bne	.L149
 3057              		.loc 1 1167 3 discriminator 5
 3058 00f8 3B68     		ldr	r3, [r7]
 3059 00fa 9B68     		ldr	r3, [r3, #8]
 3060 00fc B3F5806F 		cmp	r3, #1024
 3061 0100 14D3     		bcc	.L148
 3062              	.L149:
 3063              		.loc 1 1167 3 discriminator 6
 3064 0102 FB68     		ldr	r3, [r7, #12]
 3065 0104 B3F1007F 		cmp	r3, #33554432
 3066 0108 03D1     		bne	.L150
 3067              		.loc 1 1167 3 discriminator 8
 3068 010a 3B68     		ldr	r3, [r7]
 3069 010c 9B68     		ldr	r3, [r3, #8]
 3070 010e FF2B     		cmp	r3, #255
 3071 0110 0CD9     		bls	.L148
 3072              	.L150:
 3073              		.loc 1 1167 3 discriminator 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 75


 3074 0112 FB68     		ldr	r3, [r7, #12]
 3075 0114 B3F1407F 		cmp	r3, #50331648
 3076 0118 03D1     		bne	.L151
 3077              		.loc 1 1167 3 discriminator 11
 3078 011a 3B68     		ldr	r3, [r7]
 3079 011c 9B68     		ldr	r3, [r3, #8]
 3080 011e 3F2B     		cmp	r3, #63
 3081 0120 04D9     		bls	.L148
 3082              	.L151:
 3083              		.loc 1 1167 3 discriminator 12
 3084 0122 40F28F41 		movw	r1, #1167
 3085 0126 3148     		ldr	r0, .L156+12
 3086 0128 FFF7FEFF 		bl	assert_failed
 3087              	.L148:
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 3088              		.loc 1 1171 3 is_stmt 1
 3089 012c 7B68     		ldr	r3, [r7, #4]
 3090 012e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3091 0132 012B     		cmp	r3, #1
 3092 0134 01D1     		bne	.L152
 3093              		.loc 1 1171 3 is_stmt 0 discriminator 1
 3094 0136 0223     		movs	r3, #2
 3095 0138 4DE0     		b	.L153
 3096              	.L152:
 3097              		.loc 1 1171 3 discriminator 2
 3098 013a 7B68     		ldr	r3, [r7, #4]
 3099 013c 0122     		movs	r2, #1
 3100 013e 83F83C20 		strb	r2, [r3, #60]
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 3101              		.loc 1 1173 21 is_stmt 1 discriminator 2
 3102 0142 3B68     		ldr	r3, [r7]
 3103 0144 1B69     		ldr	r3, [r3, #16]
 3104              		.loc 1 1173 5 discriminator 2
 3105 0146 012B     		cmp	r3, #1
 3106 0148 08D1     		bne	.L154
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 3107              		.loc 1 1176 5
 3108 014a 7B68     		ldr	r3, [r7, #4]
 3109 014c 1B68     		ldr	r3, [r3]
 3110 014e 5A68     		ldr	r2, [r3, #4]
 3111 0150 7B68     		ldr	r3, [r7, #4]
 3112 0152 1B68     		ldr	r3, [r3]
 3113 0154 42F04002 		orr	r2, r2, #64
 3114 0158 5A60     		str	r2, [r3, #4]
 3115 015a 07E0     		b	.L155
 3116              	.L154:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 76


 3117              		.loc 1 1181 5
 3118 015c 7B68     		ldr	r3, [r7, #4]
 3119 015e 1B68     		ldr	r3, [r3]
 3120 0160 5A68     		ldr	r2, [r3, #4]
 3121 0162 7B68     		ldr	r3, [r7, #4]
 3122 0164 1B68     		ldr	r3, [r3]
 3123 0166 22F04002 		bic	r2, r2, #64
 3124 016a 5A60     		str	r2, [r3, #4]
 3125              	.L155:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 3126              		.loc 1 1185 7
 3127 016c 7B68     		ldr	r3, [r7, #4]
 3128 016e 1B68     		ldr	r3, [r3]
 3129              		.loc 1 1185 23
 3130 0170 5B68     		ldr	r3, [r3, #4]
 3131              		.loc 1 1185 7
 3132 0172 7A68     		ldr	r2, [r7, #4]
 3133 0174 1268     		ldr	r2, [r2]
 3134              		.loc 1 1185 23
 3135 0176 23F44003 		bic	r3, r3, #12582912
 3136 017a 23F40073 		bic	r3, r3, #512
 3137 017e 5360     		str	r3, [r2, #4]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 3138              		.loc 1 1188 7
 3139 0180 7B68     		ldr	r3, [r7, #4]
 3140 0182 1B68     		ldr	r3, [r3]
 3141              		.loc 1 1188 23
 3142 0184 5968     		ldr	r1, [r3, #4]
 3143              		.loc 1 1188 41
 3144 0186 3B68     		ldr	r3, [r7]
 3145 0188 1A68     		ldr	r2, [r3]
 3146              		.loc 1 1188 7
 3147 018a 7B68     		ldr	r3, [r7, #4]
 3148 018c 1B68     		ldr	r3, [r3]
 3149              		.loc 1 1188 23
 3150 018e 0A43     		orrs	r2, r2, r1
 3151 0190 5A60     		str	r2, [r3, #4]
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 3152              		.loc 1 1191 7
 3153 0192 7B68     		ldr	r3, [r7, #4]
 3154 0194 1B68     		ldr	r3, [r3]
 3155              		.loc 1 1191 40
 3156 0196 3A68     		ldr	r2, [r7]
 3157 0198 5268     		ldr	r2, [r2, #4]
 3158              		.loc 1 1191 23
 3159 019a 5A62     		str	r2, [r3, #36]
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 3160              		.loc 1 1194 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 77


 3161 019c 7B68     		ldr	r3, [r7, #4]
 3162 019e 1B68     		ldr	r3, [r3]
 3163              		.loc 1 1194 40
 3164 01a0 3A68     		ldr	r2, [r7]
 3165 01a2 9268     		ldr	r2, [r2, #8]
 3166              		.loc 1 1194 23
 3167 01a4 9A62     		str	r2, [r3, #40]
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 3168              		.loc 1 1197 7
 3169 01a6 7B68     		ldr	r3, [r7, #4]
 3170 01a8 1B68     		ldr	r3, [r3]
 3171              		.loc 1 1197 23
 3172 01aa 5A68     		ldr	r2, [r3, #4]
 3173              		.loc 1 1197 7
 3174 01ac 7B68     		ldr	r3, [r7, #4]
 3175 01ae 1B68     		ldr	r3, [r3]
 3176              		.loc 1 1197 23
 3177 01b0 22F01F02 		bic	r2, r2, #31
 3178 01b4 5A60     		str	r2, [r3, #4]
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 3179              		.loc 1 1200 7
 3180 01b6 7B68     		ldr	r3, [r7, #4]
 3181 01b8 1B68     		ldr	r3, [r3]
 3182              		.loc 1 1200 23
 3183 01ba 5A68     		ldr	r2, [r3, #4]
 3184              		.loc 1 1200 63
 3185 01bc 3B68     		ldr	r3, [r7]
 3186 01be DB68     		ldr	r3, [r3, #12]
 3187              		.loc 1 1200 37
 3188 01c0 9BB2     		uxth	r3, r3
 3189              		.loc 1 1200 26
 3190 01c2 1946     		mov	r1, r3
 3191              		.loc 1 1200 7
 3192 01c4 7B68     		ldr	r3, [r7, #4]
 3193 01c6 1B68     		ldr	r3, [r3]
 3194              		.loc 1 1200 23
 3195 01c8 0A43     		orrs	r2, r2, r1
 3196 01ca 5A60     		str	r2, [r3, #4]
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 3197              		.loc 1 1203 3
 3198 01cc 7B68     		ldr	r3, [r7, #4]
 3199 01ce 0022     		movs	r2, #0
 3200 01d0 83F83C20 		strb	r2, [r3, #60]
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 3201              		.loc 1 1206 10
 3202 01d4 0023     		movs	r3, #0
 3203              	.L153:
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3204              		.loc 1 1207 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 78


 3205 01d6 1846     		mov	r0, r3
 3206 01d8 1037     		adds	r7, r7, #16
 3207              	.LCFI107:
 3208              		.cfi_def_cfa_offset 8
 3209 01da BD46     		mov	sp, r7
 3210              	.LCFI108:
 3211              		.cfi_def_cfa_register 13
 3212              		@ sp needed
 3213 01dc 80BD     		pop	{r7, pc}
 3214              	.L157:
 3215 01de 00BF     		.align	2
 3216              	.L156:
 3217 01e0 00028000 		.word	8389120
 3218 01e4 00024000 		.word	4194816
 3219 01e8 0002C000 		.word	12583424
 3220 01ec 00000000 		.word	.LC0
 3221              		.cfi_endproc
 3222              	.LFE147:
 3224              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3225              		.align	1
 3226              		.global	HAL_ADC_GetState
 3227              		.syntax unified
 3228              		.thumb
 3229              		.thumb_func
 3231              	HAL_ADC_GetState:
 3232              	.LFB148:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_ADC_StateTypeDef HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3233              		.loc 1 1236 1
 3234              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 79


 3235              		@ args = 0, pretend = 0, frame = 8
 3236              		@ frame_needed = 1, uses_anonymous_args = 0
 3237              		@ link register save eliminated.
 3238 0000 80B4     		push	{r7}
 3239              	.LCFI109:
 3240              		.cfi_def_cfa_offset 4
 3241              		.cfi_offset 7, -4
 3242 0002 83B0     		sub	sp, sp, #12
 3243              	.LCFI110:
 3244              		.cfi_def_cfa_offset 16
 3245 0004 00AF     		add	r7, sp, #0
 3246              	.LCFI111:
 3247              		.cfi_def_cfa_register 7
 3248 0006 7860     		str	r0, [r7, #4]
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 3249              		.loc 1 1238 14
 3250 0008 7B68     		ldr	r3, [r7, #4]
 3251 000a 93F83D30 		ldrb	r3, [r3, #61]
 3252 000e DBB2     		uxtb	r3, r3
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3253              		.loc 1 1239 1
 3254 0010 1846     		mov	r0, r3
 3255 0012 0C37     		adds	r7, r7, #12
 3256              	.LCFI112:
 3257              		.cfi_def_cfa_offset 4
 3258 0014 BD46     		mov	sp, r7
 3259              	.LCFI113:
 3260              		.cfi_def_cfa_register 13
 3261              		@ sp needed
 3262 0016 5DF8047B 		ldr	r7, [sp], #4
 3263              	.LCFI114:
 3264              		.cfi_restore 7
 3265              		.cfi_def_cfa_offset 0
 3266 001a 7047     		bx	lr
 3267              		.cfi_endproc
 3268              	.LFE148:
 3270              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3271              		.align	1
 3272              		.global	HAL_ADC_GetError
 3273              		.syntax unified
 3274              		.thumb
 3275              		.thumb_func
 3277              	HAL_ADC_GetError:
 3278              	.LFB149:
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3279              		.loc 1 1248 1
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 80


 3282              		@ frame_needed = 1, uses_anonymous_args = 0
 3283              		@ link register save eliminated.
 3284 0000 80B4     		push	{r7}
 3285              	.LCFI115:
 3286              		.cfi_def_cfa_offset 4
 3287              		.cfi_offset 7, -4
 3288 0002 83B0     		sub	sp, sp, #12
 3289              	.LCFI116:
 3290              		.cfi_def_cfa_offset 16
 3291 0004 00AF     		add	r7, sp, #0
 3292              	.LCFI117:
 3293              		.cfi_def_cfa_register 7
 3294 0006 7860     		str	r0, [r7, #4]
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 3295              		.loc 1 1249 14
 3296 0008 7B68     		ldr	r3, [r7, #4]
 3297 000a 1B6C     		ldr	r3, [r3, #64]
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3298              		.loc 1 1250 1
 3299 000c 1846     		mov	r0, r3
 3300 000e 0C37     		adds	r7, r7, #12
 3301              	.LCFI118:
 3302              		.cfi_def_cfa_offset 4
 3303 0010 BD46     		mov	sp, r7
 3304              	.LCFI119:
 3305              		.cfi_def_cfa_register 13
 3306              		@ sp needed
 3307 0012 5DF8047B 		ldr	r7, [sp], #4
 3308              	.LCFI120:
 3309              		.cfi_restore 7
 3310              		.cfi_def_cfa_offset 0
 3311 0016 7047     		bx	lr
 3312              		.cfi_endproc
 3313              	.LFE149:
 3315              		.section	.text.ADC_Init,"ax",%progbits
 3316              		.align	1
 3317              		.syntax unified
 3318              		.thumb
 3319              		.thumb_func
 3321              	ADC_Init:
 3322              	.LFB150:
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc: pointer to a ADC_HandleTypeDef structure that contains
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 81


1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3323              		.loc 1 1268 1
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 16
 3326              		@ frame_needed = 1, uses_anonymous_args = 0
 3327 0000 80B5     		push	{r7, lr}
 3328              	.LCFI121:
 3329              		.cfi_def_cfa_offset 8
 3330              		.cfi_offset 7, -8
 3331              		.cfi_offset 14, -4
 3332 0002 84B0     		sub	sp, sp, #16
 3333              	.LCFI122:
 3334              		.cfi_def_cfa_offset 24
 3335 0004 00AF     		add	r7, sp, #0
 3336              	.LCFI123:
 3337              		.cfi_def_cfa_register 7
 3338 0006 7860     		str	r0, [r7, #4]
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC->CCR &= ~(ADC_CCR_ADCPRE);
 3339              		.loc 1 1271 12
 3340 0008 824B     		ldr	r3, .L170
 3341 000a 5B68     		ldr	r3, [r3, #4]
 3342 000c 814A     		ldr	r2, .L170
 3343 000e 23F44033 		bic	r3, r3, #196608
 3344 0012 5360     		str	r3, [r2, #4]
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC->CCR |=  hadc->Init.ClockPrescaler;
 3345              		.loc 1 1272 12
 3346 0014 7F4B     		ldr	r3, .L170
 3347 0016 5A68     		ldr	r2, [r3, #4]
 3348              		.loc 1 1272 26
 3349 0018 7B68     		ldr	r3, [r7, #4]
 3350 001a 5B68     		ldr	r3, [r3, #4]
 3351              		.loc 1 1272 12
 3352 001c 7D49     		ldr	r1, .L170
 3353 001e 1343     		orrs	r3, r3, r2
 3354 0020 4B60     		str	r3, [r1, #4]
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 3355              		.loc 1 1275 7
 3356 0022 7B68     		ldr	r3, [r7, #4]
 3357 0024 1B68     		ldr	r3, [r3]
 3358              		.loc 1 1275 23
 3359 0026 5A68     		ldr	r2, [r3, #4]
 3360              		.loc 1 1275 7
 3361 0028 7B68     		ldr	r3, [r7, #4]
 3362 002a 1B68     		ldr	r3, [r3]
 3363              		.loc 1 1275 23
 3364 002c 22F48072 		bic	r2, r2, #256
 3365 0030 5A60     		str	r2, [r3, #4]
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 3366              		.loc 1 1276 7
 3367 0032 7B68     		ldr	r3, [r7, #4]
 3368 0034 1B68     		ldr	r3, [r3]
 3369              		.loc 1 1276 23
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 82


 3370 0036 5968     		ldr	r1, [r3, #4]
 3371              		.loc 1 1276 27
 3372 0038 7B68     		ldr	r3, [r7, #4]
 3373 003a 1B69     		ldr	r3, [r3, #16]
 3374 003c 1A02     		lsls	r2, r3, #8
 3375              		.loc 1 1276 7
 3376 003e 7B68     		ldr	r3, [r7, #4]
 3377 0040 1B68     		ldr	r3, [r3]
 3378              		.loc 1 1276 23
 3379 0042 0A43     		orrs	r2, r2, r1
 3380 0044 5A60     		str	r2, [r3, #4]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 3381              		.loc 1 1279 7
 3382 0046 7B68     		ldr	r3, [r7, #4]
 3383 0048 1B68     		ldr	r3, [r3]
 3384              		.loc 1 1279 23
 3385 004a 5A68     		ldr	r2, [r3, #4]
 3386              		.loc 1 1279 7
 3387 004c 7B68     		ldr	r3, [r7, #4]
 3388 004e 1B68     		ldr	r3, [r3]
 3389              		.loc 1 1279 23
 3390 0050 22F04072 		bic	r2, r2, #50331648
 3391 0054 5A60     		str	r2, [r3, #4]
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 3392              		.loc 1 1280 7
 3393 0056 7B68     		ldr	r3, [r7, #4]
 3394 0058 1B68     		ldr	r3, [r3]
 3395              		.loc 1 1280 23
 3396 005a 5968     		ldr	r1, [r3, #4]
 3397              		.loc 1 1280 37
 3398 005c 7B68     		ldr	r3, [r7, #4]
 3399 005e 9A68     		ldr	r2, [r3, #8]
 3400              		.loc 1 1280 7
 3401 0060 7B68     		ldr	r3, [r7, #4]
 3402 0062 1B68     		ldr	r3, [r3]
 3403              		.loc 1 1280 23
 3404 0064 0A43     		orrs	r2, r2, r1
 3405 0066 5A60     		str	r2, [r3, #4]
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 3406              		.loc 1 1283 7
 3407 0068 7B68     		ldr	r3, [r7, #4]
 3408 006a 1B68     		ldr	r3, [r3]
 3409              		.loc 1 1283 23
 3410 006c 9A68     		ldr	r2, [r3, #8]
 3411              		.loc 1 1283 7
 3412 006e 7B68     		ldr	r3, [r7, #4]
 3413 0070 1B68     		ldr	r3, [r3]
 3414              		.loc 1 1283 23
 3415 0072 22F40062 		bic	r2, r2, #2048
 3416 0076 9A60     		str	r2, [r3, #8]
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 3417              		.loc 1 1284 7
 3418 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 83


 3419 007a 1B68     		ldr	r3, [r3]
 3420              		.loc 1 1284 23
 3421 007c 9968     		ldr	r1, [r3, #8]
 3422              		.loc 1 1284 36
 3423 007e 7B68     		ldr	r3, [r7, #4]
 3424 0080 DA68     		ldr	r2, [r3, #12]
 3425              		.loc 1 1284 7
 3426 0082 7B68     		ldr	r3, [r7, #4]
 3427 0084 1B68     		ldr	r3, [r3]
 3428              		.loc 1 1284 23
 3429 0086 0A43     		orrs	r2, r2, r1
 3430 0088 9A60     		str	r2, [r3, #8]
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 3431              		.loc 1 1291 16
 3432 008a 7B68     		ldr	r3, [r7, #4]
 3433 008c DB6A     		ldr	r3, [r3, #44]
 3434              		.loc 1 1291 5
 3435 008e 624A     		ldr	r2, .L170+4
 3436 0090 9342     		cmp	r3, r2
 3437 0092 22D0     		beq	.L163
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3438              		.loc 1 1294 9
 3439 0094 7B68     		ldr	r3, [r7, #4]
 3440 0096 1B68     		ldr	r3, [r3]
 3441              		.loc 1 1294 25
 3442 0098 9A68     		ldr	r2, [r3, #8]
 3443              		.loc 1 1294 9
 3444 009a 7B68     		ldr	r3, [r7, #4]
 3445 009c 1B68     		ldr	r3, [r3]
 3446              		.loc 1 1294 25
 3447 009e 22F07062 		bic	r2, r2, #251658240
 3448 00a2 9A60     		str	r2, [r3, #8]
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 3449              		.loc 1 1295 9
 3450 00a4 7B68     		ldr	r3, [r7, #4]
 3451 00a6 1B68     		ldr	r3, [r3]
 3452              		.loc 1 1295 25
 3453 00a8 9968     		ldr	r1, [r3, #8]
 3454              		.loc 1 1295 38
 3455 00aa 7B68     		ldr	r3, [r7, #4]
 3456 00ac DA6A     		ldr	r2, [r3, #44]
 3457              		.loc 1 1295 9
 3458 00ae 7B68     		ldr	r3, [r7, #4]
 3459 00b0 1B68     		ldr	r3, [r3]
 3460              		.loc 1 1295 25
 3461 00b2 0A43     		orrs	r2, r2, r1
 3462 00b4 9A60     		str	r2, [r3, #8]
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 84


1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3463              		.loc 1 1298 9
 3464 00b6 7B68     		ldr	r3, [r7, #4]
 3465 00b8 1B68     		ldr	r3, [r3]
 3466              		.loc 1 1298 25
 3467 00ba 9A68     		ldr	r2, [r3, #8]
 3468              		.loc 1 1298 9
 3469 00bc 7B68     		ldr	r3, [r7, #4]
 3470 00be 1B68     		ldr	r3, [r3]
 3471              		.loc 1 1298 25
 3472 00c0 22F04052 		bic	r2, r2, #805306368
 3473 00c4 9A60     		str	r2, [r3, #8]
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 3474              		.loc 1 1299 9
 3475 00c6 7B68     		ldr	r3, [r7, #4]
 3476 00c8 1B68     		ldr	r3, [r3]
 3477              		.loc 1 1299 25
 3478 00ca 9968     		ldr	r1, [r3, #8]
 3479              		.loc 1 1299 38
 3480 00cc 7B68     		ldr	r3, [r7, #4]
 3481 00ce 1A6B     		ldr	r2, [r3, #48]
 3482              		.loc 1 1299 9
 3483 00d0 7B68     		ldr	r3, [r7, #4]
 3484 00d2 1B68     		ldr	r3, [r3]
 3485              		.loc 1 1299 25
 3486 00d4 0A43     		orrs	r2, r2, r1
 3487 00d6 9A60     		str	r2, [r3, #8]
 3488 00d8 0FE0     		b	.L164
 3489              	.L163:
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 3490              		.loc 1 1304 9
 3491 00da 7B68     		ldr	r3, [r7, #4]
 3492 00dc 1B68     		ldr	r3, [r3]
 3493              		.loc 1 1304 25
 3494 00de 9A68     		ldr	r2, [r3, #8]
 3495              		.loc 1 1304 9
 3496 00e0 7B68     		ldr	r3, [r7, #4]
 3497 00e2 1B68     		ldr	r3, [r3]
 3498              		.loc 1 1304 25
 3499 00e4 22F07062 		bic	r2, r2, #251658240
 3500 00e8 9A60     		str	r2, [r3, #8]
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 3501              		.loc 1 1305 9
 3502 00ea 7B68     		ldr	r3, [r7, #4]
 3503 00ec 1B68     		ldr	r3, [r3]
 3504              		.loc 1 1305 25
 3505 00ee 9A68     		ldr	r2, [r3, #8]
 3506              		.loc 1 1305 9
 3507 00f0 7B68     		ldr	r3, [r7, #4]
 3508 00f2 1B68     		ldr	r3, [r3]
 3509              		.loc 1 1305 25
 3510 00f4 22F04052 		bic	r2, r2, #805306368
 3511 00f8 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 85


 3512              	.L164:
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 3513              		.loc 1 1309 7
 3514 00fa 7B68     		ldr	r3, [r7, #4]
 3515 00fc 1B68     		ldr	r3, [r3]
 3516              		.loc 1 1309 23
 3517 00fe 9A68     		ldr	r2, [r3, #8]
 3518              		.loc 1 1309 7
 3519 0100 7B68     		ldr	r3, [r7, #4]
 3520 0102 1B68     		ldr	r3, [r3]
 3521              		.loc 1 1309 23
 3522 0104 22F00202 		bic	r2, r2, #2
 3523 0108 9A60     		str	r2, [r3, #8]
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 3524              		.loc 1 1310 7
 3525 010a 7B68     		ldr	r3, [r7, #4]
 3526 010c 1B68     		ldr	r3, [r3]
 3527              		.loc 1 1310 23
 3528 010e 9968     		ldr	r1, [r3, #8]
 3529              		.loc 1 1310 26
 3530 0110 7B68     		ldr	r3, [r7, #4]
 3531 0112 9B69     		ldr	r3, [r3, #24]
 3532 0114 5A00     		lsls	r2, r3, #1
 3533              		.loc 1 1310 7
 3534 0116 7B68     		ldr	r3, [r7, #4]
 3535 0118 1B68     		ldr	r3, [r3]
 3536              		.loc 1 1310 23
 3537 011a 0A43     		orrs	r2, r2, r1
 3538 011c 9A60     		str	r2, [r3, #8]
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 3539              		.loc 1 1312 16
 3540 011e 7B68     		ldr	r3, [r7, #4]
 3541 0120 5B6A     		ldr	r3, [r3, #36]
 3542              		.loc 1 1312 5
 3543 0122 002B     		cmp	r3, #0
 3544 0124 33D0     		beq	.L165
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
 3545              		.loc 1 1314 5
 3546 0126 7B68     		ldr	r3, [r7, #4]
 3547 0128 9B6A     		ldr	r3, [r3, #40]
 3548 012a 002B     		cmp	r3, #0
 3549 012c 03D0     		beq	.L166
 3550              		.loc 1 1314 5 is_stmt 0 discriminator 2
 3551 012e 7B68     		ldr	r3, [r7, #4]
 3552 0130 9B6A     		ldr	r3, [r3, #40]
 3553 0132 082B     		cmp	r3, #8
 3554 0134 04D9     		bls	.L167
 3555              	.L166:
 3556              		.loc 1 1314 5 discriminator 3
 3557 0136 40F22251 		movw	r1, #1314
 3558 013a 3848     		ldr	r0, .L170+8
 3559 013c FFF7FEFF 		bl	assert_failed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 86


 3560              	.L167:
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 3561              		.loc 1 1317 9 is_stmt 1
 3562 0140 7B68     		ldr	r3, [r7, #4]
 3563 0142 1B68     		ldr	r3, [r3]
 3564              		.loc 1 1317 25
 3565 0144 5A68     		ldr	r2, [r3, #4]
 3566              		.loc 1 1317 9
 3567 0146 7B68     		ldr	r3, [r7, #4]
 3568 0148 1B68     		ldr	r3, [r3]
 3569              		.loc 1 1317 25
 3570 014a 42F40062 		orr	r2, r2, #2048
 3571 014e 5A60     		str	r2, [r3, #4]
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 3572              		.loc 1 1320 9
 3573 0150 7B68     		ldr	r3, [r7, #4]
 3574 0152 1B68     		ldr	r3, [r3]
 3575              		.loc 1 1320 25
 3576 0154 5A68     		ldr	r2, [r3, #4]
 3577              		.loc 1 1320 9
 3578 0156 7B68     		ldr	r3, [r7, #4]
 3579 0158 1B68     		ldr	r3, [r3]
 3580              		.loc 1 1320 25
 3581 015a 22F46042 		bic	r2, r2, #57344
 3582 015e 5A60     		str	r2, [r3, #4]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 3583              		.loc 1 1321 29
 3584 0160 7B68     		ldr	r3, [r7, #4]
 3585 0162 9B6A     		ldr	r3, [r3, #40]
 3586 0164 5A1E     		subs	r2, r3, #1
 3587 0166 4FF46043 		mov	r3, #57344
 3588 016a FB60     		str	r3, [r7, #12]
 3589              	.LBB4:
 3590              	.LBB5:
 3591              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 87


  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 88


  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 89


 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 90


 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 91


 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 92


 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 93


 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 94


 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:Drivers/CMSIS/Include/core_cmInstr.h **** }
 452:Drivers/CMSIS/Include/core_cmInstr.h **** 
 453:Drivers/CMSIS/Include/core_cmInstr.h **** 
 454:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:Drivers/CMSIS/Include/core_cmInstr.h **** 
 456:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 460:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:Drivers/CMSIS/Include/core_cmInstr.h **** {
 462:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:Drivers/CMSIS/Include/core_cmInstr.h **** }
 464:Drivers/CMSIS/Include/core_cmInstr.h **** 
 465:Drivers/CMSIS/Include/core_cmInstr.h **** 
 466:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:Drivers/CMSIS/Include/core_cmInstr.h **** 
 468:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 471:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:Drivers/CMSIS/Include/core_cmInstr.h **** {
 473:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:Drivers/CMSIS/Include/core_cmInstr.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 95


 475:Drivers/CMSIS/Include/core_cmInstr.h **** 
 476:Drivers/CMSIS/Include/core_cmInstr.h **** 
 477:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:Drivers/CMSIS/Include/core_cmInstr.h **** 
 479:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 482:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:Drivers/CMSIS/Include/core_cmInstr.h **** {
 484:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:Drivers/CMSIS/Include/core_cmInstr.h **** }
 486:Drivers/CMSIS/Include/core_cmInstr.h **** 
 487:Drivers/CMSIS/Include/core_cmInstr.h **** 
 488:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:Drivers/CMSIS/Include/core_cmInstr.h **** 
 490:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:Drivers/CMSIS/Include/core_cmInstr.h **** 
 492:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 494:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 495:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 496:Drivers/CMSIS/Include/core_cmInstr.h **** {
 497:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:Drivers/CMSIS/Include/core_cmInstr.h ****   return __builtin_bswap32(value);
 499:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 500:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 501:Drivers/CMSIS/Include/core_cmInstr.h **** 
 502:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 503:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 504:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 505:Drivers/CMSIS/Include/core_cmInstr.h **** }
 506:Drivers/CMSIS/Include/core_cmInstr.h **** 
 507:Drivers/CMSIS/Include/core_cmInstr.h **** 
 508:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 509:Drivers/CMSIS/Include/core_cmInstr.h **** 
 510:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 511:Drivers/CMSIS/Include/core_cmInstr.h **** 
 512:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 513:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 514:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 515:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 516:Drivers/CMSIS/Include/core_cmInstr.h **** {
 517:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 518:Drivers/CMSIS/Include/core_cmInstr.h **** 
 519:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 520:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 521:Drivers/CMSIS/Include/core_cmInstr.h **** }
 522:Drivers/CMSIS/Include/core_cmInstr.h **** 
 523:Drivers/CMSIS/Include/core_cmInstr.h **** 
 524:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 525:Drivers/CMSIS/Include/core_cmInstr.h **** 
 526:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 527:Drivers/CMSIS/Include/core_cmInstr.h **** 
 528:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 529:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 530:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 531:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 96


 532:Drivers/CMSIS/Include/core_cmInstr.h **** {
 533:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 534:Drivers/CMSIS/Include/core_cmInstr.h ****   return (short)__builtin_bswap16(value);
 535:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 536:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 537:Drivers/CMSIS/Include/core_cmInstr.h **** 
 538:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 539:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 540:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 541:Drivers/CMSIS/Include/core_cmInstr.h **** }
 542:Drivers/CMSIS/Include/core_cmInstr.h **** 
 543:Drivers/CMSIS/Include/core_cmInstr.h **** 
 544:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 545:Drivers/CMSIS/Include/core_cmInstr.h **** 
 546:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 547:Drivers/CMSIS/Include/core_cmInstr.h **** 
 548:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 549:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 550:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 551:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 552:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 553:Drivers/CMSIS/Include/core_cmInstr.h **** {
 554:Drivers/CMSIS/Include/core_cmInstr.h ****   return (op1 >> op2) | (op1 << (32 - op2));
 555:Drivers/CMSIS/Include/core_cmInstr.h **** }
 556:Drivers/CMSIS/Include/core_cmInstr.h **** 
 557:Drivers/CMSIS/Include/core_cmInstr.h **** 
 558:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 559:Drivers/CMSIS/Include/core_cmInstr.h **** 
 560:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 561:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 562:Drivers/CMSIS/Include/core_cmInstr.h **** 
 563:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 564:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 565:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 566:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 567:Drivers/CMSIS/Include/core_cmInstr.h **** 
 568:Drivers/CMSIS/Include/core_cmInstr.h **** 
 569:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 570:Drivers/CMSIS/Include/core_cmInstr.h **** 
 571:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 572:Drivers/CMSIS/Include/core_cmInstr.h **** 
 573:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 574:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 575:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 576:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 577:Drivers/CMSIS/Include/core_cmInstr.h **** {
 578:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 579:Drivers/CMSIS/Include/core_cmInstr.h **** 
 580:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 581:Drivers/CMSIS/Include/core_cmInstr.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 3592              		.loc 2 581 4
 3593 016c FB68     		ldr	r3, [r7, #12]
 3594              		.syntax unified
 3595              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 3596 016e 93FAA3F3 		rbit r3, r3
 3597              	@ 0 "" 2
 3598              		.thumb
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 97


 3599              		.syntax unified
 3600 0172 BB60     		str	r3, [r7, #8]
 582:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 583:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 584:Drivers/CMSIS/Include/core_cmInstr.h **** 
 585:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 586:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 587:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 588:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 589:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 590:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 591:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 592:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 593:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 594:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 3601              		.loc 2 594 9
 3602 0174 BB68     		ldr	r3, [r7, #8]
 3603              	.LBE5:
 3604              	.LBE4:
 3605              		.loc 1 1321 29
 3606 0176 B3FA83F3 		clz	r3, r3
 3607 017a 02FA03F1 		lsl	r1, r2, r3
 3608              		.loc 1 1321 9
 3609 017e 7B68     		ldr	r3, [r7, #4]
 3610 0180 1B68     		ldr	r3, [r3]
 3611              		.loc 1 1321 25
 3612 0182 5A68     		ldr	r2, [r3, #4]
 3613              		.loc 1 1321 9
 3614 0184 7B68     		ldr	r3, [r7, #4]
 3615 0186 1B68     		ldr	r3, [r3]
 3616              		.loc 1 1321 25
 3617 0188 0A43     		orrs	r2, r2, r1
 3618 018a 5A60     		str	r2, [r3, #4]
 3619 018c 07E0     		b	.L169
 3620              	.L165:
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 3621              		.loc 1 1326 9
 3622 018e 7B68     		ldr	r3, [r7, #4]
 3623 0190 1B68     		ldr	r3, [r3]
 3624              		.loc 1 1326 25
 3625 0192 5A68     		ldr	r2, [r3, #4]
 3626              		.loc 1 1326 9
 3627 0194 7B68     		ldr	r3, [r7, #4]
 3628 0196 1B68     		ldr	r3, [r3]
 3629              		.loc 1 1326 25
 3630 0198 22F40062 		bic	r2, r2, #2048
 3631 019c 5A60     		str	r2, [r3, #4]
 3632              	.L169:
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 3633              		.loc 1 1330 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 98


 3634 019e 7B68     		ldr	r3, [r7, #4]
 3635 01a0 1B68     		ldr	r3, [r3]
 3636              		.loc 1 1330 24
 3637 01a2 DA6A     		ldr	r2, [r3, #44]
 3638              		.loc 1 1330 7
 3639 01a4 7B68     		ldr	r3, [r7, #4]
 3640 01a6 1B68     		ldr	r3, [r3]
 3641              		.loc 1 1330 24
 3642 01a8 22F47002 		bic	r2, r2, #15728640
 3643 01ac DA62     		str	r2, [r3, #44]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 3644              		.loc 1 1331 7
 3645 01ae 7B68     		ldr	r3, [r7, #4]
 3646 01b0 1B68     		ldr	r3, [r3]
 3647              		.loc 1 1331 24
 3648 01b2 D96A     		ldr	r1, [r3, #44]
 3649              		.loc 1 1331 28
 3650 01b4 7B68     		ldr	r3, [r7, #4]
 3651 01b6 1B6A     		ldr	r3, [r3, #32]
 3652 01b8 013B     		subs	r3, r3, #1
 3653 01ba 1A05     		lsls	r2, r3, #20
 3654              		.loc 1 1331 7
 3655 01bc 7B68     		ldr	r3, [r7, #4]
 3656 01be 1B68     		ldr	r3, [r3]
 3657              		.loc 1 1331 24
 3658 01c0 0A43     		orrs	r2, r2, r1
 3659 01c2 DA62     		str	r2, [r3, #44]
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 3660              		.loc 1 1334 7
 3661 01c4 7B68     		ldr	r3, [r7, #4]
 3662 01c6 1B68     		ldr	r3, [r3]
 3663              		.loc 1 1334 23
 3664 01c8 9A68     		ldr	r2, [r3, #8]
 3665              		.loc 1 1334 7
 3666 01ca 7B68     		ldr	r3, [r7, #4]
 3667 01cc 1B68     		ldr	r3, [r3]
 3668              		.loc 1 1334 23
 3669 01ce 22F40072 		bic	r2, r2, #512
 3670 01d2 9A60     		str	r2, [r3, #8]
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 3671              		.loc 1 1335 7
 3672 01d4 7B68     		ldr	r3, [r7, #4]
 3673 01d6 1B68     		ldr	r3, [r3]
 3674              		.loc 1 1335 23
 3675 01d8 9968     		ldr	r1, [r3, #8]
 3676              		.loc 1 1335 26
 3677 01da 7B68     		ldr	r3, [r7, #4]
 3678 01dc DB69     		ldr	r3, [r3, #28]
 3679 01de 5A02     		lsls	r2, r3, #9
 3680              		.loc 1 1335 7
 3681 01e0 7B68     		ldr	r3, [r7, #4]
 3682 01e2 1B68     		ldr	r3, [r3]
 3683              		.loc 1 1335 23
 3684 01e4 0A43     		orrs	r2, r2, r1
 3685 01e6 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 99


1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 3686              		.loc 1 1338 7
 3687 01e8 7B68     		ldr	r3, [r7, #4]
 3688 01ea 1B68     		ldr	r3, [r3]
 3689              		.loc 1 1338 23
 3690 01ec 9A68     		ldr	r2, [r3, #8]
 3691              		.loc 1 1338 7
 3692 01ee 7B68     		ldr	r3, [r7, #4]
 3693 01f0 1B68     		ldr	r3, [r3]
 3694              		.loc 1 1338 23
 3695 01f2 22F48062 		bic	r2, r2, #1024
 3696 01f6 9A60     		str	r2, [r3, #8]
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 3697              		.loc 1 1339 7
 3698 01f8 7B68     		ldr	r3, [r7, #4]
 3699 01fa 1B68     		ldr	r3, [r3]
 3700              		.loc 1 1339 23
 3701 01fc 9968     		ldr	r1, [r3, #8]
 3702              		.loc 1 1339 26
 3703 01fe 7B68     		ldr	r3, [r7, #4]
 3704 0200 5B69     		ldr	r3, [r3, #20]
 3705 0202 9A02     		lsls	r2, r3, #10
 3706              		.loc 1 1339 7
 3707 0204 7B68     		ldr	r3, [r7, #4]
 3708 0206 1B68     		ldr	r3, [r3]
 3709              		.loc 1 1339 23
 3710 0208 0A43     		orrs	r2, r2, r1
 3711 020a 9A60     		str	r2, [r3, #8]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3712              		.loc 1 1340 1
 3713 020c 00BF     		nop
 3714 020e 1037     		adds	r7, r7, #16
 3715              	.LCFI124:
 3716              		.cfi_def_cfa_offset 8
 3717 0210 BD46     		mov	sp, r7
 3718              	.LCFI125:
 3719              		.cfi_def_cfa_register 13
 3720              		@ sp needed
 3721 0212 80BD     		pop	{r7, pc}
 3722              	.L171:
 3723              		.align	2
 3724              	.L170:
 3725 0214 00230140 		.word	1073816320
 3726 0218 0100000F 		.word	251658241
 3727 021c 00000000 		.word	.LC0
 3728              		.cfi_endproc
 3729              	.LFE150:
 3731              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3732              		.align	1
 3733              		.syntax unified
 3734              		.thumb
 3735              		.thumb_func
 3737              	ADC_DMAConvCplt:
 3738              	.LFB151:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 100


1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3739              		.loc 1 1349 1
 3740              		.cfi_startproc
 3741              		@ args = 0, pretend = 0, frame = 16
 3742              		@ frame_needed = 1, uses_anonymous_args = 0
 3743 0000 80B5     		push	{r7, lr}
 3744              	.LCFI126:
 3745              		.cfi_def_cfa_offset 8
 3746              		.cfi_offset 7, -8
 3747              		.cfi_offset 14, -4
 3748 0002 84B0     		sub	sp, sp, #16
 3749              	.LCFI127:
 3750              		.cfi_def_cfa_offset 24
 3751 0004 00AF     		add	r7, sp, #0
 3752              	.LCFI128:
 3753              		.cfi_def_cfa_register 7
 3754 0006 7860     		str	r0, [r7, #4]
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3755              		.loc 1 1350 22
 3756 0008 7B68     		ldr	r3, [r7, #4]
 3757 000a 9B6B     		ldr	r3, [r3, #56]
 3758 000c FB60     		str	r3, [r7, #12]
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if an injected conversion is ready */
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_EOC_INJ)
 3759              		.loc 1 1353 10
 3760 000e FB68     		ldr	r3, [r7, #12]
 3761 0010 93F83D30 		ldrb	r3, [r3, #61]
 3762 0014 DBB2     		uxtb	r3, r3
 3763              		.loc 1 1353 5
 3764 0016 252B     		cmp	r3, #37
 3765 0018 04D1     		bne	.L173
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_EOC_INJ_REG;  
 3766              		.loc 1 1356 17
 3767 001a FB68     		ldr	r3, [r7, #12]
 3768 001c 3522     		movs	r2, #53
 3769 001e 83F83D20 		strb	r2, [r3, #61]
 3770 0022 03E0     		b	.L174
 3771              	.L173:
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Change ADC state */
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_EOC_REG;
 3772              		.loc 1 1361 17
 3773 0024 FB68     		ldr	r3, [r7, #12]
 3774 0026 1522     		movs	r2, #21
 3775 0028 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 101


 3776              	.L174:
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvCpltCallback(hadc); 
 3777              		.loc 1 1364 3
 3778 002c F868     		ldr	r0, [r7, #12]
 3779 002e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3780              		.loc 1 1365 1
 3781 0032 00BF     		nop
 3782 0034 1037     		adds	r7, r7, #16
 3783              	.LCFI129:
 3784              		.cfi_def_cfa_offset 8
 3785 0036 BD46     		mov	sp, r7
 3786              	.LCFI130:
 3787              		.cfi_def_cfa_register 13
 3788              		@ sp needed
 3789 0038 80BD     		pop	{r7, pc}
 3790              		.cfi_endproc
 3791              	.LFE151:
 3793              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3794              		.align	1
 3795              		.syntax unified
 3796              		.thumb
 3797              		.thumb_func
 3799              	ADC_DMAHalfConvCplt:
 3800              	.LFB152:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3801              		.loc 1 1374 1
 3802              		.cfi_startproc
 3803              		@ args = 0, pretend = 0, frame = 16
 3804              		@ frame_needed = 1, uses_anonymous_args = 0
 3805 0000 80B5     		push	{r7, lr}
 3806              	.LCFI131:
 3807              		.cfi_def_cfa_offset 8
 3808              		.cfi_offset 7, -8
 3809              		.cfi_offset 14, -4
 3810 0002 84B0     		sub	sp, sp, #16
 3811              	.LCFI132:
 3812              		.cfi_def_cfa_offset 24
 3813 0004 00AF     		add	r7, sp, #0
 3814              	.LCFI133:
 3815              		.cfi_def_cfa_register 7
 3816 0006 7860     		str	r0, [r7, #4]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3817              		.loc 1 1375 22
 3818 0008 7B68     		ldr	r3, [r7, #4]
 3819 000a 9B6B     		ldr	r3, [r3, #56]
 3820 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 102


1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Conversion complete callback */
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 3821              		.loc 1 1377 3
 3822 000e F868     		ldr	r0, [r7, #12]
 3823 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3824              		.loc 1 1378 1
 3825 0014 00BF     		nop
 3826 0016 1037     		adds	r7, r7, #16
 3827              	.LCFI134:
 3828              		.cfi_def_cfa_offset 8
 3829 0018 BD46     		mov	sp, r7
 3830              	.LCFI135:
 3831              		.cfi_def_cfa_register 13
 3832              		@ sp needed
 3833 001a 80BD     		pop	{r7, pc}
 3834              		.cfi_endproc
 3835              	.LFE152:
 3837              		.section	.text.ADC_DMAError,"ax",%progbits
 3838              		.align	1
 3839              		.syntax unified
 3840              		.thumb
 3841              		.thumb_func
 3843              	ADC_DMAError:
 3844              	.LFB153:
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3845              		.loc 1 1387 1
 3846              		.cfi_startproc
 3847              		@ args = 0, pretend = 0, frame = 16
 3848              		@ frame_needed = 1, uses_anonymous_args = 0
 3849 0000 80B5     		push	{r7, lr}
 3850              	.LCFI136:
 3851              		.cfi_def_cfa_offset 8
 3852              		.cfi_offset 7, -8
 3853              		.cfi_offset 14, -4
 3854 0002 84B0     		sub	sp, sp, #16
 3855              	.LCFI137:
 3856              		.cfi_def_cfa_offset 24
 3857 0004 00AF     		add	r7, sp, #0
 3858              	.LCFI138:
 3859              		.cfi_def_cfa_register 7
 3860 0006 7860     		str	r0, [r7, #4]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3861              		.loc 1 1388 22
 3862 0008 7B68     		ldr	r3, [r7, #4]
 3863 000a 9B6B     		ldr	r3, [r3, #56]
 3864 000c FB60     		str	r3, [r7, #12]
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR;
 3865              		.loc 1 1389 14
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 103


 3866 000e FB68     		ldr	r3, [r7, #12]
 3867 0010 0422     		movs	r2, #4
 3868 0012 83F83D20 		strb	r2, [r3, #61]
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 3869              		.loc 1 1391 19
 3870 0016 FB68     		ldr	r3, [r7, #12]
 3871 0018 1B6C     		ldr	r3, [r3, #64]
 3872 001a 43F00202 		orr	r2, r3, #2
 3873 001e FB68     		ldr	r3, [r7, #12]
 3874 0020 1A64     		str	r2, [r3, #64]
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 3875              		.loc 1 1392 3
 3876 0022 F868     		ldr	r0, [r7, #12]
 3877 0024 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3878              		.loc 1 1393 1
 3879 0028 00BF     		nop
 3880 002a 1037     		adds	r7, r7, #16
 3881              	.LCFI139:
 3882              		.cfi_def_cfa_offset 8
 3883 002c BD46     		mov	sp, r7
 3884              	.LCFI140:
 3885              		.cfi_def_cfa_register 13
 3886              		@ sp needed
 3887 002e 80BD     		pop	{r7, pc}
 3888              		.cfi_endproc
 3889              	.LFE153:
 3891              		.text
 3892              	.Letext0:
 3893              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3894              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3895              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 3896              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3897              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3898              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3899              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3900              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 104


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_adc.c
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:20     .rodata:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:25     .text.HAL_ADC_Init:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:31     .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:498    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:371    .text.HAL_ADC_Init:00000250 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:377    .text.HAL_ADC_Init:0000025c $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3321   .text.ADC_Init:00000000 ADC_Init
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:412    .text.HAL_ADC_DeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:418    .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:540    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:486    .text.HAL_ADC_DeInit:0000004c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:492    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:534    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:576    .text.HAL_ADC_Start:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:582    .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:797    .text.HAL_ADC_Start:00000130 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:806    .text.HAL_ADC_Stop:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:812    .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:862    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:868    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:998    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1004   .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1128   .text.HAL_ADC_PollForEvent:000000a8 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1133   .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1139   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1374   .text.HAL_ADC_Start_IT:00000158 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1383   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1389   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1455   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1461   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2260   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1725   .text.HAL_ADC_IRQHandler:0000019c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1728   .text.HAL_ADC_IRQHandler:000001a0 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2344   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2386   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1899   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:1905   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2121   .text.HAL_ADC_Start_DMA:00000134 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3737   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3799   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3843   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2131   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2137   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2207   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2213   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2254   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2296   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2302   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2338   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2380   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2422   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2428   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2857   .text.HAL_ADC_ConfigChannel:00000284 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2864   .text.HAL_ADC_ConfigChannel:00000298 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2895   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s 			page 105


C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:2901   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3217   .text.HAL_ADC_AnalogWDGConfig:000001e0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3225   .text.HAL_ADC_GetState:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3231   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3271   .text.HAL_ADC_GetError:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3277   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3316   .text.ADC_Init:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3725   .text.ADC_Init:00000214 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3732   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3794   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccux2fk7.s:3838   .text.ADC_DMAError:00000000 $t

UNDEFINED SYMBOLS
assert_failed
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
