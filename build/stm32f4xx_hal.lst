ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.uwTick,"aw",%nobits
  20              		.align	2
  23              	uwTick:
  24 0000 00000000 		.space	4
  25              		.section	.text.HAL_Init,"ax",%progbits
  26              		.align	1
  27              		.global	HAL_Init
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	HAL_Init:
  33              	.LFB128:
  34              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @file    stm32f4xx_hal.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @version V1.4.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @date    09-October-2015
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief   HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *          This is the common part of the HAL initialization
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @verbatim
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                      ##### How to use this driver #####
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The HAL contains two APIs' categories: 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Common HAL APIs
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Services HAL APIs
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @endverbatim
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @attention
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 2


  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      without specific prior written permission.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */ 
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #include "stm32f4xx_hal.h"
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup STM32F4xx_HAL_Driver
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL HAL
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief HAL module driver.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Constants
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief STM32F4xx HAL Driver version number V1.4.1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x04) /*!< [23:16] sub1 version */
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x01) /*!< [15:8]  sub2 version */
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24)\
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16)\
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8 )\
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 3


  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MEMRMP Register ---*/ 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of UFB_MODE bit */ 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BIT_NUMBER       POSITION_VAL(SYSCFG_MEMRMP_UFB_MODE)
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32) + (UFB_MODE_BIT_
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  CMPCR Register ---*/ 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of CMP_PD bit */ 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20) 
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMP_PD_BIT_NUMBER         POSITION_VAL(SYSCFG_CMPCR_CMP_PD)
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32) + (CMP_PD_BIT_NUM
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private macro -------------------------------------------------------------*/
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private variables ---------------------------------------------------------*/
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Variables
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** static __IO uint32_t uwTick;
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim    
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****               ##### Initialization and de-initialization functions #####
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           and the backup domain when enabled.
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) de-Initializes common part of the HAL
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           Tick interrupt priority. 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Systick timer is used by default as source of time base, but user 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              handled in milliseconds basis.
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 4


 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             ISR process will be blocked. 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         HAL function), it performs the following:
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configure the Flash prefetch, instruction and Data caches.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Set NVIC Group Priority to 4.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *            
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         to have correct HAL operation.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  35              		.loc 1 168 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              	.LCFI1:
  46              		.cfi_def_cfa_register 7
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE != 0)
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
  47              		.loc 1 171 4
  48 0004 0E4B     		ldr	r3, .L3
  49 0006 1B68     		ldr	r3, [r3]
  50 0008 0D4A     		ldr	r2, .L3
  51 000a 43F40073 		orr	r3, r3, #512
  52 000e 1360     		str	r3, [r2]
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (DATA_CACHE_ENABLE != 0)
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    __HAL_FLASH_DATA_CACHE_ENABLE();
  53              		.loc 1 175 4
  54 0010 0B4B     		ldr	r3, .L3
  55 0012 1B68     		ldr	r3, [r3]
  56 0014 0A4A     		ldr	r2, .L3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 5


  57 0016 43F48063 		orr	r3, r3, #1024
  58 001a 1360     		str	r3, [r2]
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  59              		.loc 1 179 3
  60 001c 084B     		ldr	r3, .L3
  61 001e 1B68     		ldr	r3, [r3]
  62 0020 074A     		ldr	r2, .L3
  63 0022 43F48073 		orr	r3, r3, #256
  64 0026 1360     		str	r3, [r2]
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Set Interrupt Group Priority */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  65              		.loc 1 183 3
  66 0028 0320     		movs	r0, #3
  67 002a FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  68              		.loc 1 186 3
  69 002e 0020     		movs	r0, #0
  70 0030 FFF7FEFF 		bl	HAL_InitTick
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Init the low level hardware */
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspInit();
  71              		.loc 1 189 3
  72 0034 FFF7FEFF 		bl	HAL_MspInit
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
  73              		.loc 1 192 10
  74 0038 0023     		movs	r3, #0
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
  75              		.loc 1 193 1
  76 003a 1846     		mov	r0, r3
  77 003c 80BD     		pop	{r7, pc}
  78              	.L4:
  79 003e 00BF     		.align	2
  80              	.L3:
  81 0040 003C0240 		.word	1073888256
  82              		.cfi_endproc
  83              	.LFE128:
  85              		.section	.text.HAL_DeInit,"ax",%progbits
  86              		.align	1
  87              		.global	HAL_DeInit
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	HAL_DeInit:
  93              	.LFB129:
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         This function is optional.   
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 6


 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  94              		.loc 1 201 1
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              	.LCFI3:
 105              		.cfi_def_cfa_register 7
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 106              		.loc 1 203 3
 107 0004 134B     		ldr	r3, .L7
 108 0006 4FF0FF32 		mov	r2, #-1
 109 000a 1A62     		str	r2, [r3, #32]
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 110              		.loc 1 204 3
 111 000c 114B     		ldr	r3, .L7
 112 000e 0022     		movs	r2, #0
 113 0010 1A62     		str	r2, [r3, #32]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 114              		.loc 1 206 3
 115 0012 104B     		ldr	r3, .L7
 116 0014 4FF0FF32 		mov	r2, #-1
 117 0018 5A62     		str	r2, [r3, #36]
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 118              		.loc 1 207 3
 119 001a 0E4B     		ldr	r3, .L7
 120 001c 0022     		movs	r2, #0
 121 001e 5A62     		str	r2, [r3, #36]
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 122              		.loc 1 209 3
 123 0020 0C4B     		ldr	r3, .L7
 124 0022 4FF0FF32 		mov	r2, #-1
 125 0026 1A61     		str	r2, [r3, #16]
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 126              		.loc 1 210 3
 127 0028 0A4B     		ldr	r3, .L7
 128 002a 0022     		movs	r2, #0
 129 002c 1A61     		str	r2, [r3, #16]
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 130              		.loc 1 212 3
 131 002e 094B     		ldr	r3, .L7
 132 0030 4FF0FF32 		mov	r2, #-1
 133 0034 5A61     		str	r2, [r3, #20]
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 134              		.loc 1 213 3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 7


 135 0036 074B     		ldr	r3, .L7
 136 0038 0022     		movs	r2, #0
 137 003a 5A61     		str	r2, [r3, #20]
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 138              		.loc 1 215 3
 139 003c 054B     		ldr	r3, .L7
 140 003e 4FF0FF32 		mov	r2, #-1
 141 0042 9A61     		str	r2, [r3, #24]
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 142              		.loc 1 216 3
 143 0044 034B     		ldr	r3, .L7
 144 0046 0022     		movs	r2, #0
 145 0048 9A61     		str	r2, [r3, #24]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* De-Init the low level hardware */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspDeInit();
 146              		.loc 1 219 3
 147 004a FFF7FEFF 		bl	HAL_MspDeInit
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 148              		.loc 1 222 10
 149 004e 0023     		movs	r3, #0
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 150              		.loc 1 223 1
 151 0050 1846     		mov	r0, r3
 152 0052 80BD     		pop	{r7, pc}
 153              	.L8:
 154              		.align	2
 155              	.L7:
 156 0054 00380240 		.word	1073887232
 157              		.cfi_endproc
 158              	.LFE129:
 160              		.section	.text.HAL_MspInit,"ax",%progbits
 161              		.align	1
 162              		.weak	HAL_MspInit
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	HAL_MspInit:
 168              	.LFB130:
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Initializes the MSP.
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspInit(void)
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 169              		.loc 1 230 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 8


 177              		.cfi_offset 7, -4
 178 0002 00AF     		add	r7, sp, #0
 179              	.LCFI5:
 180              		.cfi_def_cfa_register 7
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 181              		.loc 1 234 1
 182 0004 00BF     		nop
 183 0006 BD46     		mov	sp, r7
 184              	.LCFI6:
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0008 5DF8047B 		ldr	r7, [sp], #4
 188              	.LCFI7:
 189              		.cfi_restore 7
 190              		.cfi_def_cfa_offset 0
 191 000c 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE130:
 195              		.section	.text.HAL_MspDeInit,"ax",%progbits
 196              		.align	1
 197              		.weak	HAL_MspDeInit
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	HAL_MspDeInit:
 203              	.LFB131:
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  DeInitializes the MSP.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspDeInit(void)
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 204              		.loc 1 241 1
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209 0000 80B4     		push	{r7}
 210              	.LCFI8:
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 7, -4
 213 0002 00AF     		add	r7, sp, #0
 214              	.LCFI9:
 215              		.cfi_def_cfa_register 7
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */ 
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 216              		.loc 1 245 1
 217 0004 00BF     		nop
 218 0006 BD46     		mov	sp, r7
 219              	.LCFI10:
 220              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 9


 221              		@ sp needed
 222 0008 5DF8047B 		ldr	r7, [sp], #4
 223              	.LCFI11:
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 000c 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE131:
 230              		.section	.text.HAL_InitTick,"ax",%progbits
 231              		.align	1
 232              		.weak	HAL_InitTick
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	HAL_InitTick:
 238              	.LFB132:
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function configures the source of the time base.
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        Tick interrupt priority.
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The the SysTick interrupt must have higher priority (numerically lower) 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementation  in user file.
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param TickPriority: Tick interrupt priority.
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 239              		.loc 1 264 1
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              	.LCFI12:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              	.LCFI13:
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI14:
 253              		.cfi_def_cfa_register 7
 254 0006 7860     		str	r0, [r7, #4]
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 255              		.loc 1 266 22
 256 0008 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 257 000c 0346     		mov	r3, r0
 258              		.loc 1 266 3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 10


 259 000e 094A     		ldr	r2, .L13
 260 0010 A2FB0323 		umull	r2, r3, r2, r3
 261 0014 9B09     		lsrs	r3, r3, #6
 262 0016 1846     		mov	r0, r3
 263 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /*Configure the SysTick IRQ priority */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 264              		.loc 1 269 3
 265 001c 0022     		movs	r2, #0
 266 001e 7968     		ldr	r1, [r7, #4]
 267 0020 4FF0FF30 		mov	r0, #-1
 268 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 269              		.loc 1 272 10
 270 0028 0023     		movs	r3, #0
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 271              		.loc 1 273 1
 272 002a 1846     		mov	r0, r3
 273 002c 0837     		adds	r7, r7, #8
 274              	.LCFI15:
 275              		.cfi_def_cfa_offset 8
 276 002e BD46     		mov	sp, r7
 277              	.LCFI16:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0030 80BD     		pop	{r7, pc}
 281              	.L14:
 282 0032 00BF     		.align	2
 283              	.L13:
 284 0034 D34D6210 		.word	274877907
 285              		.cfi_endproc
 286              	.LFE132:
 288              		.section	.text.HAL_IncTick,"ax",%progbits
 289              		.align	1
 290              		.weak	HAL_IncTick
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	HAL_IncTick:
 296              	.LFB133:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    HAL Control functions
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                       ##### HAL Control functions #####
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a tick value in millisecond
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 11


 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a blocking delay in millisecond
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Suspend the time base source interrupt
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Resume the time base source interrupt
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the HAL API driver version
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device identifier
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device revision identifier
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        used as application time base.
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       in Systick ISR.
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      implementations in user file.
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_IncTick(void)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 297              		.loc 1 312 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
 303              	.LCFI17:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 0002 00AF     		add	r7, sp, #0
 307              	.LCFI18:
 308              		.cfi_def_cfa_register 7
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uwTick++;
 309              		.loc 1 313 9
 310 0004 044B     		ldr	r3, .L16
 311 0006 1B68     		ldr	r3, [r3]
 312 0008 0133     		adds	r3, r3, #1
 313 000a 034A     		ldr	r2, .L16
 314 000c 1360     		str	r3, [r2]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 315              		.loc 1 314 1
 316 000e 00BF     		nop
 317 0010 BD46     		mov	sp, r7
 318              	.LCFI19:
 319              		.cfi_def_cfa_register 13
 320              		@ sp needed
 321 0012 5DF8047B 		ldr	r7, [sp], #4
 322              	.LCFI20:
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 0016 7047     		bx	lr
 326              	.L17:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 12


 327              		.align	2
 328              	.L16:
 329 0018 00000000 		.word	uwTick
 330              		.cfi_endproc
 331              	.LFE133:
 333              		.section	.text.HAL_GetTick,"ax",%progbits
 334              		.align	1
 335              		.weak	HAL_GetTick
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	HAL_GetTick:
 341              	.LFB134:
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Provides a tick value in millisecond.
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick value
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 342              		.loc 1 323 1
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347 0000 80B4     		push	{r7}
 348              	.LCFI21:
 349              		.cfi_def_cfa_offset 4
 350              		.cfi_offset 7, -4
 351 0002 00AF     		add	r7, sp, #0
 352              	.LCFI22:
 353              		.cfi_def_cfa_register 7
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTick;
 354              		.loc 1 324 10
 355 0004 034B     		ldr	r3, .L20
 356 0006 1B68     		ldr	r3, [r3]
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 357              		.loc 1 325 1
 358 0008 1846     		mov	r0, r3
 359 000a BD46     		mov	sp, r7
 360              	.LCFI23:
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 000c 5DF8047B 		ldr	r7, [sp], #4
 364              	.LCFI24:
 365              		.cfi_restore 7
 366              		.cfi_def_cfa_offset 0
 367 0010 7047     		bx	lr
 368              	.L21:
 369 0012 00BF     		.align	2
 370              	.L20:
 371 0014 00000000 		.word	uwTick
 372              		.cfi_endproc
 373              	.LFE134:
 375              		.section	.text.HAL_Delay,"ax",%progbits
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 13


 376              		.align	1
 377              		.weak	HAL_Delay
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 382              	HAL_Delay:
 383              	.LFB135:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        on variable incremented.
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is incremented.
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param Delay: specifies the delay time length, in milliseconds.
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_Delay(__IO uint32_t Delay)
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 384              		.loc 1 339 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 16
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 80B5     		push	{r7, lr}
 389              	.LCFI25:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 84B0     		sub	sp, sp, #16
 394              	.LCFI26:
 395              		.cfi_def_cfa_offset 24
 396 0004 00AF     		add	r7, sp, #0
 397              	.LCFI27:
 398              		.cfi_def_cfa_register 7
 399 0006 7860     		str	r0, [r7, #4]
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t tickstart = 0;
 400              		.loc 1 340 12
 401 0008 0023     		movs	r3, #0
 402 000a FB60     		str	r3, [r7, #12]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   tickstart = HAL_GetTick();
 403              		.loc 1 341 15
 404 000c FFF7FEFF 		bl	HAL_GetTick
 405 0010 F860     		str	r0, [r7, #12]
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   while((HAL_GetTick() - tickstart) < Delay)
 406              		.loc 1 342 8
 407 0012 00BF     		nop
 408              	.L23:
 409              		.loc 1 342 10 discriminator 1
 410 0014 FFF7FEFF 		bl	HAL_GetTick
 411 0018 0246     		mov	r2, r0
 412              		.loc 1 342 24 discriminator 1
 413 001a FB68     		ldr	r3, [r7, #12]
 414 001c D21A     		subs	r2, r2, r3
 415              		.loc 1 342 37 discriminator 1
 416 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 14


 417              		.loc 1 342 8 discriminator 1
 418 0020 9A42     		cmp	r2, r3
 419 0022 F7D3     		bcc	.L23
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 420              		.loc 1 345 1
 421 0024 00BF     		nop
 422 0026 00BF     		nop
 423 0028 1037     		adds	r7, r7, #16
 424              	.LCFI28:
 425              		.cfi_def_cfa_offset 8
 426 002a BD46     		mov	sp, r7
 427              	.LCFI29:
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 002c 80BD     		pop	{r7, pc}
 431              		.cfi_endproc
 432              	.LFE135:
 434              		.section	.text.HAL_SuspendTick,"ax",%progbits
 435              		.align	1
 436              		.weak	HAL_SuspendTick
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	HAL_SuspendTick:
 442              	.LFB136:
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Suspend Tick increment.
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is suspended.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_SuspendTick(void)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 443              		.loc 1 358 1
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448 0000 80B4     		push	{r7}
 449              	.LCFI30:
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 00AF     		add	r7, sp, #0
 453              	.LCFI31:
 454              		.cfi_def_cfa_register 7
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Disable SysTick Interrupt */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 455              		.loc 1 360 17
 456 0004 054B     		ldr	r3, .L25
 457 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 15


 458 0008 044A     		ldr	r2, .L25
 459 000a 23F00203 		bic	r3, r3, #2
 460 000e 1360     		str	r3, [r2]
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 461              		.loc 1 361 1
 462 0010 00BF     		nop
 463 0012 BD46     		mov	sp, r7
 464              	.LCFI32:
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 0014 5DF8047B 		ldr	r7, [sp], #4
 468              	.LCFI33:
 469              		.cfi_restore 7
 470              		.cfi_def_cfa_offset 0
 471 0018 7047     		bx	lr
 472              	.L26:
 473 001a 00BF     		.align	2
 474              	.L25:
 475 001c 10E000E0 		.word	-536813552
 476              		.cfi_endproc
 477              	.LFE136:
 479              		.section	.text.HAL_ResumeTick,"ax",%progbits
 480              		.align	1
 481              		.weak	HAL_ResumeTick
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 486              	HAL_ResumeTick:
 487              	.LFB137:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Resume Tick increment.
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is resumed.
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_ResumeTick(void)
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 488              		.loc 1 374 1
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493 0000 80B4     		push	{r7}
 494              	.LCFI34:
 495              		.cfi_def_cfa_offset 4
 496              		.cfi_offset 7, -4
 497 0002 00AF     		add	r7, sp, #0
 498              	.LCFI35:
 499              		.cfi_def_cfa_register 7
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Enable SysTick Interrupt */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 500              		.loc 1 376 18
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 16


 501 0004 054B     		ldr	r3, .L28
 502 0006 1B68     		ldr	r3, [r3]
 503 0008 044A     		ldr	r2, .L28
 504 000a 43F00203 		orr	r3, r3, #2
 505 000e 1360     		str	r3, [r2]
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 506              		.loc 1 377 1
 507 0010 00BF     		nop
 508 0012 BD46     		mov	sp, r7
 509              	.LCFI36:
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 0014 5DF8047B 		ldr	r7, [sp], #4
 513              	.LCFI37:
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
 516 0018 7047     		bx	lr
 517              	.L29:
 518 001a 00BF     		.align	2
 519              	.L28:
 520 001c 10E000E0 		.word	-536813552
 521              		.cfi_endproc
 522              	.LFE137:
 524              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 525              		.align	1
 526              		.global	HAL_GetHalVersion
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	HAL_GetHalVersion:
 532              	.LFB138:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the HAL revision
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 533              		.loc 1 384 1
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              	.LCFI38:
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 7, -4
 542 0002 00AF     		add	r7, sp, #0
 543              	.LCFI39:
 544              		.cfi_def_cfa_register 7
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  return __STM32F4xx_HAL_VERSION;
 545              		.loc 1 385 9
 546 0004 024B     		ldr	r3, .L32
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 547              		.loc 1 386 1
 548 0006 1846     		mov	r0, r3
 549 0008 BD46     		mov	sp, r7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 17


 550              	.LCFI40:
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 000a 5DF8047B 		ldr	r7, [sp], #4
 554              	.LCFI41:
 555              		.cfi_restore 7
 556              		.cfi_def_cfa_offset 0
 557 000e 7047     		bx	lr
 558              	.L33:
 559              		.align	2
 560              	.L32:
 561 0010 00010401 		.word	17039616
 562              		.cfi_endproc
 563              	.LFE138:
 565              		.section	.text.HAL_GetREVID,"ax",%progbits
 566              		.align	1
 567              		.global	HAL_GetREVID
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	HAL_GetREVID:
 573              	.LFB139:
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device revision identifier.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device revision identifier
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetREVID(void)
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 574              		.loc 1 393 1
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              	.LCFI42:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              	.LCFI43:
 585              		.cfi_def_cfa_register 7
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    return((DBGMCU->IDCODE) >> 16);
 586              		.loc 1 394 18
 587 0004 034B     		ldr	r3, .L36
 588 0006 1B68     		ldr	r3, [r3]
 589              		.loc 1 394 28
 590 0008 1B0C     		lsrs	r3, r3, #16
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 591              		.loc 1 395 1
 592 000a 1846     		mov	r0, r3
 593 000c BD46     		mov	sp, r7
 594              	.LCFI44:
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 000e 5DF8047B 		ldr	r7, [sp], #4
 598              	.LCFI45:
 599              		.cfi_restore 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 18


 600              		.cfi_def_cfa_offset 0
 601 0012 7047     		bx	lr
 602              	.L37:
 603              		.align	2
 604              	.L36:
 605 0014 002004E0 		.word	-536600576
 606              		.cfi_endproc
 607              	.LFE139:
 609              		.section	.text.HAL_GetDEVID,"ax",%progbits
 610              		.align	1
 611              		.global	HAL_GetDEVID
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	HAL_GetDEVID:
 617              	.LFB140:
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device identifier.
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetDEVID(void)
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 618              		.loc 1 402 1
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              	.LCFI46:
 625              		.cfi_def_cfa_offset 4
 626              		.cfi_offset 7, -4
 627 0002 00AF     		add	r7, sp, #0
 628              	.LCFI47:
 629              		.cfi_def_cfa_register 7
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 630              		.loc 1 403 18
 631 0004 044B     		ldr	r3, .L40
 632 0006 1B68     		ldr	r3, [r3]
 633              		.loc 1 403 28
 634 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 635              		.loc 1 404 1
 636 000c 1846     		mov	r0, r3
 637 000e BD46     		mov	sp, r7
 638              	.LCFI48:
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 0010 5DF8047B 		ldr	r7, [sp], #4
 642              	.LCFI49:
 643              		.cfi_restore 7
 644              		.cfi_def_cfa_offset 0
 645 0014 7047     		bx	lr
 646              	.L41:
 647 0016 00BF     		.align	2
 648              	.L40:
 649 0018 002004E0 		.word	-536600576
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 19


 650              		.cfi_endproc
 651              	.LFE140:
 653              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_DBGMCU_EnableDBGSleepMode
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	HAL_DBGMCU_EnableDBGSleepMode:
 661              	.LFB141:
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 662              		.loc 1 411 1
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 0000 80B4     		push	{r7}
 668              	.LCFI50:
 669              		.cfi_def_cfa_offset 4
 670              		.cfi_offset 7, -4
 671 0002 00AF     		add	r7, sp, #0
 672              	.LCFI51:
 673              		.cfi_def_cfa_register 7
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 674              		.loc 1 412 3
 675 0004 054B     		ldr	r3, .L43
 676 0006 5B68     		ldr	r3, [r3, #4]
 677 0008 044A     		ldr	r2, .L43
 678 000a 43F00103 		orr	r3, r3, #1
 679 000e 5360     		str	r3, [r2, #4]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 680              		.loc 1 413 1
 681 0010 00BF     		nop
 682 0012 BD46     		mov	sp, r7
 683              	.LCFI52:
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0014 5DF8047B 		ldr	r7, [sp], #4
 687              	.LCFI53:
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0018 7047     		bx	lr
 691              	.L44:
 692 001a 00BF     		.align	2
 693              	.L43:
 694 001c 002004E0 		.word	-536600576
 695              		.cfi_endproc
 696              	.LFE141:
 698              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 699              		.align	1
 700              		.global	HAL_DBGMCU_DisableDBGSleepMode
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 20


 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	HAL_DBGMCU_DisableDBGSleepMode:
 706              	.LFB142:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 707              		.loc 1 420 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712 0000 80B4     		push	{r7}
 713              	.LCFI54:
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 7, -4
 716 0002 00AF     		add	r7, sp, #0
 717              	.LCFI55:
 718              		.cfi_def_cfa_register 7
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 719              		.loc 1 421 3
 720 0004 054B     		ldr	r3, .L46
 721 0006 5B68     		ldr	r3, [r3, #4]
 722 0008 044A     		ldr	r2, .L46
 723 000a 23F00103 		bic	r3, r3, #1
 724 000e 5360     		str	r3, [r2, #4]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 725              		.loc 1 422 1
 726 0010 00BF     		nop
 727 0012 BD46     		mov	sp, r7
 728              	.LCFI56:
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0014 5DF8047B 		ldr	r7, [sp], #4
 732              	.LCFI57:
 733              		.cfi_restore 7
 734              		.cfi_def_cfa_offset 0
 735 0018 7047     		bx	lr
 736              	.L47:
 737 001a 00BF     		.align	2
 738              	.L46:
 739 001c 002004E0 		.word	-536600576
 740              		.cfi_endproc
 741              	.LFE142:
 743              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 744              		.align	1
 745              		.global	HAL_DBGMCU_EnableDBGStopMode
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 750              	HAL_DBGMCU_EnableDBGStopMode:
 751              	.LFB143:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 21


 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 752              		.loc 1 429 1
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 80B4     		push	{r7}
 758              	.LCFI58:
 759              		.cfi_def_cfa_offset 4
 760              		.cfi_offset 7, -4
 761 0002 00AF     		add	r7, sp, #0
 762              	.LCFI59:
 763              		.cfi_def_cfa_register 7
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 764              		.loc 1 430 3
 765 0004 054B     		ldr	r3, .L49
 766 0006 5B68     		ldr	r3, [r3, #4]
 767 0008 044A     		ldr	r2, .L49
 768 000a 43F00203 		orr	r3, r3, #2
 769 000e 5360     		str	r3, [r2, #4]
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 770              		.loc 1 431 1
 771 0010 00BF     		nop
 772 0012 BD46     		mov	sp, r7
 773              	.LCFI60:
 774              		.cfi_def_cfa_register 13
 775              		@ sp needed
 776 0014 5DF8047B 		ldr	r7, [sp], #4
 777              	.LCFI61:
 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 0018 7047     		bx	lr
 781              	.L50:
 782 001a 00BF     		.align	2
 783              	.L49:
 784 001c 002004E0 		.word	-536600576
 785              		.cfi_endproc
 786              	.LFE143:
 788              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_DBGMCU_DisableDBGStopMode
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	HAL_DBGMCU_DisableDBGStopMode:
 796              	.LFB144:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 22


 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 797              		.loc 1 438 1
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 1, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802 0000 80B4     		push	{r7}
 803              	.LCFI62:
 804              		.cfi_def_cfa_offset 4
 805              		.cfi_offset 7, -4
 806 0002 00AF     		add	r7, sp, #0
 807              	.LCFI63:
 808              		.cfi_def_cfa_register 7
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 809              		.loc 1 439 3
 810 0004 054B     		ldr	r3, .L52
 811 0006 5B68     		ldr	r3, [r3, #4]
 812 0008 044A     		ldr	r2, .L52
 813 000a 23F00203 		bic	r3, r3, #2
 814 000e 5360     		str	r3, [r2, #4]
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 815              		.loc 1 440 1
 816 0010 00BF     		nop
 817 0012 BD46     		mov	sp, r7
 818              	.LCFI64:
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0014 5DF8047B 		ldr	r7, [sp], #4
 822              	.LCFI65:
 823              		.cfi_restore 7
 824              		.cfi_def_cfa_offset 0
 825 0018 7047     		bx	lr
 826              	.L53:
 827 001a 00BF     		.align	2
 828              	.L52:
 829 001c 002004E0 		.word	-536600576
 830              		.cfi_endproc
 831              	.LFE144:
 833              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 834              		.align	1
 835              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 840              	HAL_DBGMCU_EnableDBGStandbyMode:
 841              	.LFB145:
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 842              		.loc 1 447 1
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 23


 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0000 80B4     		push	{r7}
 848              	.LCFI66:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 0002 00AF     		add	r7, sp, #0
 852              	.LCFI67:
 853              		.cfi_def_cfa_register 7
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 854              		.loc 1 448 3
 855 0004 054B     		ldr	r3, .L55
 856 0006 5B68     		ldr	r3, [r3, #4]
 857 0008 044A     		ldr	r2, .L55
 858 000a 43F00403 		orr	r3, r3, #4
 859 000e 5360     		str	r3, [r2, #4]
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 860              		.loc 1 449 1
 861 0010 00BF     		nop
 862 0012 BD46     		mov	sp, r7
 863              	.LCFI68:
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 0014 5DF8047B 		ldr	r7, [sp], #4
 867              	.LCFI69:
 868              		.cfi_restore 7
 869              		.cfi_def_cfa_offset 0
 870 0018 7047     		bx	lr
 871              	.L56:
 872 001a 00BF     		.align	2
 873              	.L55:
 874 001c 002004E0 		.word	-536600576
 875              		.cfi_endproc
 876              	.LFE145:
 878              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 879              		.align	1
 880              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	HAL_DBGMCU_DisableDBGStandbyMode:
 886              	.LFB146:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 887              		.loc 1 456 1
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892 0000 80B4     		push	{r7}
 893              	.LCFI70:
 894              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 24


 895              		.cfi_offset 7, -4
 896 0002 00AF     		add	r7, sp, #0
 897              	.LCFI71:
 898              		.cfi_def_cfa_register 7
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 899              		.loc 1 457 3
 900 0004 054B     		ldr	r3, .L58
 901 0006 5B68     		ldr	r3, [r3, #4]
 902 0008 044A     		ldr	r2, .L58
 903 000a 23F00403 		bic	r3, r3, #4
 904 000e 5360     		str	r3, [r2, #4]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 905              		.loc 1 458 1
 906 0010 00BF     		nop
 907 0012 BD46     		mov	sp, r7
 908              	.LCFI72:
 909              		.cfi_def_cfa_register 13
 910              		@ sp needed
 911 0014 5DF8047B 		ldr	r7, [sp], #4
 912              	.LCFI73:
 913              		.cfi_restore 7
 914              		.cfi_def_cfa_offset 0
 915 0018 7047     		bx	lr
 916              	.L59:
 917 001a 00BF     		.align	2
 918              	.L58:
 919 001c 002004E0 		.word	-536600576
 920              		.cfi_endproc
 921              	.LFE146:
 923              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 924              		.align	1
 925              		.global	HAL_EnableCompensationCell
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 930              	HAL_EnableCompensationCell:
 931              	.LFB147:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_EnableCompensationCell(void)
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 932              		.loc 1 467 1
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI74:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 83B0     		sub	sp, sp, #12
 942              	.LCFI75:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 25


 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              	.LCFI76:
 946              		.cfi_def_cfa_register 7
 947 0006 0123     		movs	r3, #1
 948 0008 7B60     		str	r3, [r7, #4]
 949              	.LBB6:
 950              	.LBB7:
 951              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 26


  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 27


 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 28


 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 29


 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 30


 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 31


 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 32


 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 33


 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:Drivers/CMSIS/Include/core_cmInstr.h **** }
 452:Drivers/CMSIS/Include/core_cmInstr.h **** 
 453:Drivers/CMSIS/Include/core_cmInstr.h **** 
 454:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:Drivers/CMSIS/Include/core_cmInstr.h **** 
 456:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 460:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:Drivers/CMSIS/Include/core_cmInstr.h **** {
 462:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:Drivers/CMSIS/Include/core_cmInstr.h **** }
 464:Drivers/CMSIS/Include/core_cmInstr.h **** 
 465:Drivers/CMSIS/Include/core_cmInstr.h **** 
 466:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:Drivers/CMSIS/Include/core_cmInstr.h **** 
 468:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 471:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:Drivers/CMSIS/Include/core_cmInstr.h **** {
 473:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:Drivers/CMSIS/Include/core_cmInstr.h **** }
 475:Drivers/CMSIS/Include/core_cmInstr.h **** 
 476:Drivers/CMSIS/Include/core_cmInstr.h **** 
 477:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:Drivers/CMSIS/Include/core_cmInstr.h **** 
 479:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 482:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:Drivers/CMSIS/Include/core_cmInstr.h **** {
 484:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:Drivers/CMSIS/Include/core_cmInstr.h **** }
 486:Drivers/CMSIS/Include/core_cmInstr.h **** 
 487:Drivers/CMSIS/Include/core_cmInstr.h **** 
 488:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:Drivers/CMSIS/Include/core_cmInstr.h **** 
 490:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:Drivers/CMSIS/Include/core_cmInstr.h **** 
 492:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 494:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 495:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 496:Drivers/CMSIS/Include/core_cmInstr.h **** {
 497:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:Drivers/CMSIS/Include/core_cmInstr.h ****   return __builtin_bswap32(value);
 499:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 500:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 501:Drivers/CMSIS/Include/core_cmInstr.h **** 
 502:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 503:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 504:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 34


 505:Drivers/CMSIS/Include/core_cmInstr.h **** }
 506:Drivers/CMSIS/Include/core_cmInstr.h **** 
 507:Drivers/CMSIS/Include/core_cmInstr.h **** 
 508:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 509:Drivers/CMSIS/Include/core_cmInstr.h **** 
 510:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 511:Drivers/CMSIS/Include/core_cmInstr.h **** 
 512:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 513:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 514:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 515:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 516:Drivers/CMSIS/Include/core_cmInstr.h **** {
 517:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 518:Drivers/CMSIS/Include/core_cmInstr.h **** 
 519:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 520:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 521:Drivers/CMSIS/Include/core_cmInstr.h **** }
 522:Drivers/CMSIS/Include/core_cmInstr.h **** 
 523:Drivers/CMSIS/Include/core_cmInstr.h **** 
 524:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 525:Drivers/CMSIS/Include/core_cmInstr.h **** 
 526:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 527:Drivers/CMSIS/Include/core_cmInstr.h **** 
 528:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 529:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 530:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 531:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 532:Drivers/CMSIS/Include/core_cmInstr.h **** {
 533:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 534:Drivers/CMSIS/Include/core_cmInstr.h ****   return (short)__builtin_bswap16(value);
 535:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 536:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 537:Drivers/CMSIS/Include/core_cmInstr.h **** 
 538:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 539:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 540:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 541:Drivers/CMSIS/Include/core_cmInstr.h **** }
 542:Drivers/CMSIS/Include/core_cmInstr.h **** 
 543:Drivers/CMSIS/Include/core_cmInstr.h **** 
 544:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 545:Drivers/CMSIS/Include/core_cmInstr.h **** 
 546:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 547:Drivers/CMSIS/Include/core_cmInstr.h **** 
 548:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 549:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 550:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 551:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 552:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 553:Drivers/CMSIS/Include/core_cmInstr.h **** {
 554:Drivers/CMSIS/Include/core_cmInstr.h ****   return (op1 >> op2) | (op1 << (32 - op2));
 555:Drivers/CMSIS/Include/core_cmInstr.h **** }
 556:Drivers/CMSIS/Include/core_cmInstr.h **** 
 557:Drivers/CMSIS/Include/core_cmInstr.h **** 
 558:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 559:Drivers/CMSIS/Include/core_cmInstr.h **** 
 560:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 561:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 35


 562:Drivers/CMSIS/Include/core_cmInstr.h **** 
 563:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 564:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 565:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 566:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 567:Drivers/CMSIS/Include/core_cmInstr.h **** 
 568:Drivers/CMSIS/Include/core_cmInstr.h **** 
 569:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 570:Drivers/CMSIS/Include/core_cmInstr.h **** 
 571:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 572:Drivers/CMSIS/Include/core_cmInstr.h **** 
 573:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 574:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 575:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 576:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 577:Drivers/CMSIS/Include/core_cmInstr.h **** {
 578:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 579:Drivers/CMSIS/Include/core_cmInstr.h **** 
 580:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 581:Drivers/CMSIS/Include/core_cmInstr.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 952              		.loc 2 581 4
 953 000a 7B68     		ldr	r3, [r7, #4]
 954              		.syntax unified
 955              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 956 000c 93FAA3F3 		rbit r3, r3
 957              	@ 0 "" 2
 958              		.thumb
 959              		.syntax unified
 960 0010 3B60     		str	r3, [r7]
 582:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 583:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 584:Drivers/CMSIS/Include/core_cmInstr.h **** 
 585:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 586:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 587:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 588:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 589:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 590:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 591:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 592:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 593:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 594:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 961              		.loc 2 594 9
 962 0012 3B68     		ldr	r3, [r7]
 963              	.LBE7:
 964              	.LBE6:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 965              		.loc 1 468 21
 966 0014 B3FA83F3 		clz	r3, r3
 967 0018 9B00     		lsls	r3, r3, #2
 968 001a 1A46     		mov	r2, r3
 969 001c 054B     		ldr	r3, .L62
 970 001e 1344     		add	r3, r3, r2
 971              		.loc 1 468 4
 972 0020 1A46     		mov	r2, r3
 973              		.loc 1 468 37
 974 0022 0123     		movs	r3, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 36


 975 0024 1360     		str	r3, [r2]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 976              		.loc 1 469 1
 977 0026 00BF     		nop
 978 0028 0C37     		adds	r7, r7, #12
 979              	.LCFI77:
 980              		.cfi_def_cfa_offset 4
 981 002a BD46     		mov	sp, r7
 982              	.LCFI78:
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 002c 5DF8047B 		ldr	r7, [sp], #4
 986              	.LCFI79:
 987              		.cfi_restore 7
 988              		.cfi_def_cfa_offset 0
 989 0030 7047     		bx	lr
 990              	.L63:
 991 0032 00BF     		.align	2
 992              	.L62:
 993 0034 00042742 		.word	1109853184
 994              		.cfi_endproc
 995              	.LFE147:
 997              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 998              		.align	1
 999              		.global	HAL_DisableCompensationCell
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	HAL_DisableCompensationCell:
 1005              	.LFB148:
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DisableCompensationCell(void)
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 1006              		.loc 1 478 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 8
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 1011 0000 80B4     		push	{r7}
 1012              	.LCFI80:
 1013              		.cfi_def_cfa_offset 4
 1014              		.cfi_offset 7, -4
 1015 0002 83B0     		sub	sp, sp, #12
 1016              	.LCFI81:
 1017              		.cfi_def_cfa_offset 16
 1018 0004 00AF     		add	r7, sp, #0
 1019              	.LCFI82:
 1020              		.cfi_def_cfa_register 7
 1021 0006 0123     		movs	r3, #1
 1022 0008 7B60     		str	r3, [r7, #4]
 1023              	.LBB8:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 37


 1024              	.LBB9:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 1025              		.loc 2 581 4
 1026 000a 7B68     		ldr	r3, [r7, #4]
 1027              		.syntax unified
 1028              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 1029 000c 93FAA3F3 		rbit r3, r3
 1030              	@ 0 "" 2
 1031              		.thumb
 1032              		.syntax unified
 1033 0010 3B60     		str	r3, [r7]
 1034              		.loc 2 594 9
 1035 0012 3B68     		ldr	r3, [r7]
 1036              	.LBE9:
 1037              	.LBE8:
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 1038              		.loc 1 479 21
 1039 0014 B3FA83F3 		clz	r3, r3
 1040 0018 9B00     		lsls	r3, r3, #2
 1041 001a 1A46     		mov	r2, r3
 1042 001c 054B     		ldr	r3, .L66
 1043 001e 1344     		add	r3, r3, r2
 1044              		.loc 1 479 4
 1045 0020 1A46     		mov	r2, r3
 1046              		.loc 1 479 37
 1047 0022 0023     		movs	r3, #0
 1048 0024 1360     		str	r3, [r2]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 1049              		.loc 1 480 1
 1050 0026 00BF     		nop
 1051 0028 0C37     		adds	r7, r7, #12
 1052              	.LCFI83:
 1053              		.cfi_def_cfa_offset 4
 1054 002a BD46     		mov	sp, r7
 1055              	.LCFI84:
 1056              		.cfi_def_cfa_register 13
 1057              		@ sp needed
 1058 002c 5DF8047B 		ldr	r7, [sp], #4
 1059              	.LCFI85:
 1060              		.cfi_restore 7
 1061              		.cfi_def_cfa_offset 0
 1062 0030 7047     		bx	lr
 1063              	.L67:
 1064 0032 00BF     		.align	2
 1065              	.L66:
 1066 0034 00042742 		.word	1109853184
 1067              		.cfi_endproc
 1068              	.LFE148:
 1070              		.text
 1071              	.Letext0:
 1072              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 1073              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 1074              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1075              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1076              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1077              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal.c
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:20     .bss.uwTick:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:23     .bss.uwTick:00000000 uwTick
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:26     .text.HAL_Init:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:32     .text.HAL_Init:00000000 HAL_Init
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:237    .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:167    .text.HAL_MspInit:00000000 HAL_MspInit
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:81     .text.HAL_Init:00000040 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:86     .text.HAL_DeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:92     .text.HAL_DeInit:00000000 HAL_DeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:202    .text.HAL_MspDeInit:00000000 HAL_MspDeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:156    .text.HAL_DeInit:00000054 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:161    .text.HAL_MspInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:196    .text.HAL_MspDeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:231    .text.HAL_InitTick:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:284    .text.HAL_InitTick:00000034 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:289    .text.HAL_IncTick:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:295    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:329    .text.HAL_IncTick:00000018 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:334    .text.HAL_GetTick:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:340    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:371    .text.HAL_GetTick:00000014 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:376    .text.HAL_Delay:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:382    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:435    .text.HAL_SuspendTick:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:441    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:475    .text.HAL_SuspendTick:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:480    .text.HAL_ResumeTick:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:486    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:520    .text.HAL_ResumeTick:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:525    .text.HAL_GetHalVersion:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:531    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:561    .text.HAL_GetHalVersion:00000010 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:566    .text.HAL_GetREVID:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:572    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:605    .text.HAL_GetREVID:00000014 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:610    .text.HAL_GetDEVID:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:616    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:649    .text.HAL_GetDEVID:00000018 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:654    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:660    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:694    .text.HAL_DBGMCU_EnableDBGSleepMode:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:699    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:705    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:739    .text.HAL_DBGMCU_DisableDBGSleepMode:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:744    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:750    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:784    .text.HAL_DBGMCU_EnableDBGStopMode:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:789    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:795    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:829    .text.HAL_DBGMCU_DisableDBGStopMode:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:834    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:840    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:874    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:879    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:885    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s 			page 39


C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:919    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:924    .text.HAL_EnableCompensationCell:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:930    .text.HAL_EnableCompensationCell:00000000 HAL_EnableCompensationCell
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:993    .text.HAL_EnableCompensationCell:00000034 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:998    .text.HAL_DisableCompensationCell:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:1004   .text.HAL_DisableCompensationCell:00000000 HAL_DisableCompensationCell
C:\Users\ep_ygh\AppData\Local\Temp\ccsmPe5N.s:1066   .text.HAL_DisableCompensationCell:00000034 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
