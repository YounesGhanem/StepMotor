ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	APBAHBPrescTable
  20              		.section	.rodata.APBAHBPrescTable,"a"
  21              		.align	2
  24              	APBAHBPrescTable:
  25 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
  25      01020304 
  25      01020304 
  25      06
  26 000d 070809   		.ascii	"\007\010\011"
  27              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  28              		.align	1
  29              		.weak	HAL_RCC_DeInit
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	HAL_RCC_DeInit:
  35              	.LFB128:
  36              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @version V1.4.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @date    09-October-2015
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *       
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim                
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]  
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache 
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 2


  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]          
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:        
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]  
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]  
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Possible Workarounds:
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (#) Enable the peripheral clock sometimes before the peripheral read/write 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           register is required.
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (#) For AHB peripheral, insert two dummy read to the peripheral register.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (#) For APB peripheral, insert a dummy read to the peripheral register.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      without specific prior written permission.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 3


  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */ 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  ((uint32_t)5000) /* 5 s    */
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */    
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** const uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 4


 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim    
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.   
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration  
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable 
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped 
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use 
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.  
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 from an external clock mapped on the I2S_CKIN pin. 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (+@) SAI: the SAI clock can be derived either from a specific PLL (PLLI2S) or (PLLSAI) or
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 5


 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 from an external clock mapped on the I2S_CKIN pin. 
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock. 
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 divided by 2 to 31. You have to use __HAL_RCC_RTC_CONFIG() and __HAL_RCC_RTC_ENABLE
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 macros to configure this clock. 
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 to work correctly, while the SDIO require a frequency equal or lower than
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 to 48. This clock is derived of the main PLL through PLLQ divider.
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz. 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx and STM32F43xxx devices, the maximum frequency
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz. 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz. 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz. 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks  
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks 
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_DeInit(void)
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {}
  37              		.loc 1 241 1
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41              		@ link register save eliminated.
  42 0000 80B4     		push	{r7}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 6


  45              		.cfi_offset 7, -4
  46 0002 00AF     		add	r7, sp, #0
  47              	.LCFI1:
  48              		.cfi_def_cfa_register 7
  49              		.loc 1 241 2
  50 0004 00BF     		nop
  51 0006 BD46     		mov	sp, r7
  52              	.LCFI2:
  53              		.cfi_def_cfa_register 13
  54              		@ sp needed
  55 0008 5DF8047B 		ldr	r7, [sp], #4
  56              	.LCFI3:
  57              		.cfi_restore 7
  58              		.cfi_def_cfa_offset 0
  59 000c 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE128:
  63              		.section	.rodata
  64              		.align	2
  65              	.LC0:
  66 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc."
  66      6572732F 
  66      53544D33 
  66      32463478 
  66      785F4841 
  67 0033 6300     		.ascii	"c\000"
  68              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  69              		.align	1
  70              		.weak	HAL_RCC_OscConfig
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	HAL_RCC_OscConfig:
  76              	.LFB129:
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  77              		.loc 1 252 1
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 56
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 80B5     		push	{r7, lr}
  82              	.LCFI4:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 8EB0     		sub	sp, sp, #56
  87              	.LCFI5:
  88              		.cfi_def_cfa_offset 64
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 7


  89 0004 00AF     		add	r7, sp, #0
  90              	.LCFI6:
  91              		.cfi_def_cfa_register 7
  92 0006 7860     		str	r0, [r7, #4]
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  uint32_t tickstart = 0;  
  93              		.loc 1 253 11
  94 0008 0023     		movs	r3, #0
  95 000a 7B63     		str	r3, [r7, #52]
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  96              		.loc 1 256 3
  97 000c 7B68     		ldr	r3, [r7, #4]
  98 000e 1B68     		ldr	r3, [r3]
  99 0010 0F2B     		cmp	r3, #15
 100 0012 04D9     		bls	.L3
 101              		.loc 1 256 3 is_stmt 0 discriminator 1
 102 0014 4FF48071 		mov	r1, #256
 103 0018 9C48     		ldr	r0, .L69
 104 001a FFF7FEFF 		bl	assert_failed
 105              	.L3:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 106              		.loc 1 258 25 is_stmt 1
 107 001e 7B68     		ldr	r3, [r7, #4]
 108 0020 1B68     		ldr	r3, [r3]
 109              		.loc 1 258 43
 110 0022 03F00103 		and	r3, r3, #1
 111              		.loc 1 258 5
 112 0026 002B     		cmp	r3, #0
 113 0028 7DD0     		beq	.L4
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 114              		.loc 1 261 5
 115 002a 7B68     		ldr	r3, [r7, #4]
 116 002c 5B68     		ldr	r3, [r3, #4]
 117 002e 002B     		cmp	r3, #0
 118 0030 0CD0     		beq	.L5
 119              		.loc 1 261 5 is_stmt 0 discriminator 1
 120 0032 7B68     		ldr	r3, [r7, #4]
 121 0034 5B68     		ldr	r3, [r3, #4]
 122 0036 012B     		cmp	r3, #1
 123 0038 08D0     		beq	.L5
 124              		.loc 1 261 5 discriminator 2
 125 003a 7B68     		ldr	r3, [r7, #4]
 126 003c 5B68     		ldr	r3, [r3, #4]
 127 003e 052B     		cmp	r3, #5
 128 0040 04D0     		beq	.L5
 129              		.loc 1 261 5 discriminator 3
 130 0042 40F20511 		movw	r1, #261
 131 0046 9148     		ldr	r0, .L69
 132 0048 FFF7FEFF 		bl	assert_failed
 133              	.L5:
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                         
 134              		.loc 1 263 9 is_stmt 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 8


 135 004c 904B     		ldr	r3, .L69+4
 136 004e 9B68     		ldr	r3, [r3, #8]
 137 0050 03F00C03 		and	r3, r3, #12
 138              		.loc 1 263 7
 139 0054 042B     		cmp	r3, #4
 140 0056 0CD0     		beq	.L6
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 141              		.loc 1 264 9 discriminator 1
 142 0058 8D4B     		ldr	r3, .L69+4
 143 005a 9B68     		ldr	r3, [r3, #8]
 144 005c 03F00C03 		and	r3, r3, #12
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 145              		.loc 1 263 128 discriminator 1
 146 0060 082B     		cmp	r3, #8
 147 0062 12D1     		bne	.L7
 148              		.loc 1 264 68
 149 0064 8A4B     		ldr	r3, .L69+4
 150 0066 5B68     		ldr	r3, [r3, #4]
 151              		.loc 1 264 78
 152 0068 03F48003 		and	r3, r3, #4194304
 153              		.loc 1 264 60
 154 006c B3F5800F 		cmp	r3, #4194304
 155 0070 0BD1     		bne	.L7
 156              	.L6:
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 157              		.loc 1 266 11
 158 0072 874B     		ldr	r3, .L69+4
 159 0074 1B68     		ldr	r3, [r3]
 160 0076 03F40033 		and	r3, r3, #131072
 161              		.loc 1 266 9
 162 007a 002B     		cmp	r3, #0
 163 007c 52D0     		beq	.L68
 164              		.loc 1 266 78 discriminator 1
 165 007e 7B68     		ldr	r3, [r7, #4]
 166 0080 5B68     		ldr	r3, [r3, #4]
 167              		.loc 1 266 57 discriminator 1
 168 0082 002B     		cmp	r3, #0
 169 0084 4ED1     		bne	.L68
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 170              		.loc 1 268 16
 171 0086 0123     		movs	r3, #1
 172 0088 ABE2     		b	.L9
 173              	.L7:
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Reset HSEON and HSEBYP bits before configuring the HSE --------------*/
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);
 174              		.loc 1 274 7
 175 008a 824B     		ldr	r3, .L69+8
 176 008c 0022     		movs	r2, #0
 177 008e 1A70     		strb	r2, [r3]
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 9


 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 178              		.loc 1 277 19
 179 0090 FFF7FEFF 		bl	HAL_GetTick
 180 0094 7863     		str	r0, [r7, #52]
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till HSE is disabled */  
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 181              		.loc 1 280 12
 182 0096 0AE0     		b	.L10
 183              	.L11:
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 184              		.loc 1 282 13
 185 0098 FFF7FEFF 		bl	HAL_GetTick
 186 009c 0246     		mov	r2, r0
 187              		.loc 1 282 27
 188 009e 7B6B     		ldr	r3, [r7, #52]
 189 00a0 D31A     		subs	r3, r2, r3
 190              		.loc 1 282 11
 191 00a2 41F28832 		movw	r2, #5000
 192 00a6 9342     		cmp	r3, r2
 193 00a8 01D9     		bls	.L10
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 194              		.loc 1 284 18
 195 00aa 0323     		movs	r3, #3
 196 00ac 99E2     		b	.L9
 197              	.L10:
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 198              		.loc 1 280 13
 199 00ae 784B     		ldr	r3, .L69+4
 200 00b0 1B68     		ldr	r3, [r3]
 201 00b2 03F40033 		and	r3, r3, #131072
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 202              		.loc 1 280 12
 203 00b6 002B     		cmp	r3, #0
 204 00b8 EED1     		bne	.L11
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }       
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 205              		.loc 1 289 7
 206 00ba 7B68     		ldr	r3, [r7, #4]
 207 00bc 5A68     		ldr	r2, [r3, #4]
 208 00be 754B     		ldr	r3, .L69+8
 209 00c0 D2B2     		uxtb	r2, r2
 210 00c2 1A70     		strb	r2, [r3]
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 211              		.loc 1 292 28
 212 00c4 7B68     		ldr	r3, [r7, #4]
 213 00c6 5B68     		ldr	r3, [r3, #4]
 214              		.loc 1 292 9
 215 00c8 002B     		cmp	r3, #0
 216 00ca 15D0     		beq	.L12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 10


 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 217              		.loc 1 295 21
 218 00cc FFF7FEFF 		bl	HAL_GetTick
 219 00d0 7863     		str	r0, [r7, #52]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */  
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 220              		.loc 1 298 14
 221 00d2 0AE0     		b	.L13
 222              	.L14:
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 223              		.loc 1 300 15
 224 00d4 FFF7FEFF 		bl	HAL_GetTick
 225 00d8 0246     		mov	r2, r0
 226              		.loc 1 300 29
 227 00da 7B6B     		ldr	r3, [r7, #52]
 228 00dc D31A     		subs	r3, r2, r3
 229              		.loc 1 300 13
 230 00de 41F28832 		movw	r2, #5000
 231 00e2 9342     		cmp	r3, r2
 232 00e4 01D9     		bls	.L13
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 233              		.loc 1 302 20
 234 00e6 0323     		movs	r3, #3
 235 00e8 7BE2     		b	.L9
 236              	.L13:
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 237              		.loc 1 298 15
 238 00ea 694B     		ldr	r3, .L69+4
 239 00ec 1B68     		ldr	r3, [r3]
 240 00ee 03F40033 		and	r3, r3, #131072
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 241              		.loc 1 298 14
 242 00f2 002B     		cmp	r3, #0
 243 00f4 EED0     		beq	.L14
 244 00f6 16E0     		b	.L4
 245              	.L12:
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 246              		.loc 1 309 21
 247 00f8 FFF7FEFF 		bl	HAL_GetTick
 248 00fc 7863     		str	r0, [r7, #52]
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 249              		.loc 1 312 14
 250 00fe 0AE0     		b	.L15
 251              	.L16:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 11


 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 252              		.loc 1 314 15
 253 0100 FFF7FEFF 		bl	HAL_GetTick
 254 0104 0246     		mov	r2, r0
 255              		.loc 1 314 29
 256 0106 7B6B     		ldr	r3, [r7, #52]
 257 0108 D31A     		subs	r3, r2, r3
 258              		.loc 1 314 13
 259 010a 41F28832 		movw	r2, #5000
 260 010e 9342     		cmp	r3, r2
 261 0110 01D9     		bls	.L15
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 262              		.loc 1 316 20
 263 0112 0323     		movs	r3, #3
 264 0114 65E2     		b	.L9
 265              	.L15:
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 266              		.loc 1 312 15
 267 0116 5E4B     		ldr	r3, .L69+4
 268 0118 1B68     		ldr	r3, [r3]
 269 011a 03F40033 		and	r3, r3, #131072
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 270              		.loc 1 312 14
 271 011e 002B     		cmp	r3, #0
 272 0120 EED1     		bne	.L16
 273 0122 00E0     		b	.L4
 274              	.L68:
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 275              		.loc 1 266 9
 276 0124 00BF     		nop
 277              	.L4:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 278              		.loc 1 323 25
 279 0126 7B68     		ldr	r3, [r7, #4]
 280 0128 1B68     		ldr	r3, [r3]
 281              		.loc 1 323 43
 282 012a 03F00203 		and	r3, r3, #2
 283              		.loc 1 323 5
 284 012e 002B     		cmp	r3, #0
 285 0130 00F08E80 		beq	.L17
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 286              		.loc 1 326 5
 287 0134 7B68     		ldr	r3, [r7, #4]
 288 0136 DB68     		ldr	r3, [r3, #12]
 289 0138 002B     		cmp	r3, #0
 290 013a 08D0     		beq	.L18
 291              		.loc 1 326 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 12


 292 013c 7B68     		ldr	r3, [r7, #4]
 293 013e DB68     		ldr	r3, [r3, #12]
 294 0140 012B     		cmp	r3, #1
 295 0142 04D0     		beq	.L18
 296              		.loc 1 326 5 discriminator 2
 297 0144 4FF4A371 		mov	r1, #326
 298 0148 5048     		ldr	r0, .L69
 299 014a FFF7FEFF 		bl	assert_failed
 300              	.L18:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 301              		.loc 1 327 5 is_stmt 1
 302 014e 7B68     		ldr	r3, [r7, #4]
 303 0150 1B69     		ldr	r3, [r3, #16]
 304 0152 1F2B     		cmp	r3, #31
 305 0154 04D9     		bls	.L19
 306              		.loc 1 327 5 is_stmt 0 discriminator 1
 307 0156 40F24711 		movw	r1, #327
 308 015a 4C48     		ldr	r0, .L69
 309 015c FFF7FEFF 		bl	assert_failed
 310              	.L19:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                         
 311              		.loc 1 330 9 is_stmt 1
 312 0160 4B4B     		ldr	r3, .L69+4
 313 0162 9B68     		ldr	r3, [r3, #8]
 314 0164 03F00C03 		and	r3, r3, #12
 315              		.loc 1 330 7
 316 0168 002B     		cmp	r3, #0
 317 016a 0BD0     		beq	.L20
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 318              		.loc 1 331 9 discriminator 1
 319 016c 484B     		ldr	r3, .L69+4
 320 016e 9B68     		ldr	r3, [r3, #8]
 321 0170 03F00C03 		and	r3, r3, #12
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 322              		.loc 1 330 128 discriminator 1
 323 0174 082B     		cmp	r3, #8
 324 0176 26D1     		bne	.L21
 325              		.loc 1 331 68
 326 0178 454B     		ldr	r3, .L69+4
 327 017a 5B68     		ldr	r3, [r3, #4]
 328              		.loc 1 331 78
 329 017c 03F48003 		and	r3, r3, #4194304
 330              		.loc 1 331 60
 331 0180 002B     		cmp	r3, #0
 332 0182 20D1     		bne	.L21
 333              	.L20:
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 334              		.loc 1 334 11
 335 0184 424B     		ldr	r3, .L69+4
 336 0186 1B68     		ldr	r3, [r3]
 337 0188 03F00203 		and	r3, r3, #2
 338              		.loc 1 334 9
 339 018c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 13


 340 018e 05D0     		beq	.L22
 341              		.loc 1 334 78 discriminator 1
 342 0190 7B68     		ldr	r3, [r7, #4]
 343 0192 DB68     		ldr	r3, [r3, #12]
 344              		.loc 1 334 57 discriminator 1
 345 0194 012B     		cmp	r3, #1
 346 0196 01D0     		beq	.L22
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 347              		.loc 1 336 16
 348 0198 0123     		movs	r3, #1
 349 019a 22E2     		b	.L9
 350              	.L22:
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 351              		.loc 1 342 9
 352 019c 3C4B     		ldr	r3, .L69+4
 353 019e 1B68     		ldr	r3, [r3]
 354 01a0 23F0F802 		bic	r2, r3, #248
 355 01a4 7B68     		ldr	r3, [r7, #4]
 356 01a6 1969     		ldr	r1, [r3, #16]
 357 01a8 F823     		movs	r3, #248
 358 01aa 3B63     		str	r3, [r7, #48]
 359              	.LBB33:
 360              	.LBB34:
 361              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 14


  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 15


  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 16


 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 17


 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 18


 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 19


 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 20


 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 21


 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:Drivers/CMSIS/Include/core_cmInstr.h **** }
 452:Drivers/CMSIS/Include/core_cmInstr.h **** 
 453:Drivers/CMSIS/Include/core_cmInstr.h **** 
 454:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:Drivers/CMSIS/Include/core_cmInstr.h **** 
 456:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 460:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:Drivers/CMSIS/Include/core_cmInstr.h **** {
 462:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:Drivers/CMSIS/Include/core_cmInstr.h **** }
 464:Drivers/CMSIS/Include/core_cmInstr.h **** 
 465:Drivers/CMSIS/Include/core_cmInstr.h **** 
 466:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:Drivers/CMSIS/Include/core_cmInstr.h **** 
 468:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 471:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:Drivers/CMSIS/Include/core_cmInstr.h **** {
 473:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:Drivers/CMSIS/Include/core_cmInstr.h **** }
 475:Drivers/CMSIS/Include/core_cmInstr.h **** 
 476:Drivers/CMSIS/Include/core_cmInstr.h **** 
 477:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:Drivers/CMSIS/Include/core_cmInstr.h **** 
 479:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 482:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:Drivers/CMSIS/Include/core_cmInstr.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 22


 484:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:Drivers/CMSIS/Include/core_cmInstr.h **** }
 486:Drivers/CMSIS/Include/core_cmInstr.h **** 
 487:Drivers/CMSIS/Include/core_cmInstr.h **** 
 488:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:Drivers/CMSIS/Include/core_cmInstr.h **** 
 490:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:Drivers/CMSIS/Include/core_cmInstr.h **** 
 492:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 494:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 495:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 496:Drivers/CMSIS/Include/core_cmInstr.h **** {
 497:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:Drivers/CMSIS/Include/core_cmInstr.h ****   return __builtin_bswap32(value);
 499:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 500:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 501:Drivers/CMSIS/Include/core_cmInstr.h **** 
 502:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 503:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 504:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 505:Drivers/CMSIS/Include/core_cmInstr.h **** }
 506:Drivers/CMSIS/Include/core_cmInstr.h **** 
 507:Drivers/CMSIS/Include/core_cmInstr.h **** 
 508:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 509:Drivers/CMSIS/Include/core_cmInstr.h **** 
 510:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 511:Drivers/CMSIS/Include/core_cmInstr.h **** 
 512:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 513:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 514:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 515:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 516:Drivers/CMSIS/Include/core_cmInstr.h **** {
 517:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 518:Drivers/CMSIS/Include/core_cmInstr.h **** 
 519:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 520:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 521:Drivers/CMSIS/Include/core_cmInstr.h **** }
 522:Drivers/CMSIS/Include/core_cmInstr.h **** 
 523:Drivers/CMSIS/Include/core_cmInstr.h **** 
 524:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 525:Drivers/CMSIS/Include/core_cmInstr.h **** 
 526:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 527:Drivers/CMSIS/Include/core_cmInstr.h **** 
 528:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 529:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 530:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 531:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 532:Drivers/CMSIS/Include/core_cmInstr.h **** {
 533:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 534:Drivers/CMSIS/Include/core_cmInstr.h ****   return (short)__builtin_bswap16(value);
 535:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 536:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 537:Drivers/CMSIS/Include/core_cmInstr.h **** 
 538:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 539:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 540:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 23


 541:Drivers/CMSIS/Include/core_cmInstr.h **** }
 542:Drivers/CMSIS/Include/core_cmInstr.h **** 
 543:Drivers/CMSIS/Include/core_cmInstr.h **** 
 544:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 545:Drivers/CMSIS/Include/core_cmInstr.h **** 
 546:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 547:Drivers/CMSIS/Include/core_cmInstr.h **** 
 548:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 549:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 550:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 551:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 552:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 553:Drivers/CMSIS/Include/core_cmInstr.h **** {
 554:Drivers/CMSIS/Include/core_cmInstr.h ****   return (op1 >> op2) | (op1 << (32 - op2));
 555:Drivers/CMSIS/Include/core_cmInstr.h **** }
 556:Drivers/CMSIS/Include/core_cmInstr.h **** 
 557:Drivers/CMSIS/Include/core_cmInstr.h **** 
 558:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 559:Drivers/CMSIS/Include/core_cmInstr.h **** 
 560:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 561:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 562:Drivers/CMSIS/Include/core_cmInstr.h **** 
 563:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 564:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 565:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 566:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 567:Drivers/CMSIS/Include/core_cmInstr.h **** 
 568:Drivers/CMSIS/Include/core_cmInstr.h **** 
 569:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 570:Drivers/CMSIS/Include/core_cmInstr.h **** 
 571:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 572:Drivers/CMSIS/Include/core_cmInstr.h **** 
 573:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 574:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 575:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 576:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 577:Drivers/CMSIS/Include/core_cmInstr.h **** {
 578:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 579:Drivers/CMSIS/Include/core_cmInstr.h **** 
 580:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 581:Drivers/CMSIS/Include/core_cmInstr.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 362              		.loc 2 581 4
 363 01ac 3B6B     		ldr	r3, [r7, #48]
 364              		.syntax unified
 365              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 366 01ae 93FAA3F3 		rbit r3, r3
 367              	@ 0 "" 2
 368              		.thumb
 369              		.syntax unified
 370 01b2 FB62     		str	r3, [r7, #44]
 582:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 583:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 584:Drivers/CMSIS/Include/core_cmInstr.h **** 
 585:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 586:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 587:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 588:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 24


 589:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 590:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 591:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 592:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 593:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 594:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 371              		.loc 2 594 9
 372 01b4 FB6A     		ldr	r3, [r7, #44]
 373              	.LBE34:
 374              	.LBE33:
 375              		.loc 1 342 9
 376 01b6 B3FA83F3 		clz	r3, r3
 377 01ba 01FA03F3 		lsl	r3, r1, r3
 378 01be 3449     		ldr	r1, .L69+4
 379 01c0 1343     		orrs	r3, r3, r2
 380 01c2 0B60     		str	r3, [r1]
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 381              		.loc 1 334 9
 382 01c4 44E0     		b	.L17
 383              	.L21:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 384              		.loc 1 348 28
 385 01c6 7B68     		ldr	r3, [r7, #4]
 386 01c8 DB68     		ldr	r3, [r3, #12]
 387              		.loc 1 348 9
 388 01ca 002B     		cmp	r3, #0
 389 01cc 2AD0     		beq	.L24
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 390              		.loc 1 351 9
 391 01ce 324B     		ldr	r3, .L69+12
 392 01d0 0122     		movs	r2, #1
 393 01d2 1A60     		str	r2, [r3]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 394              		.loc 1 354 21
 395 01d4 FFF7FEFF 		bl	HAL_GetTick
 396 01d8 7863     		str	r0, [r7, #52]
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */  
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 397              		.loc 1 357 14
 398 01da 08E0     		b	.L25
 399              	.L26:
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 400              		.loc 1 359 15
 401 01dc FFF7FEFF 		bl	HAL_GetTick
 402 01e0 0246     		mov	r2, r0
 403              		.loc 1 359 29
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 25


 404 01e2 7B6B     		ldr	r3, [r7, #52]
 405 01e4 D31A     		subs	r3, r2, r3
 406              		.loc 1 359 13
 407 01e6 642B     		cmp	r3, #100
 408 01e8 01D9     		bls	.L25
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 409              		.loc 1 361 20
 410 01ea 0323     		movs	r3, #3
 411 01ec F9E1     		b	.L9
 412              	.L25:
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 413              		.loc 1 357 15
 414 01ee 284B     		ldr	r3, .L69+4
 415 01f0 1B68     		ldr	r3, [r3]
 416 01f2 03F00203 		and	r3, r3, #2
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 417              		.loc 1 357 14
 418 01f6 002B     		cmp	r3, #0
 419 01f8 F0D0     		beq	.L26
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }       
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         } 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 420              		.loc 1 366 9
 421 01fa 254B     		ldr	r3, .L69+4
 422 01fc 1B68     		ldr	r3, [r3]
 423 01fe 23F0F802 		bic	r2, r3, #248
 424 0202 7B68     		ldr	r3, [r7, #4]
 425 0204 1969     		ldr	r1, [r3, #16]
 426 0206 F823     		movs	r3, #248
 427 0208 BB62     		str	r3, [r7, #40]
 428              	.LBB35:
 429              	.LBB36:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 430              		.loc 2 581 4
 431 020a BB6A     		ldr	r3, [r7, #40]
 432              		.syntax unified
 433              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 434 020c 93FAA3F3 		rbit r3, r3
 435              	@ 0 "" 2
 436              		.thumb
 437              		.syntax unified
 438 0210 7B62     		str	r3, [r7, #36]
 439              		.loc 2 594 9
 440 0212 7B6A     		ldr	r3, [r7, #36]
 441              	.LBE36:
 442              	.LBE35:
 443              		.loc 1 366 9
 444 0214 B3FA83F3 		clz	r3, r3
 445 0218 01FA03F3 		lsl	r3, r1, r3
 446 021c 1C49     		ldr	r1, .L69+4
 447 021e 1343     		orrs	r3, r3, r2
 448 0220 0B60     		str	r3, [r1]
 449 0222 15E0     		b	.L17
 450              	.L24:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 26


 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 451              		.loc 1 371 9
 452 0224 1C4B     		ldr	r3, .L69+12
 453 0226 0022     		movs	r2, #0
 454 0228 1A60     		str	r2, [r3]
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 455              		.loc 1 374 21
 456 022a FFF7FEFF 		bl	HAL_GetTick
 457 022e 7863     		str	r0, [r7, #52]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */  
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 458              		.loc 1 377 14
 459 0230 08E0     		b	.L28
 460              	.L29:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 461              		.loc 1 379 15
 462 0232 FFF7FEFF 		bl	HAL_GetTick
 463 0236 0246     		mov	r2, r0
 464              		.loc 1 379 29
 465 0238 7B6B     		ldr	r3, [r7, #52]
 466 023a D31A     		subs	r3, r2, r3
 467              		.loc 1 379 13
 468 023c 642B     		cmp	r3, #100
 469 023e 01D9     		bls	.L28
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 470              		.loc 1 381 20
 471 0240 0323     		movs	r3, #3
 472 0242 CEE1     		b	.L9
 473              	.L28:
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 474              		.loc 1 377 15
 475 0244 124B     		ldr	r3, .L69+4
 476 0246 1B68     		ldr	r3, [r3]
 477 0248 03F00203 		and	r3, r3, #2
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 478              		.loc 1 377 14
 479 024c 002B     		cmp	r3, #0
 480 024e F0D1     		bne	.L29
 481              	.L17:
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         } 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 482              		.loc 1 388 25
 483 0250 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 27


 484 0252 1B68     		ldr	r3, [r3]
 485              		.loc 1 388 43
 486 0254 03F00803 		and	r3, r3, #8
 487              		.loc 1 388 5
 488 0258 002B     		cmp	r3, #0
 489 025a 47D0     		beq	.L30
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 490              		.loc 1 391 5
 491 025c 7B68     		ldr	r3, [r7, #4]
 492 025e 5B69     		ldr	r3, [r3, #20]
 493 0260 002B     		cmp	r3, #0
 494 0262 08D0     		beq	.L31
 495              		.loc 1 391 5 is_stmt 0 discriminator 1
 496 0264 7B68     		ldr	r3, [r7, #4]
 497 0266 5B69     		ldr	r3, [r3, #20]
 498 0268 012B     		cmp	r3, #1
 499 026a 04D0     		beq	.L31
 500              		.loc 1 391 5 discriminator 2
 501 026c 40F28711 		movw	r1, #391
 502 0270 0648     		ldr	r0, .L69
 503 0272 FFF7FEFF 		bl	assert_failed
 504              	.L31:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 505              		.loc 1 394 26 is_stmt 1
 506 0276 7B68     		ldr	r3, [r7, #4]
 507 0278 5B69     		ldr	r3, [r3, #20]
 508              		.loc 1 394 7
 509 027a 002B     		cmp	r3, #0
 510 027c 20D0     		beq	.L32
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 511              		.loc 1 397 7
 512 027e 074B     		ldr	r3, .L69+16
 513 0280 0122     		movs	r2, #1
 514 0282 1A60     		str	r2, [r3]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 515              		.loc 1 400 19
 516 0284 FFF7FEFF 		bl	HAL_GetTick
 517 0288 7863     		str	r0, [r7, #52]
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 518              		.loc 1 403 12
 519 028a 12E0     		b	.L33
 520              	.L70:
 521              		.align	2
 522              	.L69:
 523 028c 00000000 		.word	.LC0
 524 0290 00380240 		.word	1073887232
 525 0294 02380240 		.word	1073887234
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 28


 526 0298 00004742 		.word	1111949312
 527 029c 800E4742 		.word	1111953024
 528              	.L34:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 529              		.loc 1 405 13
 530 02a0 FFF7FEFF 		bl	HAL_GetTick
 531 02a4 0246     		mov	r2, r0
 532              		.loc 1 405 27
 533 02a6 7B6B     		ldr	r3, [r7, #52]
 534 02a8 D31A     		subs	r3, r2, r3
 535              		.loc 1 405 11
 536 02aa 642B     		cmp	r3, #100
 537 02ac 01D9     		bls	.L33
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 538              		.loc 1 407 18
 539 02ae 0323     		movs	r3, #3
 540 02b0 97E1     		b	.L9
 541              	.L33:
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 542              		.loc 1 403 13
 543 02b2 8F4B     		ldr	r3, .L71
 544 02b4 5B6F     		ldr	r3, [r3, #116]
 545 02b6 03F00203 		and	r3, r3, #2
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 546              		.loc 1 403 12
 547 02ba 002B     		cmp	r3, #0
 548 02bc F0D0     		beq	.L34
 549 02be 15E0     		b	.L30
 550              	.L32:
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         } 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 551              		.loc 1 414 7
 552 02c0 8C4B     		ldr	r3, .L71+4
 553 02c2 0022     		movs	r2, #0
 554 02c4 1A60     		str	r2, [r3]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 555              		.loc 1 417 19
 556 02c6 FFF7FEFF 		bl	HAL_GetTick
 557 02ca 7863     		str	r0, [r7, #52]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 558              		.loc 1 420 12
 559 02cc 08E0     		b	.L35
 560              	.L36:
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 561              		.loc 1 422 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 29


 562 02ce FFF7FEFF 		bl	HAL_GetTick
 563 02d2 0246     		mov	r2, r0
 564              		.loc 1 422 27
 565 02d4 7B6B     		ldr	r3, [r7, #52]
 566 02d6 D31A     		subs	r3, r2, r3
 567              		.loc 1 422 11
 568 02d8 642B     		cmp	r3, #100
 569 02da 01D9     		bls	.L35
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 570              		.loc 1 424 18
 571 02dc 0323     		movs	r3, #3
 572 02de 80E1     		b	.L9
 573              	.L35:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 574              		.loc 1 420 13
 575 02e0 834B     		ldr	r3, .L71
 576 02e2 5B6F     		ldr	r3, [r3, #116]
 577 02e4 03F00203 		and	r3, r3, #2
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 578              		.loc 1 420 12
 579 02e8 002B     		cmp	r3, #0
 580 02ea F0D1     		bne	.L36
 581              	.L30:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }       
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       } 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 582              		.loc 1 430 25
 583 02ec 7B68     		ldr	r3, [r7, #4]
 584 02ee 1B68     		ldr	r3, [r3]
 585              		.loc 1 430 43
 586 02f0 03F00403 		and	r3, r3, #4
 587              		.loc 1 430 5
 588 02f4 002B     		cmp	r3, #0
 589 02f6 00F08280 		beq	.L37
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 590              		.loc 1 433 5
 591 02fa 7B68     		ldr	r3, [r7, #4]
 592 02fc 9B68     		ldr	r3, [r3, #8]
 593 02fe 002B     		cmp	r3, #0
 594 0300 0CD0     		beq	.L38
 595              		.loc 1 433 5 is_stmt 0 discriminator 1
 596 0302 7B68     		ldr	r3, [r7, #4]
 597 0304 9B68     		ldr	r3, [r3, #8]
 598 0306 012B     		cmp	r3, #1
 599 0308 08D0     		beq	.L38
 600              		.loc 1 433 5 discriminator 2
 601 030a 7B68     		ldr	r3, [r7, #4]
 602 030c 9B68     		ldr	r3, [r3, #8]
 603 030e 052B     		cmp	r3, #5
 604 0310 04D0     		beq	.L38
 605              		.loc 1 433 5 discriminator 3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 30


 606 0312 40F2B111 		movw	r1, #433
 607 0316 7848     		ldr	r0, .L71+8
 608 0318 FFF7FEFF 		bl	assert_failed
 609              	.L38:
 610              	.LBB37:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Enable Power Clock*/
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 611              		.loc 1 436 5 is_stmt 1
 612 031c 744B     		ldr	r3, .L71
 613 031e 1B6C     		ldr	r3, [r3, #64]
 614 0320 734A     		ldr	r2, .L71
 615 0322 43F08053 		orr	r3, r3, #268435456
 616 0326 1364     		str	r3, [r2, #64]
 617 0328 714B     		ldr	r3, .L71
 618 032a 1B6C     		ldr	r3, [r3, #64]
 619 032c 03F08053 		and	r3, r3, #268435456
 620 0330 BB60     		str	r3, [r7, #8]
 621 0332 BB68     		ldr	r3, [r7, #8]
 622              	.LBE37:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     PWR->CR |= PWR_CR_DBP;
 623              		.loc 1 439 13
 624 0334 714B     		ldr	r3, .L71+12
 625 0336 1B68     		ldr	r3, [r3]
 626 0338 704A     		ldr	r2, .L71+12
 627 033a 43F48073 		orr	r3, r3, #256
 628 033e 1360     		str	r3, [r2]
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Wait for Backup domain Write protection disable */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 629              		.loc 1 442 17
 630 0340 FFF7FEFF 		bl	HAL_GetTick
 631 0344 7863     		str	r0, [r7, #52]
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 632              		.loc 1 444 10
 633 0346 08E0     		b	.L39
 634              	.L40:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 635              		.loc 1 446 11
 636 0348 FFF7FEFF 		bl	HAL_GetTick
 637 034c 0246     		mov	r2, r0
 638              		.loc 1 446 25
 639 034e 7B6B     		ldr	r3, [r7, #52]
 640 0350 D31A     		subs	r3, r2, r3
 641              		.loc 1 446 9
 642 0352 642B     		cmp	r3, #100
 643 0354 01D9     		bls	.L39
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 644              		.loc 1 448 16
 645 0356 0323     		movs	r3, #3
 646 0358 43E1     		b	.L9
 647              	.L39:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 31


 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 648              		.loc 1 444 15
 649 035a 684B     		ldr	r3, .L71+12
 650 035c 1B68     		ldr	r3, [r3]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 651              		.loc 1 444 20
 652 035e 03F48073 		and	r3, r3, #256
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 653              		.loc 1 444 10
 654 0362 002B     		cmp	r3, #0
 655 0364 F0D0     		beq	.L40
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }      
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Reset LSEON and LSEBYP bits before configuring the LSE ----------------*/
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
 656              		.loc 1 453 5
 657 0366 664B     		ldr	r3, .L71+16
 658 0368 0022     		movs	r2, #0
 659 036a 1A70     		strb	r2, [r3]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick*/
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 660              		.loc 1 456 17
 661 036c FFF7FEFF 		bl	HAL_GetTick
 662 0370 7863     		str	r0, [r7, #52]
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Wait till LSE is ready */  
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 663              		.loc 1 459 10
 664 0372 0AE0     		b	.L41
 665              	.L42:
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 666              		.loc 1 461 11
 667 0374 FFF7FEFF 		bl	HAL_GetTick
 668 0378 0246     		mov	r2, r0
 669              		.loc 1 461 25
 670 037a 7B6B     		ldr	r3, [r7, #52]
 671 037c D31A     		subs	r3, r2, r3
 672              		.loc 1 461 9
 673 037e 41F28832 		movw	r2, #5000
 674 0382 9342     		cmp	r3, r2
 675 0384 01D9     		bls	.L41
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 676              		.loc 1 463 16
 677 0386 0323     		movs	r3, #3
 678 0388 2BE1     		b	.L9
 679              	.L41:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 680              		.loc 1 459 11
 681 038a 594B     		ldr	r3, .L71
 682 038c 1B6F     		ldr	r3, [r3, #112]
 683 038e 03F00203 		and	r3, r3, #2
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 684              		.loc 1 459 10
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 32


 685 0392 002B     		cmp	r3, #0
 686 0394 EED1     		bne	.L42
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }    
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     } 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 687              		.loc 1 468 5
 688 0396 7B68     		ldr	r3, [r7, #4]
 689 0398 9A68     		ldr	r2, [r3, #8]
 690 039a 594B     		ldr	r3, .L71+16
 691 039c D2B2     		uxtb	r2, r2
 692 039e 1A70     		strb	r2, [r3]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 693              		.loc 1 470 26
 694 03a0 7B68     		ldr	r3, [r7, #4]
 695 03a2 9B68     		ldr	r3, [r3, #8]
 696              		.loc 1 470 7
 697 03a4 002B     		cmp	r3, #0
 698 03a6 15D0     		beq	.L43
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 699              		.loc 1 473 19
 700 03a8 FFF7FEFF 		bl	HAL_GetTick
 701 03ac 7863     		str	r0, [r7, #52]
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 702              		.loc 1 476 12
 703 03ae 0AE0     		b	.L44
 704              	.L45:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 705              		.loc 1 478 13
 706 03b0 FFF7FEFF 		bl	HAL_GetTick
 707 03b4 0246     		mov	r2, r0
 708              		.loc 1 478 27
 709 03b6 7B6B     		ldr	r3, [r7, #52]
 710 03b8 D31A     		subs	r3, r2, r3
 711              		.loc 1 478 11
 712 03ba 41F28832 		movw	r2, #5000
 713 03be 9342     		cmp	r3, r2
 714 03c0 01D9     		bls	.L44
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 715              		.loc 1 480 18
 716 03c2 0323     		movs	r3, #3
 717 03c4 0DE1     		b	.L9
 718              	.L44:
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 719              		.loc 1 476 13
 720 03c6 4A4B     		ldr	r3, .L71
 721 03c8 1B6F     		ldr	r3, [r3, #112]
 722 03ca 03F00203 		and	r3, r3, #2
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 33


 723              		.loc 1 476 12
 724 03ce 002B     		cmp	r3, #0
 725 03d0 EED0     		beq	.L45
 726 03d2 14E0     		b	.L37
 727              	.L43:
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }       
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 728              		.loc 1 487 19
 729 03d4 FFF7FEFF 		bl	HAL_GetTick
 730 03d8 7863     		str	r0, [r7, #52]
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 731              		.loc 1 490 12
 732 03da 0AE0     		b	.L46
 733              	.L47:
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 734              		.loc 1 492 13
 735 03dc FFF7FEFF 		bl	HAL_GetTick
 736 03e0 0246     		mov	r2, r0
 737              		.loc 1 492 27
 738 03e2 7B6B     		ldr	r3, [r7, #52]
 739 03e4 D31A     		subs	r3, r2, r3
 740              		.loc 1 492 11
 741 03e6 41F28832 		movw	r2, #5000
 742 03ea 9342     		cmp	r3, r2
 743 03ec 01D9     		bls	.L46
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 744              		.loc 1 494 18
 745 03ee 0323     		movs	r3, #3
 746 03f0 F7E0     		b	.L9
 747              	.L46:
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 748              		.loc 1 490 13
 749 03f2 3F4B     		ldr	r3, .L71
 750 03f4 1B6F     		ldr	r3, [r3, #112]
 751 03f6 03F00203 		and	r3, r3, #2
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 752              		.loc 1 490 12
 753 03fa 002B     		cmp	r3, #0
 754 03fc EED1     		bne	.L47
 755              	.L37:
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }       
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 756              		.loc 1 501 3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 34


 757 03fe 7B68     		ldr	r3, [r7, #4]
 758 0400 9B69     		ldr	r3, [r3, #24]
 759 0402 002B     		cmp	r3, #0
 760 0404 0CD0     		beq	.L48
 761              		.loc 1 501 3 is_stmt 0 discriminator 1
 762 0406 7B68     		ldr	r3, [r7, #4]
 763 0408 9B69     		ldr	r3, [r3, #24]
 764 040a 012B     		cmp	r3, #1
 765 040c 08D0     		beq	.L48
 766              		.loc 1 501 3 discriminator 2
 767 040e 7B68     		ldr	r3, [r7, #4]
 768 0410 9B69     		ldr	r3, [r3, #24]
 769 0412 022B     		cmp	r3, #2
 770 0414 04D0     		beq	.L48
 771              		.loc 1 501 3 discriminator 3
 772 0416 40F2F511 		movw	r1, #501
 773 041a 3748     		ldr	r0, .L71+8
 774 041c FFF7FEFF 		bl	assert_failed
 775              	.L48:
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 776              		.loc 1 502 30 is_stmt 1
 777 0420 7B68     		ldr	r3, [r7, #4]
 778 0422 9B69     		ldr	r3, [r3, #24]
 779              		.loc 1 502 6
 780 0424 002B     		cmp	r3, #0
 781 0426 00F0DB80 		beq	.L49
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 782              		.loc 1 505 8
 783 042a 314B     		ldr	r3, .L71
 784 042c 9B68     		ldr	r3, [r3, #8]
 785 042e 03F00C03 		and	r3, r3, #12
 786              		.loc 1 505 7
 787 0432 082B     		cmp	r3, #8
 788 0434 00F0D280 		beq	.L50
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     { 
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 789              		.loc 1 507 33
 790 0438 7B68     		ldr	r3, [r7, #4]
 791 043a 9B69     		ldr	r3, [r3, #24]
 792              		.loc 1 507 9
 793 043c 022B     		cmp	r3, #2
 794 043e 40F0B680 		bne	.L51
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 795              		.loc 1 510 9
 796 0442 7B68     		ldr	r3, [r7, #4]
 797 0444 DB69     		ldr	r3, [r3, #28]
 798 0446 002B     		cmp	r3, #0
 799 0448 09D0     		beq	.L52
 800              		.loc 1 510 9 is_stmt 0 discriminator 1
 801 044a 7B68     		ldr	r3, [r7, #4]
 802 044c DB69     		ldr	r3, [r3, #28]
 803 044e B3F5800F 		cmp	r3, #4194304
 804 0452 04D0     		beq	.L52
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 35


 805              		.loc 1 510 9 discriminator 2
 806 0454 4FF4FF71 		mov	r1, #510
 807 0458 2748     		ldr	r0, .L71+8
 808 045a FFF7FEFF 		bl	assert_failed
 809              	.L52:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 810              		.loc 1 511 9 is_stmt 1
 811 045e 7B68     		ldr	r3, [r7, #4]
 812 0460 1B6A     		ldr	r3, [r3, #32]
 813 0462 3F2B     		cmp	r3, #63
 814 0464 04D9     		bls	.L53
 815              		.loc 1 511 9 is_stmt 0 discriminator 1
 816 0466 40F2FF11 		movw	r1, #511
 817 046a 2348     		ldr	r0, .L71+8
 818 046c FFF7FEFF 		bl	assert_failed
 819              	.L53:
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 820              		.loc 1 512 9 is_stmt 1
 821 0470 7B68     		ldr	r3, [r7, #4]
 822 0472 5B6A     		ldr	r3, [r3, #36]
 823 0474 BF2B     		cmp	r3, #191
 824 0476 04D9     		bls	.L54
 825              		.loc 1 512 9 is_stmt 0 discriminator 2
 826 0478 7B68     		ldr	r3, [r7, #4]
 827 047a 5B6A     		ldr	r3, [r3, #36]
 828 047c B3F5D87F 		cmp	r3, #432
 829 0480 04D9     		bls	.L55
 830              	.L54:
 831              		.loc 1 512 9 discriminator 3
 832 0482 4FF40071 		mov	r1, #512
 833 0486 1C48     		ldr	r0, .L71+8
 834 0488 FFF7FEFF 		bl	assert_failed
 835              	.L55:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 836              		.loc 1 513 9 is_stmt 1
 837 048c 7B68     		ldr	r3, [r7, #4]
 838 048e 9B6A     		ldr	r3, [r3, #40]
 839 0490 022B     		cmp	r3, #2
 840 0492 10D0     		beq	.L56
 841              		.loc 1 513 9 is_stmt 0 discriminator 1
 842 0494 7B68     		ldr	r3, [r7, #4]
 843 0496 9B6A     		ldr	r3, [r3, #40]
 844 0498 042B     		cmp	r3, #4
 845 049a 0CD0     		beq	.L56
 846              		.loc 1 513 9 discriminator 2
 847 049c 7B68     		ldr	r3, [r7, #4]
 848 049e 9B6A     		ldr	r3, [r3, #40]
 849 04a0 062B     		cmp	r3, #6
 850 04a2 08D0     		beq	.L56
 851              		.loc 1 513 9 discriminator 3
 852 04a4 7B68     		ldr	r3, [r7, #4]
 853 04a6 9B6A     		ldr	r3, [r3, #40]
 854 04a8 082B     		cmp	r3, #8
 855 04aa 04D0     		beq	.L56
 856              		.loc 1 513 9 discriminator 4
 857 04ac 40F20121 		movw	r1, #513
 858 04b0 1148     		ldr	r0, .L71+8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 36


 859 04b2 FFF7FEFF 		bl	assert_failed
 860              	.L56:
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 861              		.loc 1 514 9 is_stmt 1
 862 04b6 7B68     		ldr	r3, [r7, #4]
 863 04b8 DB6A     		ldr	r3, [r3, #44]
 864 04ba 032B     		cmp	r3, #3
 865 04bc 03D9     		bls	.L57
 866              		.loc 1 514 9 is_stmt 0 discriminator 2
 867 04be 7B68     		ldr	r3, [r7, #4]
 868 04c0 DB6A     		ldr	r3, [r3, #44]
 869 04c2 0F2B     		cmp	r3, #15
 870 04c4 04D9     		bls	.L58
 871              	.L57:
 872              		.loc 1 514 9 discriminator 3
 873 04c6 40F20221 		movw	r1, #514
 874 04ca 0B48     		ldr	r0, .L71+8
 875 04cc FFF7FEFF 		bl	assert_failed
 876              	.L58:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 877              		.loc 1 517 9 is_stmt 1
 878 04d0 0C4B     		ldr	r3, .L71+20
 879 04d2 0022     		movs	r2, #0
 880 04d4 1A60     		str	r2, [r3]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 881              		.loc 1 520 21
 882 04d6 FFF7FEFF 		bl	HAL_GetTick
 883 04da 7863     		str	r0, [r7, #52]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */  
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 884              		.loc 1 523 14
 885 04dc 14E0     		b	.L59
 886              	.L60:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 887              		.loc 1 525 15
 888 04de FFF7FEFF 		bl	HAL_GetTick
 889 04e2 0246     		mov	r2, r0
 890              		.loc 1 525 29
 891 04e4 7B6B     		ldr	r3, [r7, #52]
 892 04e6 D31A     		subs	r3, r2, r3
 893              		.loc 1 525 13
 894 04e8 642B     		cmp	r3, #100
 895 04ea 0DD9     		bls	.L59
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 896              		.loc 1 527 20
 897 04ec 0323     		movs	r3, #3
 898 04ee 78E0     		b	.L9
 899              	.L72:
 900              		.align	2
 901              	.L71:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 37


 902 04f0 00380240 		.word	1073887232
 903 04f4 800E4742 		.word	1111953024
 904 04f8 00000000 		.word	.LC0
 905 04fc 00700040 		.word	1073770496
 906 0500 70380240 		.word	1073887344
 907 0504 60004742 		.word	1111949408
 908              	.L59:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 909              		.loc 1 523 15
 910 0508 384B     		ldr	r3, .L73
 911 050a 1B68     		ldr	r3, [r3]
 912 050c 03F00073 		and	r3, r3, #33554432
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 913              		.loc 1 523 14
 914 0510 002B     		cmp	r3, #0
 915 0512 E4D1     		bne	.L60
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }        
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 916              		.loc 1 532 9
 917 0514 7B68     		ldr	r3, [r7, #4]
 918 0516 DA69     		ldr	r2, [r3, #28]
 919 0518 7B68     		ldr	r3, [r7, #4]
 920 051a 1B6A     		ldr	r3, [r3, #32]
 921 051c 1A43     		orrs	r2, r2, r3
 922 051e 7B68     		ldr	r3, [r7, #4]
 923 0520 596A     		ldr	r1, [r3, #36]
 924 0522 47F6C073 		movw	r3, #32704
 925 0526 3B61     		str	r3, [r7, #16]
 926              	.LBB38:
 927              	.LBB39:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 928              		.loc 2 581 4
 929 0528 3B69     		ldr	r3, [r7, #16]
 930              		.syntax unified
 931              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 932 052a 93FAA3F3 		rbit r3, r3
 933              	@ 0 "" 2
 934              		.thumb
 935              		.syntax unified
 936 052e FB60     		str	r3, [r7, #12]
 937              		.loc 2 594 9
 938 0530 FB68     		ldr	r3, [r7, #12]
 939              	.LBE39:
 940              	.LBE38:
 941              		.loc 1 532 9
 942 0532 B3FA83F3 		clz	r3, r3
 943 0536 01FA03F3 		lsl	r3, r1, r3
 944 053a 1A43     		orrs	r2, r2, r3
 945 053c 7B68     		ldr	r3, [r7, #4]
 946 053e 9B6A     		ldr	r3, [r3, #40]
 947 0540 5B08     		lsrs	r3, r3, #1
 948 0542 591E     		subs	r1, r3, #1
 949 0544 4FF44033 		mov	r3, #196608
 950 0548 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 38


 951              	.LBB40:
 952              	.LBB41:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 953              		.loc 2 581 4
 954 054a BB69     		ldr	r3, [r7, #24]
 955              		.syntax unified
 956              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 957 054c 93FAA3F3 		rbit r3, r3
 958              	@ 0 "" 2
 959              		.thumb
 960              		.syntax unified
 961 0550 7B61     		str	r3, [r7, #20]
 962              		.loc 2 594 9
 963 0552 7B69     		ldr	r3, [r7, #20]
 964              	.LBE41:
 965              	.LBE40:
 966              		.loc 1 532 9
 967 0554 B3FA83F3 		clz	r3, r3
 968 0558 01FA03F3 		lsl	r3, r1, r3
 969 055c 1A43     		orrs	r2, r2, r3
 970 055e 7B68     		ldr	r3, [r7, #4]
 971 0560 D96A     		ldr	r1, [r3, #44]
 972 0562 4FF07063 		mov	r3, #251658240
 973 0566 3B62     		str	r3, [r7, #32]
 974              	.LBB42:
 975              	.LBB43:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 976              		.loc 2 581 4
 977 0568 3B6A     		ldr	r3, [r7, #32]
 978              		.syntax unified
 979              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 980 056a 93FAA3F3 		rbit r3, r3
 981              	@ 0 "" 2
 982              		.thumb
 983              		.syntax unified
 984 056e FB61     		str	r3, [r7, #28]
 985              		.loc 2 594 9
 986 0570 FB69     		ldr	r3, [r7, #28]
 987              	.LBE43:
 988              	.LBE42:
 989              		.loc 1 532 9
 990 0572 B3FA83F3 		clz	r3, r3
 991 0576 01FA03F3 		lsl	r3, r1, r3
 992 057a 1C49     		ldr	r1, .L73
 993 057c 1343     		orrs	r3, r3, r2
 994 057e 4B60     		str	r3, [r1, #4]
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << POSITION_VAL(RCC_PLLCFGR_PLLN))   
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1) -1) << POSITION_VAL(RCC_PLLCF
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << POSITION_VAL(RCC_PLLCFGR_PLLQ))));
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 995              		.loc 1 538 9
 996 0580 1B4B     		ldr	r3, .L73+4
 997 0582 0122     		movs	r2, #1
 998 0584 1A60     		str	r2, [r3]
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 39


 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 999              		.loc 1 541 21
 1000 0586 FFF7FEFF 		bl	HAL_GetTick
 1001 058a 7863     		str	r0, [r7, #52]
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */  
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1002              		.loc 1 544 14
 1003 058c 08E0     		b	.L64
 1004              	.L65:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1005              		.loc 1 546 15
 1006 058e FFF7FEFF 		bl	HAL_GetTick
 1007 0592 0246     		mov	r2, r0
 1008              		.loc 1 546 29
 1009 0594 7B6B     		ldr	r3, [r7, #52]
 1010 0596 D31A     		subs	r3, r2, r3
 1011              		.loc 1 546 13
 1012 0598 642B     		cmp	r3, #100
 1013 059a 01D9     		bls	.L64
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1014              		.loc 1 548 20
 1015 059c 0323     		movs	r3, #3
 1016 059e 20E0     		b	.L9
 1017              	.L64:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1018              		.loc 1 544 15
 1019 05a0 124B     		ldr	r3, .L73
 1020 05a2 1B68     		ldr	r3, [r3]
 1021 05a4 03F00073 		and	r3, r3, #33554432
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1022              		.loc 1 544 14
 1023 05a8 002B     		cmp	r3, #0
 1024 05aa F0D0     		beq	.L65
 1025 05ac 18E0     		b	.L49
 1026              	.L51:
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1027              		.loc 1 555 9
 1028 05ae 104B     		ldr	r3, .L73+4
 1029 05b0 0022     		movs	r2, #0
 1030 05b2 1A60     		str	r2, [r3]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1031              		.loc 1 558 21
 1032 05b4 FFF7FEFF 		bl	HAL_GetTick
 1033 05b8 7863     		str	r0, [r7, #52]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 40


 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */  
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 1034              		.loc 1 561 14
 1035 05ba 08E0     		b	.L66
 1036              	.L67:
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1037              		.loc 1 563 15
 1038 05bc FFF7FEFF 		bl	HAL_GetTick
 1039 05c0 0246     		mov	r2, r0
 1040              		.loc 1 563 29
 1041 05c2 7B6B     		ldr	r3, [r7, #52]
 1042 05c4 D31A     		subs	r3, r2, r3
 1043              		.loc 1 563 13
 1044 05c6 642B     		cmp	r3, #100
 1045 05c8 01D9     		bls	.L66
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1046              		.loc 1 565 20
 1047 05ca 0323     		movs	r3, #3
 1048 05cc 09E0     		b	.L9
 1049              	.L66:
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1050              		.loc 1 561 15
 1051 05ce 074B     		ldr	r3, .L73
 1052 05d0 1B68     		ldr	r3, [r3]
 1053 05d2 03F00073 		and	r3, r3, #33554432
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1054              		.loc 1 561 14
 1055 05d6 002B     		cmp	r3, #0
 1056 05d8 F0D1     		bne	.L67
 1057 05da 01E0     		b	.L49
 1058              	.L50:
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1059              		.loc 1 572 14
 1060 05dc 0123     		movs	r3, #1
 1061 05de 00E0     		b	.L9
 1062              	.L49:
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1063              		.loc 1 575 10
 1064 05e0 0023     		movs	r3, #0
 1065              	.L9:
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1066              		.loc 1 576 1
 1067 05e2 1846     		mov	r0, r3
 1068 05e4 3837     		adds	r7, r7, #56
 1069              	.LCFI7:
 1070              		.cfi_def_cfa_offset 8
 1071 05e6 BD46     		mov	sp, r7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 41


 1072              	.LCFI8:
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 05e8 80BD     		pop	{r7, pc}
 1076              	.L74:
 1077 05ea 00BF     		.align	2
 1078              	.L73:
 1079 05ec 00380240 		.word	1073887232
 1080 05f0 60004742 		.word	1111949408
 1081              		.cfi_endproc
 1082              	.LFE129:
 1084              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1085              		.align	1
 1086              		.global	HAL_RCC_ClockConfig
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1091              	HAL_RCC_ClockConfig:
 1092              	.LFB130:
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked). 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1093              		.loc 1 604 1
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 16
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 0000 80B5     		push	{r7, lr}
 1098              	.LCFI9:
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 42


 1103              	.LCFI10:
 1104              		.cfi_def_cfa_offset 24
 1105 0004 00AF     		add	r7, sp, #0
 1106              	.LCFI11:
 1107              		.cfi_def_cfa_register 7
 1108 0006 7860     		str	r0, [r7, #4]
 1109 0008 3960     		str	r1, [r7]
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart = 0;   
 1110              		.loc 1 605 12
 1111 000a 0023     		movs	r3, #0
 1112 000c FB60     		str	r3, [r7, #12]
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1113              		.loc 1 608 3
 1114 000e 7B68     		ldr	r3, [r7, #4]
 1115 0010 1B68     		ldr	r3, [r3]
 1116 0012 002B     		cmp	r3, #0
 1117 0014 03D0     		beq	.L76
 1118              		.loc 1 608 3 is_stmt 0 discriminator 2
 1119 0016 7B68     		ldr	r3, [r7, #4]
 1120 0018 1B68     		ldr	r3, [r3]
 1121 001a 0F2B     		cmp	r3, #15
 1122 001c 04D9     		bls	.L77
 1123              	.L76:
 1124              		.loc 1 608 3 discriminator 3
 1125 001e 4FF41871 		mov	r1, #608
 1126 0022 8848     		ldr	r0, .L126
 1127 0024 FFF7FEFF 		bl	assert_failed
 1128              	.L77:
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1129              		.loc 1 609 3 is_stmt 1
 1130 0028 3B68     		ldr	r3, [r7]
 1131 002a 002B     		cmp	r3, #0
 1132 002c 19D0     		beq	.L78
 1133              		.loc 1 609 3 is_stmt 0 discriminator 1
 1134 002e 3B68     		ldr	r3, [r7]
 1135 0030 012B     		cmp	r3, #1
 1136 0032 16D0     		beq	.L78
 1137              		.loc 1 609 3 discriminator 2
 1138 0034 3B68     		ldr	r3, [r7]
 1139 0036 022B     		cmp	r3, #2
 1140 0038 13D0     		beq	.L78
 1141              		.loc 1 609 3 discriminator 3
 1142 003a 3B68     		ldr	r3, [r7]
 1143 003c 032B     		cmp	r3, #3
 1144 003e 10D0     		beq	.L78
 1145              		.loc 1 609 3 discriminator 4
 1146 0040 3B68     		ldr	r3, [r7]
 1147 0042 042B     		cmp	r3, #4
 1148 0044 0DD0     		beq	.L78
 1149              		.loc 1 609 3 discriminator 5
 1150 0046 3B68     		ldr	r3, [r7]
 1151 0048 052B     		cmp	r3, #5
 1152 004a 0AD0     		beq	.L78
 1153              		.loc 1 609 3 discriminator 6
 1154 004c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 43


 1155 004e 062B     		cmp	r3, #6
 1156 0050 07D0     		beq	.L78
 1157              		.loc 1 609 3 discriminator 7
 1158 0052 3B68     		ldr	r3, [r7]
 1159 0054 072B     		cmp	r3, #7
 1160 0056 04D0     		beq	.L78
 1161              		.loc 1 609 3 discriminator 8
 1162 0058 40F26121 		movw	r1, #609
 1163 005c 7948     		ldr	r0, .L126
 1164 005e FFF7FEFF 		bl	assert_failed
 1165              	.L78:
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1166              		.loc 1 616 23 is_stmt 1
 1167 0062 794B     		ldr	r3, .L126+4
 1168 0064 1B68     		ldr	r3, [r3]
 1169              		.loc 1 616 29
 1170 0066 03F00F03 		and	r3, r3, #15
 1171              		.loc 1 616 5
 1172 006a 3A68     		ldr	r2, [r7]
 1173 006c 9A42     		cmp	r2, r3
 1174 006e 40F2EF80 		bls	.L79
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {    
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1175              		.loc 1 619 5
 1176 0072 754B     		ldr	r3, .L126+4
 1177 0074 3A68     		ldr	r2, [r7]
 1178 0076 D2B2     		uxtb	r2, r2
 1179 0078 1A70     		strb	r2, [r3]
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1180              		.loc 1 623 14
 1181 007a 734B     		ldr	r3, .L126+4
 1182 007c 1B68     		ldr	r3, [r3]
 1183              		.loc 1 623 20
 1184 007e 03F00F03 		and	r3, r3, #15
 1185              		.loc 1 623 7
 1186 0082 3A68     		ldr	r2, [r7]
 1187 0084 9A42     		cmp	r2, r3
 1188 0086 01D0     		beq	.L80
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1189              		.loc 1 625 14
 1190 0088 0123     		movs	r3, #1
 1191 008a 25E2     		b	.L81
 1192              	.L80:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /*-------------------------- HCLK Configuration --------------------------*/
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 44


 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1193              		.loc 1 629 27
 1194 008c 7B68     		ldr	r3, [r7, #4]
 1195 008e 1B68     		ldr	r3, [r3]
 1196              		.loc 1 629 40
 1197 0090 03F00203 		and	r3, r3, #2
 1198              		.loc 1 629 7
 1199 0094 002B     		cmp	r3, #0
 1200 0096 31D0     		beq	.L82
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 1201              		.loc 1 631 7
 1202 0098 7B68     		ldr	r3, [r7, #4]
 1203 009a 9B68     		ldr	r3, [r3, #8]
 1204 009c 002B     		cmp	r3, #0
 1205 009e 24D0     		beq	.L83
 1206              		.loc 1 631 7 is_stmt 0 discriminator 1
 1207 00a0 7B68     		ldr	r3, [r7, #4]
 1208 00a2 9B68     		ldr	r3, [r3, #8]
 1209 00a4 802B     		cmp	r3, #128
 1210 00a6 20D0     		beq	.L83
 1211              		.loc 1 631 7 discriminator 2
 1212 00a8 7B68     		ldr	r3, [r7, #4]
 1213 00aa 9B68     		ldr	r3, [r3, #8]
 1214 00ac 902B     		cmp	r3, #144
 1215 00ae 1CD0     		beq	.L83
 1216              		.loc 1 631 7 discriminator 3
 1217 00b0 7B68     		ldr	r3, [r7, #4]
 1218 00b2 9B68     		ldr	r3, [r3, #8]
 1219 00b4 A02B     		cmp	r3, #160
 1220 00b6 18D0     		beq	.L83
 1221              		.loc 1 631 7 discriminator 4
 1222 00b8 7B68     		ldr	r3, [r7, #4]
 1223 00ba 9B68     		ldr	r3, [r3, #8]
 1224 00bc B02B     		cmp	r3, #176
 1225 00be 14D0     		beq	.L83
 1226              		.loc 1 631 7 discriminator 5
 1227 00c0 7B68     		ldr	r3, [r7, #4]
 1228 00c2 9B68     		ldr	r3, [r3, #8]
 1229 00c4 C02B     		cmp	r3, #192
 1230 00c6 10D0     		beq	.L83
 1231              		.loc 1 631 7 discriminator 6
 1232 00c8 7B68     		ldr	r3, [r7, #4]
 1233 00ca 9B68     		ldr	r3, [r3, #8]
 1234 00cc D02B     		cmp	r3, #208
 1235 00ce 0CD0     		beq	.L83
 1236              		.loc 1 631 7 discriminator 7
 1237 00d0 7B68     		ldr	r3, [r7, #4]
 1238 00d2 9B68     		ldr	r3, [r3, #8]
 1239 00d4 E02B     		cmp	r3, #224
 1240 00d6 08D0     		beq	.L83
 1241              		.loc 1 631 7 discriminator 8
 1242 00d8 7B68     		ldr	r3, [r7, #4]
 1243 00da 9B68     		ldr	r3, [r3, #8]
 1244 00dc F02B     		cmp	r3, #240
 1245 00de 04D0     		beq	.L83
 1246              		.loc 1 631 7 discriminator 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 45


 1247 00e0 40F27721 		movw	r1, #631
 1248 00e4 5748     		ldr	r0, .L126
 1249 00e6 FFF7FEFF 		bl	assert_failed
 1250              	.L83:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1251              		.loc 1 632 7 is_stmt 1
 1252 00ea 584B     		ldr	r3, .L126+8
 1253 00ec 9B68     		ldr	r3, [r3, #8]
 1254 00ee 23F0F002 		bic	r2, r3, #240
 1255 00f2 7B68     		ldr	r3, [r7, #4]
 1256 00f4 9B68     		ldr	r3, [r3, #8]
 1257 00f6 5549     		ldr	r1, .L126+8
 1258 00f8 1343     		orrs	r3, r3, r2
 1259 00fa 8B60     		str	r3, [r1, #8]
 1260              	.L82:
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /*------------------------- SYSCLK Configuration ---------------------------*/ 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1261              		.loc 1 636 27
 1262 00fc 7B68     		ldr	r3, [r7, #4]
 1263 00fe 1B68     		ldr	r3, [r3]
 1264              		.loc 1 636 40
 1265 0100 03F00103 		and	r3, r3, #1
 1266              		.loc 1 636 7
 1267 0104 002B     		cmp	r3, #0
 1268 0106 00F08A81 		beq	.L84
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {    
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 1269              		.loc 1 638 7
 1270 010a 7B68     		ldr	r3, [r7, #4]
 1271 010c 5B68     		ldr	r3, [r3, #4]
 1272 010e 002B     		cmp	r3, #0
 1273 0110 10D0     		beq	.L85
 1274              		.loc 1 638 7 is_stmt 0 discriminator 1
 1275 0112 7B68     		ldr	r3, [r7, #4]
 1276 0114 5B68     		ldr	r3, [r3, #4]
 1277 0116 012B     		cmp	r3, #1
 1278 0118 0CD0     		beq	.L85
 1279              		.loc 1 638 7 discriminator 2
 1280 011a 7B68     		ldr	r3, [r7, #4]
 1281 011c 5B68     		ldr	r3, [r3, #4]
 1282 011e 022B     		cmp	r3, #2
 1283 0120 08D0     		beq	.L85
 1284              		.loc 1 638 7 discriminator 3
 1285 0122 7B68     		ldr	r3, [r7, #4]
 1286 0124 5B68     		ldr	r3, [r3, #4]
 1287 0126 032B     		cmp	r3, #3
 1288 0128 04D0     		beq	.L85
 1289              		.loc 1 638 7 discriminator 4
 1290 012a 40F27E21 		movw	r1, #638
 1291 012e 4548     		ldr	r0, .L126
 1292 0130 FFF7FEFF 		bl	assert_failed
 1293              	.L85:
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 46


 1294              		.loc 1 641 27 is_stmt 1
 1295 0134 7B68     		ldr	r3, [r7, #4]
 1296 0136 5B68     		ldr	r3, [r3, #4]
 1297              		.loc 1 641 9
 1298 0138 012B     		cmp	r3, #1
 1299 013a 07D1     		bne	.L86
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the HSE ready flag */  
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1300              		.loc 1 644 12
 1301 013c 434B     		ldr	r3, .L126+8
 1302 013e 1B68     		ldr	r3, [r3]
 1303 0140 03F40033 		and	r3, r3, #131072
 1304              		.loc 1 644 11
 1305 0144 002B     		cmp	r3, #0
 1306 0146 19D1     		bne	.L87
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1307              		.loc 1 646 18
 1308 0148 0123     		movs	r3, #1
 1309 014a C5E1     		b	.L81
 1310              	.L86:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL is selected as System Clock Source */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   || 
 1311              		.loc 1 650 33
 1312 014c 7B68     		ldr	r3, [r7, #4]
 1313 014e 5B68     		ldr	r3, [r3, #4]
 1314              		.loc 1 650 14
 1315 0150 022B     		cmp	r3, #2
 1316 0152 03D0     		beq	.L88
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****               (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1317              		.loc 1 651 33 discriminator 1
 1318 0154 7B68     		ldr	r3, [r7, #4]
 1319 0156 5B68     		ldr	r3, [r3, #4]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****               (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1320              		.loc 1 650 78 discriminator 1
 1321 0158 032B     		cmp	r3, #3
 1322 015a 07D1     		bne	.L89
 1323              	.L88:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the PLL ready flag */  
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1324              		.loc 1 654 12
 1325 015c 3B4B     		ldr	r3, .L126+8
 1326 015e 1B68     		ldr	r3, [r3]
 1327 0160 03F00073 		and	r3, r3, #33554432
 1328              		.loc 1 654 11
 1329 0164 002B     		cmp	r3, #0
 1330 0166 09D1     		bne	.L87
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1331              		.loc 1 656 18
 1332 0168 0123     		movs	r3, #1
 1333 016a B5E1     		b	.L81
 1334              	.L89:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 47


 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the HSI ready flag */  
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1335              		.loc 1 663 12
 1336 016c 374B     		ldr	r3, .L126+8
 1337 016e 1B68     		ldr	r3, [r3]
 1338 0170 03F00203 		and	r3, r3, #2
 1339              		.loc 1 663 11
 1340 0174 002B     		cmp	r3, #0
 1341 0176 01D1     		bne	.L87
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1342              		.loc 1 665 18
 1343 0178 0123     		movs	r3, #1
 1344 017a ADE1     		b	.L81
 1345              	.L87:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1346              		.loc 1 669 7
 1347 017c 334B     		ldr	r3, .L126+8
 1348 017e 9B68     		ldr	r3, [r3, #8]
 1349 0180 23F00302 		bic	r2, r3, #3
 1350 0184 7B68     		ldr	r3, [r7, #4]
 1351 0186 5B68     		ldr	r3, [r3, #4]
 1352 0188 3049     		ldr	r1, .L126+8
 1353 018a 1343     		orrs	r3, r3, r2
 1354 018c 8B60     		str	r3, [r1, #8]
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1355              		.loc 1 671 19
 1356 018e FFF7FEFF 		bl	HAL_GetTick
 1357 0192 F860     		str	r0, [r7, #12]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1358              		.loc 1 673 27
 1359 0194 7B68     		ldr	r3, [r7, #4]
 1360 0196 5B68     		ldr	r3, [r3, #4]
 1361              		.loc 1 673 9
 1362 0198 012B     		cmp	r3, #1
 1363 019a 12D1     		bne	.L91
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1364              		.loc 1 675 15
 1365 019c 0AE0     		b	.L92
 1366              	.L93:
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1367              		.loc 1 677 15
 1368 019e FFF7FEFF 		bl	HAL_GetTick
 1369 01a2 0246     		mov	r2, r0
 1370              		.loc 1 677 29
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 48


 1371 01a4 FB68     		ldr	r3, [r7, #12]
 1372 01a6 D31A     		subs	r3, r2, r3
 1373              		.loc 1 677 13
 1374 01a8 41F28832 		movw	r2, #5000
 1375 01ac 9342     		cmp	r3, r2
 1376 01ae 01D9     		bls	.L92
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1377              		.loc 1 679 20
 1378 01b0 0323     		movs	r3, #3
 1379 01b2 91E1     		b	.L81
 1380              	.L92:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1381              		.loc 1 675 16
 1382 01b4 254B     		ldr	r3, .L126+8
 1383 01b6 9B68     		ldr	r3, [r3, #8]
 1384 01b8 03F00C03 		and	r3, r3, #12
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1385              		.loc 1 675 15
 1386 01bc 042B     		cmp	r3, #4
 1387 01be EED1     		bne	.L93
 1388 01c0 2DE1     		b	.L84
 1389              	.L91:
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1390              		.loc 1 683 32
 1391 01c2 7B68     		ldr	r3, [r7, #4]
 1392 01c4 5B68     		ldr	r3, [r3, #4]
 1393              		.loc 1 683 14
 1394 01c6 022B     		cmp	r3, #2
 1395 01c8 12D1     		bne	.L94
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1396              		.loc 1 685 15
 1397 01ca 0AE0     		b	.L95
 1398              	.L96:
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1399              		.loc 1 687 15
 1400 01cc FFF7FEFF 		bl	HAL_GetTick
 1401 01d0 0246     		mov	r2, r0
 1402              		.loc 1 687 29
 1403 01d2 FB68     		ldr	r3, [r7, #12]
 1404 01d4 D31A     		subs	r3, r2, r3
 1405              		.loc 1 687 13
 1406 01d6 41F28832 		movw	r2, #5000
 1407 01da 9342     		cmp	r3, r2
 1408 01dc 01D9     		bls	.L95
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1409              		.loc 1 689 20
 1410 01de 0323     		movs	r3, #3
 1411 01e0 7AE1     		b	.L81
 1412              	.L95:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 49


 1413              		.loc 1 685 16
 1414 01e2 1A4B     		ldr	r3, .L126+8
 1415 01e4 9B68     		ldr	r3, [r3, #8]
 1416 01e6 03F00C03 		and	r3, r3, #12
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1417              		.loc 1 685 15
 1418 01ea 082B     		cmp	r3, #8
 1419 01ec EED1     		bne	.L96
 1420 01ee 16E1     		b	.L84
 1421              	.L94:
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK)
 1422              		.loc 1 693 32
 1423 01f0 7B68     		ldr	r3, [r7, #4]
 1424 01f2 5B68     		ldr	r3, [r3, #4]
 1425              		.loc 1 693 14
 1426 01f4 032B     		cmp	r3, #3
 1427 01f6 1DD1     		bne	.L100
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLRCLK)
 1428              		.loc 1 695 15
 1429 01f8 0AE0     		b	.L98
 1430              	.L99:
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1431              		.loc 1 697 15
 1432 01fa FFF7FEFF 		bl	HAL_GetTick
 1433 01fe 0246     		mov	r2, r0
 1434              		.loc 1 697 29
 1435 0200 FB68     		ldr	r3, [r7, #12]
 1436 0202 D31A     		subs	r3, r2, r3
 1437              		.loc 1 697 13
 1438 0204 41F28832 		movw	r2, #5000
 1439 0208 9342     		cmp	r3, r2
 1440 020a 01D9     		bls	.L98
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1441              		.loc 1 699 20
 1442 020c 0323     		movs	r3, #3
 1443 020e 63E1     		b	.L81
 1444              	.L98:
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1445              		.loc 1 695 16
 1446 0210 0E4B     		ldr	r3, .L126+8
 1447 0212 9B68     		ldr	r3, [r3, #8]
 1448 0214 03F00C03 		and	r3, r3, #12
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1449              		.loc 1 695 15
 1450 0218 032B     		cmp	r3, #3
 1451 021a EED1     		bne	.L99
 1452 021c FFE0     		b	.L84
 1453              	.L101:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 50


 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1454              		.loc 1 707 15
 1455 021e FFF7FEFF 		bl	HAL_GetTick
 1456 0222 0246     		mov	r2, r0
 1457              		.loc 1 707 29
 1458 0224 FB68     		ldr	r3, [r7, #12]
 1459 0226 D31A     		subs	r3, r2, r3
 1460              		.loc 1 707 13
 1461 0228 41F28832 		movw	r2, #5000
 1462 022c 9342     		cmp	r3, r2
 1463 022e 01D9     		bls	.L100
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1464              		.loc 1 709 20
 1465 0230 0323     		movs	r3, #3
 1466 0232 51E1     		b	.L81
 1467              	.L100:
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1468              		.loc 1 705 15
 1469 0234 054B     		ldr	r3, .L126+8
 1470 0236 9B68     		ldr	r3, [r3, #8]
 1471 0238 03F00C03 		and	r3, r3, #12
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1472              		.loc 1 705 14
 1473 023c 002B     		cmp	r3, #0
 1474 023e EED1     		bne	.L101
 1475 0240 EDE0     		b	.L84
 1476              	.L127:
 1477 0242 00BF     		.align	2
 1478              	.L126:
 1479 0244 00000000 		.word	.LC0
 1480 0248 003C0240 		.word	1073888256
 1481 024c 00380240 		.word	1073887232
 1482              	.L79:
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }    
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the CPU frequency */
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /*-------------------------- HCLK Configuration --------------------------*/
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1483              		.loc 1 719 27
 1484 0250 7B68     		ldr	r3, [r7, #4]
 1485 0252 1B68     		ldr	r3, [r3]
 1486              		.loc 1 719 40
 1487 0254 03F00203 		and	r3, r3, #2
 1488              		.loc 1 719 7
 1489 0258 002B     		cmp	r3, #0
 1490 025a 31D0     		beq	.L102
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 51


 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 1491              		.loc 1 721 7
 1492 025c 7B68     		ldr	r3, [r7, #4]
 1493 025e 9B68     		ldr	r3, [r3, #8]
 1494 0260 002B     		cmp	r3, #0
 1495 0262 24D0     		beq	.L103
 1496              		.loc 1 721 7 is_stmt 0 discriminator 1
 1497 0264 7B68     		ldr	r3, [r7, #4]
 1498 0266 9B68     		ldr	r3, [r3, #8]
 1499 0268 802B     		cmp	r3, #128
 1500 026a 20D0     		beq	.L103
 1501              		.loc 1 721 7 discriminator 2
 1502 026c 7B68     		ldr	r3, [r7, #4]
 1503 026e 9B68     		ldr	r3, [r3, #8]
 1504 0270 902B     		cmp	r3, #144
 1505 0272 1CD0     		beq	.L103
 1506              		.loc 1 721 7 discriminator 3
 1507 0274 7B68     		ldr	r3, [r7, #4]
 1508 0276 9B68     		ldr	r3, [r3, #8]
 1509 0278 A02B     		cmp	r3, #160
 1510 027a 18D0     		beq	.L103
 1511              		.loc 1 721 7 discriminator 4
 1512 027c 7B68     		ldr	r3, [r7, #4]
 1513 027e 9B68     		ldr	r3, [r3, #8]
 1514 0280 B02B     		cmp	r3, #176
 1515 0282 14D0     		beq	.L103
 1516              		.loc 1 721 7 discriminator 5
 1517 0284 7B68     		ldr	r3, [r7, #4]
 1518 0286 9B68     		ldr	r3, [r3, #8]
 1519 0288 C02B     		cmp	r3, #192
 1520 028a 10D0     		beq	.L103
 1521              		.loc 1 721 7 discriminator 6
 1522 028c 7B68     		ldr	r3, [r7, #4]
 1523 028e 9B68     		ldr	r3, [r3, #8]
 1524 0290 D02B     		cmp	r3, #208
 1525 0292 0CD0     		beq	.L103
 1526              		.loc 1 721 7 discriminator 7
 1527 0294 7B68     		ldr	r3, [r7, #4]
 1528 0296 9B68     		ldr	r3, [r3, #8]
 1529 0298 E02B     		cmp	r3, #224
 1530 029a 08D0     		beq	.L103
 1531              		.loc 1 721 7 discriminator 8
 1532 029c 7B68     		ldr	r3, [r7, #4]
 1533 029e 9B68     		ldr	r3, [r3, #8]
 1534 02a0 F02B     		cmp	r3, #240
 1535 02a2 04D0     		beq	.L103
 1536              		.loc 1 721 7 discriminator 9
 1537 02a4 40F2D121 		movw	r1, #721
 1538 02a8 8D48     		ldr	r0, .L128
 1539 02aa FFF7FEFF 		bl	assert_failed
 1540              	.L103:
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1541              		.loc 1 722 7 is_stmt 1
 1542 02ae 8D4B     		ldr	r3, .L128+4
 1543 02b0 9B68     		ldr	r3, [r3, #8]
 1544 02b2 23F0F002 		bic	r2, r3, #240
 1545 02b6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 52


 1546 02b8 9B68     		ldr	r3, [r3, #8]
 1547 02ba 8A49     		ldr	r1, .L128+4
 1548 02bc 1343     		orrs	r3, r3, r2
 1549 02be 8B60     		str	r3, [r1, #8]
 1550              	.L102:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /*------------------------- SYSCLK Configuration -------------------------*/
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1551              		.loc 1 726 27
 1552 02c0 7B68     		ldr	r3, [r7, #4]
 1553 02c2 1B68     		ldr	r3, [r3]
 1554              		.loc 1 726 40
 1555 02c4 03F00103 		and	r3, r3, #1
 1556              		.loc 1 726 7
 1557 02c8 002B     		cmp	r3, #0
 1558 02ca 00F09B80 		beq	.L104
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {    
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 1559              		.loc 1 728 7
 1560 02ce 7B68     		ldr	r3, [r7, #4]
 1561 02d0 5B68     		ldr	r3, [r3, #4]
 1562 02d2 002B     		cmp	r3, #0
 1563 02d4 10D0     		beq	.L105
 1564              		.loc 1 728 7 is_stmt 0 discriminator 1
 1565 02d6 7B68     		ldr	r3, [r7, #4]
 1566 02d8 5B68     		ldr	r3, [r3, #4]
 1567 02da 012B     		cmp	r3, #1
 1568 02dc 0CD0     		beq	.L105
 1569              		.loc 1 728 7 discriminator 2
 1570 02de 7B68     		ldr	r3, [r7, #4]
 1571 02e0 5B68     		ldr	r3, [r3, #4]
 1572 02e2 022B     		cmp	r3, #2
 1573 02e4 08D0     		beq	.L105
 1574              		.loc 1 728 7 discriminator 3
 1575 02e6 7B68     		ldr	r3, [r7, #4]
 1576 02e8 5B68     		ldr	r3, [r3, #4]
 1577 02ea 032B     		cmp	r3, #3
 1578 02ec 04D0     		beq	.L105
 1579              		.loc 1 728 7 discriminator 4
 1580 02ee 4FF43671 		mov	r1, #728
 1581 02f2 7B48     		ldr	r0, .L128
 1582 02f4 FFF7FEFF 		bl	assert_failed
 1583              	.L105:
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1584              		.loc 1 731 27 is_stmt 1
 1585 02f8 7B68     		ldr	r3, [r7, #4]
 1586 02fa 5B68     		ldr	r3, [r3, #4]
 1587              		.loc 1 731 9
 1588 02fc 012B     		cmp	r3, #1
 1589 02fe 07D1     		bne	.L106
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the HSE ready flag */  
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1590              		.loc 1 734 12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 53


 1591 0300 784B     		ldr	r3, .L128+4
 1592 0302 1B68     		ldr	r3, [r3]
 1593 0304 03F40033 		and	r3, r3, #131072
 1594              		.loc 1 734 11
 1595 0308 002B     		cmp	r3, #0
 1596 030a 19D1     		bne	.L107
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1597              		.loc 1 736 18
 1598 030c 0123     		movs	r3, #1
 1599 030e E3E0     		b	.L81
 1600              	.L106:
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL is selected as System Clock Source */
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK) || 
 1601              		.loc 1 740 33
 1602 0310 7B68     		ldr	r3, [r7, #4]
 1603 0312 5B68     		ldr	r3, [r3, #4]
 1604              		.loc 1 740 14
 1605 0314 022B     		cmp	r3, #2
 1606 0316 03D0     		beq	.L108
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****               (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1607              		.loc 1 741 33 discriminator 1
 1608 0318 7B68     		ldr	r3, [r7, #4]
 1609 031a 5B68     		ldr	r3, [r3, #4]
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****               (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1610              		.loc 1 740 76 discriminator 1
 1611 031c 032B     		cmp	r3, #3
 1612 031e 07D1     		bne	.L109
 1613              	.L108:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the PLL ready flag */  
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1614              		.loc 1 744 12
 1615 0320 704B     		ldr	r3, .L128+4
 1616 0322 1B68     		ldr	r3, [r3]
 1617 0324 03F00073 		and	r3, r3, #33554432
 1618              		.loc 1 744 11
 1619 0328 002B     		cmp	r3, #0
 1620 032a 09D1     		bne	.L107
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1621              		.loc 1 746 18
 1622 032c 0123     		movs	r3, #1
 1623 032e D3E0     		b	.L81
 1624              	.L109:
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the HSI ready flag */  
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1625              		.loc 1 753 12
 1626 0330 6C4B     		ldr	r3, .L128+4
 1627 0332 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 54


 1628 0334 03F00203 		and	r3, r3, #2
 1629              		.loc 1 753 11
 1630 0338 002B     		cmp	r3, #0
 1631 033a 01D1     		bne	.L107
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1632              		.loc 1 755 18
 1633 033c 0123     		movs	r3, #1
 1634 033e CBE0     		b	.L81
 1635              	.L107:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1636              		.loc 1 758 7
 1637 0340 684B     		ldr	r3, .L128+4
 1638 0342 9B68     		ldr	r3, [r3, #8]
 1639 0344 23F00302 		bic	r2, r3, #3
 1640 0348 7B68     		ldr	r3, [r7, #4]
 1641 034a 5B68     		ldr	r3, [r3, #4]
 1642 034c 6549     		ldr	r1, .L128+4
 1643 034e 1343     		orrs	r3, r3, r2
 1644 0350 8B60     		str	r3, [r1, #8]
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1645              		.loc 1 760 19
 1646 0352 FFF7FEFF 		bl	HAL_GetTick
 1647 0356 F860     		str	r0, [r7, #12]
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1648              		.loc 1 762 27
 1649 0358 7B68     		ldr	r3, [r7, #4]
 1650 035a 5B68     		ldr	r3, [r3, #4]
 1651              		.loc 1 762 9
 1652 035c 012B     		cmp	r3, #1
 1653 035e 12D1     		bne	.L111
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1654              		.loc 1 764 15
 1655 0360 0AE0     		b	.L112
 1656              	.L113:
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1657              		.loc 1 766 15
 1658 0362 FFF7FEFF 		bl	HAL_GetTick
 1659 0366 0246     		mov	r2, r0
 1660              		.loc 1 766 29
 1661 0368 FB68     		ldr	r3, [r7, #12]
 1662 036a D31A     		subs	r3, r2, r3
 1663              		.loc 1 766 13
 1664 036c 41F28832 		movw	r2, #5000
 1665 0370 9342     		cmp	r3, r2
 1666 0372 01D9     		bls	.L112
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1667              		.loc 1 768 20
 1668 0374 0323     		movs	r3, #3
 1669 0376 AFE0     		b	.L81
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 55


 1670              	.L112:
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1671              		.loc 1 764 16
 1672 0378 5A4B     		ldr	r3, .L128+4
 1673 037a 9B68     		ldr	r3, [r3, #8]
 1674 037c 03F00C03 		and	r3, r3, #12
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1675              		.loc 1 764 15
 1676 0380 042B     		cmp	r3, #4
 1677 0382 EED1     		bne	.L113
 1678 0384 3EE0     		b	.L104
 1679              	.L111:
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1680              		.loc 1 772 32
 1681 0386 7B68     		ldr	r3, [r7, #4]
 1682 0388 5B68     		ldr	r3, [r3, #4]
 1683              		.loc 1 772 14
 1684 038a 022B     		cmp	r3, #2
 1685 038c 12D1     		bne	.L114
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1686              		.loc 1 774 15
 1687 038e 0AE0     		b	.L115
 1688              	.L116:
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1689              		.loc 1 776 15
 1690 0390 FFF7FEFF 		bl	HAL_GetTick
 1691 0394 0246     		mov	r2, r0
 1692              		.loc 1 776 29
 1693 0396 FB68     		ldr	r3, [r7, #12]
 1694 0398 D31A     		subs	r3, r2, r3
 1695              		.loc 1 776 13
 1696 039a 41F28832 		movw	r2, #5000
 1697 039e 9342     		cmp	r3, r2
 1698 03a0 01D9     		bls	.L115
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1699              		.loc 1 778 20
 1700 03a2 0323     		movs	r3, #3
 1701 03a4 98E0     		b	.L81
 1702              	.L115:
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1703              		.loc 1 774 16
 1704 03a6 4F4B     		ldr	r3, .L128+4
 1705 03a8 9B68     		ldr	r3, [r3, #8]
 1706 03aa 03F00C03 		and	r3, r3, #12
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1707              		.loc 1 774 15
 1708 03ae 082B     		cmp	r3, #8
 1709 03b0 EED1     		bne	.L116
 1710 03b2 27E0     		b	.L104
 1711              	.L114:
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 56


 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK)
 1712              		.loc 1 782 32
 1713 03b4 7B68     		ldr	r3, [r7, #4]
 1714 03b6 5B68     		ldr	r3, [r3, #4]
 1715              		.loc 1 782 14
 1716 03b8 032B     		cmp	r3, #3
 1717 03ba 1DD1     		bne	.L120
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLRCLK)
 1718              		.loc 1 784 15
 1719 03bc 0AE0     		b	.L118
 1720              	.L119:
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1721              		.loc 1 786 15
 1722 03be FFF7FEFF 		bl	HAL_GetTick
 1723 03c2 0246     		mov	r2, r0
 1724              		.loc 1 786 29
 1725 03c4 FB68     		ldr	r3, [r7, #12]
 1726 03c6 D31A     		subs	r3, r2, r3
 1727              		.loc 1 786 13
 1728 03c8 41F28832 		movw	r2, #5000
 1729 03cc 9342     		cmp	r3, r2
 1730 03ce 01D9     		bls	.L118
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1731              		.loc 1 788 20
 1732 03d0 0323     		movs	r3, #3
 1733 03d2 81E0     		b	.L81
 1734              	.L118:
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1735              		.loc 1 784 16
 1736 03d4 434B     		ldr	r3, .L128+4
 1737 03d6 9B68     		ldr	r3, [r3, #8]
 1738 03d8 03F00C03 		and	r3, r3, #12
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1739              		.loc 1 784 15
 1740 03dc 032B     		cmp	r3, #3
 1741 03de EED1     		bne	.L119
 1742 03e0 10E0     		b	.L104
 1743              	.L121:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           } 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1744              		.loc 1 796 15
 1745 03e2 FFF7FEFF 		bl	HAL_GetTick
 1746 03e6 0246     		mov	r2, r0
 1747              		.loc 1 796 29
 1748 03e8 FB68     		ldr	r3, [r7, #12]
 1749 03ea D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 57


 1750              		.loc 1 796 13
 1751 03ec 41F28832 		movw	r2, #5000
 1752 03f0 9342     		cmp	r3, r2
 1753 03f2 01D9     		bls	.L120
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1754              		.loc 1 798 20
 1755 03f4 0323     		movs	r3, #3
 1756 03f6 6FE0     		b	.L81
 1757              	.L120:
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1758              		.loc 1 794 15
 1759 03f8 3A4B     		ldr	r3, .L128+4
 1760 03fa 9B68     		ldr	r3, [r3, #8]
 1761 03fc 03F00C03 		and	r3, r3, #12
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1762              		.loc 1 794 14
 1763 0400 002B     		cmp	r3, #0
 1764 0402 EED1     		bne	.L121
 1765              	.L104:
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1766              		.loc 1 805 5
 1767 0404 384B     		ldr	r3, .L128+8
 1768 0406 3A68     		ldr	r2, [r7]
 1769 0408 D2B2     		uxtb	r2, r2
 1770 040a 1A70     		strb	r2, [r3]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1771              		.loc 1 809 14
 1772 040c 364B     		ldr	r3, .L128+8
 1773 040e 1B68     		ldr	r3, [r3]
 1774              		.loc 1 809 20
 1775 0410 03F00F03 		and	r3, r3, #15
 1776              		.loc 1 809 7
 1777 0414 3A68     		ldr	r2, [r7]
 1778 0416 9A42     		cmp	r2, r3
 1779 0418 01D0     		beq	.L84
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1780              		.loc 1 811 14
 1781 041a 0123     		movs	r3, #1
 1782 041c 5CE0     		b	.L81
 1783              	.L84:
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  }
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1784              		.loc 1 816 25
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 58


 1785 041e 7B68     		ldr	r3, [r7, #4]
 1786 0420 1B68     		ldr	r3, [r3]
 1787              		.loc 1 816 38
 1788 0422 03F00403 		and	r3, r3, #4
 1789              		.loc 1 816 5
 1790 0426 002B     		cmp	r3, #0
 1791 0428 25D0     		beq	.L122
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 1792              		.loc 1 818 5
 1793 042a 7B68     		ldr	r3, [r7, #4]
 1794 042c DB68     		ldr	r3, [r3, #12]
 1795 042e 002B     		cmp	r3, #0
 1796 0430 18D0     		beq	.L123
 1797              		.loc 1 818 5 is_stmt 0 discriminator 1
 1798 0432 7B68     		ldr	r3, [r7, #4]
 1799 0434 DB68     		ldr	r3, [r3, #12]
 1800 0436 B3F5805F 		cmp	r3, #4096
 1801 043a 13D0     		beq	.L123
 1802              		.loc 1 818 5 discriminator 2
 1803 043c 7B68     		ldr	r3, [r7, #4]
 1804 043e DB68     		ldr	r3, [r3, #12]
 1805 0440 B3F5A05F 		cmp	r3, #5120
 1806 0444 0ED0     		beq	.L123
 1807              		.loc 1 818 5 discriminator 3
 1808 0446 7B68     		ldr	r3, [r7, #4]
 1809 0448 DB68     		ldr	r3, [r3, #12]
 1810 044a B3F5C05F 		cmp	r3, #6144
 1811 044e 09D0     		beq	.L123
 1812              		.loc 1 818 5 discriminator 4
 1813 0450 7B68     		ldr	r3, [r7, #4]
 1814 0452 DB68     		ldr	r3, [r3, #12]
 1815 0454 B3F5E05F 		cmp	r3, #7168
 1816 0458 04D0     		beq	.L123
 1817              		.loc 1 818 5 discriminator 5
 1818 045a 40F23231 		movw	r1, #818
 1819 045e 2048     		ldr	r0, .L128
 1820 0460 FFF7FEFF 		bl	assert_failed
 1821              	.L123:
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1822              		.loc 1 819 5 is_stmt 1
 1823 0464 1F4B     		ldr	r3, .L128+4
 1824 0466 9B68     		ldr	r3, [r3, #8]
 1825 0468 23F4E052 		bic	r2, r3, #7168
 1826 046c 7B68     		ldr	r3, [r7, #4]
 1827 046e DB68     		ldr	r3, [r3, #12]
 1828 0470 1C49     		ldr	r1, .L128+4
 1829 0472 1343     		orrs	r3, r3, r2
 1830 0474 8B60     		str	r3, [r1, #8]
 1831              	.L122:
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1832              		.loc 1 823 25
 1833 0476 7B68     		ldr	r3, [r7, #4]
 1834 0478 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 59


 1835              		.loc 1 823 38
 1836 047a 03F00803 		and	r3, r3, #8
 1837              		.loc 1 823 5
 1838 047e 002B     		cmp	r3, #0
 1839 0480 26D0     		beq	.L124
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 1840              		.loc 1 825 5
 1841 0482 7B68     		ldr	r3, [r7, #4]
 1842 0484 1B69     		ldr	r3, [r3, #16]
 1843 0486 002B     		cmp	r3, #0
 1844 0488 18D0     		beq	.L125
 1845              		.loc 1 825 5 is_stmt 0 discriminator 1
 1846 048a 7B68     		ldr	r3, [r7, #4]
 1847 048c 1B69     		ldr	r3, [r3, #16]
 1848 048e B3F5805F 		cmp	r3, #4096
 1849 0492 13D0     		beq	.L125
 1850              		.loc 1 825 5 discriminator 2
 1851 0494 7B68     		ldr	r3, [r7, #4]
 1852 0496 1B69     		ldr	r3, [r3, #16]
 1853 0498 B3F5A05F 		cmp	r3, #5120
 1854 049c 0ED0     		beq	.L125
 1855              		.loc 1 825 5 discriminator 3
 1856 049e 7B68     		ldr	r3, [r7, #4]
 1857 04a0 1B69     		ldr	r3, [r3, #16]
 1858 04a2 B3F5C05F 		cmp	r3, #6144
 1859 04a6 09D0     		beq	.L125
 1860              		.loc 1 825 5 discriminator 4
 1861 04a8 7B68     		ldr	r3, [r7, #4]
 1862 04aa 1B69     		ldr	r3, [r3, #16]
 1863 04ac B3F5E05F 		cmp	r3, #7168
 1864 04b0 04D0     		beq	.L125
 1865              		.loc 1 825 5 discriminator 5
 1866 04b2 40F23931 		movw	r1, #825
 1867 04b6 0A48     		ldr	r0, .L128
 1868 04b8 FFF7FEFF 		bl	assert_failed
 1869              	.L125:
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 1870              		.loc 1 826 5 is_stmt 1
 1871 04bc 094B     		ldr	r3, .L128+4
 1872 04be 9B68     		ldr	r3, [r3, #8]
 1873 04c0 23F46042 		bic	r2, r3, #57344
 1874 04c4 7B68     		ldr	r3, [r7, #4]
 1875 04c6 1B69     		ldr	r3, [r3, #16]
 1876 04c8 DB00     		lsls	r3, r3, #3
 1877 04ca 0649     		ldr	r1, .L128+4
 1878 04cc 1343     		orrs	r3, r3, r2
 1879 04ce 8B60     		str	r3, [r1, #8]
 1880              	.L124:
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1881              		.loc 1 830 3
 1882 04d0 0020     		movs	r0, #0
 1883 04d2 FFF7FEFF 		bl	HAL_InitTick
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 60


 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1884              		.loc 1 832 10
 1885 04d6 0023     		movs	r3, #0
 1886              	.L81:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1887              		.loc 1 833 1
 1888 04d8 1846     		mov	r0, r3
 1889 04da 1037     		adds	r7, r7, #16
 1890              	.LCFI12:
 1891              		.cfi_def_cfa_offset 8
 1892 04dc BD46     		mov	sp, r7
 1893              	.LCFI13:
 1894              		.cfi_def_cfa_register 13
 1895              		@ sp needed
 1896 04de 80BD     		pop	{r7, pc}
 1897              	.L129:
 1898              		.align	2
 1899              	.L128:
 1900 04e0 00000000 		.word	.LC0
 1901 04e4 00380240 		.word	1073887232
 1902 04e8 003C0240 		.word	1073888256
 1903              		.cfi_endproc
 1904              	.LFE130:
 1906              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1907              		.align	1
 1908              		.global	HAL_RCC_MCOConfig
 1909              		.syntax unified
 1910              		.thumb
 1911              		.thumb_func
 1913              	HAL_RCC_MCOConfig:
 1914              	.LFB131:
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions 
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions 
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim   
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================  
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx: specifies the output direction for the clock source.
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 61


 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv: specifies the MCOx prescaler.
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1915              		.loc 1 884 1
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 48
 1918              		@ frame_needed = 1, uses_anonymous_args = 0
 1919 0000 80B5     		push	{r7, lr}
 1920              	.LCFI14:
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 7, -8
 1923              		.cfi_offset 14, -4
 1924 0002 8CB0     		sub	sp, sp, #48
 1925              	.LCFI15:
 1926              		.cfi_def_cfa_offset 56
 1927 0004 00AF     		add	r7, sp, #0
 1928              	.LCFI16:
 1929              		.cfi_def_cfa_register 7
 1930 0006 F860     		str	r0, [r7, #12]
 1931 0008 B960     		str	r1, [r7, #8]
 1932 000a 7A60     		str	r2, [r7, #4]
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1933              		.loc 1 887 3
 1934 000c FB68     		ldr	r3, [r7, #12]
 1935 000e 002B     		cmp	r3, #0
 1936 0010 07D0     		beq	.L131
 1937              		.loc 1 887 3 is_stmt 0 discriminator 1
 1938 0012 FB68     		ldr	r3, [r7, #12]
 1939 0014 012B     		cmp	r3, #1
 1940 0016 04D0     		beq	.L131
 1941              		.loc 1 887 3 discriminator 2
 1942 0018 40F27731 		movw	r1, #887
 1943 001c 4C48     		ldr	r0, .L138
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 62


 1944 001e FFF7FEFF 		bl	assert_failed
 1945              	.L131:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1946              		.loc 1 888 3 is_stmt 1
 1947 0022 7B68     		ldr	r3, [r7, #4]
 1948 0024 002B     		cmp	r3, #0
 1949 0026 14D0     		beq	.L132
 1950              		.loc 1 888 3 is_stmt 0 discriminator 1
 1951 0028 7B68     		ldr	r3, [r7, #4]
 1952 002a B3F1806F 		cmp	r3, #67108864
 1953 002e 10D0     		beq	.L132
 1954              		.loc 1 888 3 discriminator 2
 1955 0030 7B68     		ldr	r3, [r7, #4]
 1956 0032 B3F1A06F 		cmp	r3, #83886080
 1957 0036 0CD0     		beq	.L132
 1958              		.loc 1 888 3 discriminator 3
 1959 0038 7B68     		ldr	r3, [r7, #4]
 1960 003a B3F1C06F 		cmp	r3, #100663296
 1961 003e 08D0     		beq	.L132
 1962              		.loc 1 888 3 discriminator 4
 1963 0040 7B68     		ldr	r3, [r7, #4]
 1964 0042 B3F1E06F 		cmp	r3, #117440512
 1965 0046 04D0     		beq	.L132
 1966              		.loc 1 888 3 discriminator 5
 1967 0048 4FF45E71 		mov	r1, #888
 1968 004c 4048     		ldr	r0, .L138
 1969 004e FFF7FEFF 		bl	assert_failed
 1970              	.L132:
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1971              		.loc 1 890 5 is_stmt 1
 1972 0052 FB68     		ldr	r3, [r7, #12]
 1973 0054 002B     		cmp	r3, #0
 1974 0056 3BD1     		bne	.L133
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1975              		.loc 1 892 5
 1976 0058 BB68     		ldr	r3, [r7, #8]
 1977 005a 002B     		cmp	r3, #0
 1978 005c 10D0     		beq	.L134
 1979              		.loc 1 892 5 is_stmt 0 discriminator 1
 1980 005e BB68     		ldr	r3, [r7, #8]
 1981 0060 B3F5001F 		cmp	r3, #2097152
 1982 0064 0CD0     		beq	.L134
 1983              		.loc 1 892 5 discriminator 2
 1984 0066 BB68     		ldr	r3, [r7, #8]
 1985 0068 B3F5800F 		cmp	r3, #4194304
 1986 006c 08D0     		beq	.L134
 1987              		.loc 1 892 5 discriminator 3
 1988 006e BB68     		ldr	r3, [r7, #8]
 1989 0070 B3F5C00F 		cmp	r3, #6291456
 1990 0074 04D0     		beq	.L134
 1991              		.loc 1 892 5 discriminator 4
 1992 0076 4FF45F71 		mov	r1, #892
 1993 007a 3548     		ldr	r0, .L138
 1994 007c FFF7FEFF 		bl	assert_failed
 1995              	.L134:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 63


 1996              	.LBB44:
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1997              		.loc 1 895 5 is_stmt 1
 1998 0080 344B     		ldr	r3, .L138+4
 1999 0082 1B6B     		ldr	r3, [r3, #48]
 2000 0084 334A     		ldr	r2, .L138+4
 2001 0086 43F00103 		orr	r3, r3, #1
 2002 008a 1363     		str	r3, [r2, #48]
 2003 008c 314B     		ldr	r3, .L138+4
 2004 008e 1B6B     		ldr	r3, [r3, #48]
 2005 0090 03F00103 		and	r3, r3, #1
 2006 0094 BB61     		str	r3, [r7, #24]
 2007 0096 BB69     		ldr	r3, [r7, #24]
 2008              	.LBE44:
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */    
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 2009              		.loc 1 898 25
 2010 0098 4FF48073 		mov	r3, #256
 2011 009c FB61     		str	r3, [r7, #28]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2012              		.loc 1 899 26
 2013 009e 0223     		movs	r3, #2
 2014 00a0 3B62     		str	r3, [r7, #32]
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 2015              		.loc 1 900 27
 2016 00a2 0323     		movs	r3, #3
 2017 00a4 BB62     		str	r3, [r7, #40]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 2018              		.loc 1 901 26
 2019 00a6 0023     		movs	r3, #0
 2020 00a8 7B62     		str	r3, [r7, #36]
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2021              		.loc 1 902 31
 2022 00aa 0023     		movs	r3, #0
 2023 00ac FB62     		str	r3, [r7, #44]
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 2024              		.loc 1 903 5
 2025 00ae 07F11C03 		add	r3, r7, #28
 2026 00b2 1946     		mov	r1, r3
 2027 00b4 2848     		ldr	r0, .L138+8
 2028 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 2029              		.loc 1 906 5
 2030 00ba 264B     		ldr	r3, .L138+4
 2031 00bc 9B68     		ldr	r3, [r3, #8]
 2032 00be 23F0EC62 		bic	r2, r3, #123731968
 2033 00c2 B968     		ldr	r1, [r7, #8]
 2034 00c4 7B68     		ldr	r3, [r7, #4]
 2035 00c6 0B43     		orrs	r3, r3, r1
 2036 00c8 2249     		ldr	r1, .L138+4
 2037 00ca 1343     		orrs	r3, r3, r2
 2038 00cc 8B60     		str	r3, [r1, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 64


 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */    
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3)));
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2039              		.loc 1 936 1
 2040 00ce 3BE0     		b	.L137
 2041              	.L133:
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2042              		.loc 1 915 5
 2043 00d0 BB68     		ldr	r3, [r7, #8]
 2044 00d2 002B     		cmp	r3, #0
 2045 00d4 10D0     		beq	.L136
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2046              		.loc 1 915 5 is_stmt 0 discriminator 1
 2047 00d6 BB68     		ldr	r3, [r7, #8]
 2048 00d8 B3F1804F 		cmp	r3, #1073741824
 2049 00dc 0CD0     		beq	.L136
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2050              		.loc 1 915 5 discriminator 2
 2051 00de BB68     		ldr	r3, [r7, #8]
 2052 00e0 B3F1004F 		cmp	r3, #-2147483648
 2053 00e4 08D0     		beq	.L136
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2054              		.loc 1 915 5 discriminator 3
 2055 00e6 BB68     		ldr	r3, [r7, #8]
 2056 00e8 B3F1404F 		cmp	r3, #-1073741824
 2057 00ec 04D0     		beq	.L136
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2058              		.loc 1 915 5 discriminator 4
 2059 00ee 40F29331 		movw	r1, #915
 2060 00f2 1748     		ldr	r0, .L138
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 65


 2061 00f4 FFF7FEFF 		bl	assert_failed
 2062              	.L136:
 2063              	.LBB45:
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2064              		.loc 1 918 5 is_stmt 1
 2065 00f8 164B     		ldr	r3, .L138+4
 2066 00fa 1B6B     		ldr	r3, [r3, #48]
 2067 00fc 154A     		ldr	r2, .L138+4
 2068 00fe 43F00403 		orr	r3, r3, #4
 2069 0102 1363     		str	r3, [r2, #48]
 2070 0104 134B     		ldr	r3, .L138+4
 2071 0106 1B6B     		ldr	r3, [r3, #48]
 2072 0108 03F00403 		and	r3, r3, #4
 2073 010c 7B61     		str	r3, [r7, #20]
 2074 010e 7B69     		ldr	r3, [r7, #20]
 2075              	.LBE45:
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2076              		.loc 1 921 25
 2077 0110 4FF40073 		mov	r3, #512
 2078 0114 FB61     		str	r3, [r7, #28]
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
 2079              		.loc 1 922 26
 2080 0116 0223     		movs	r3, #2
 2081 0118 3B62     		str	r3, [r7, #32]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 2082              		.loc 1 923 27
 2083 011a 0323     		movs	r3, #3
 2084 011c BB62     		str	r3, [r7, #40]
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2085              		.loc 1 924 26
 2086 011e 0023     		movs	r3, #0
 2087 0120 7B62     		str	r3, [r7, #36]
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 2088              		.loc 1 925 31
 2089 0122 0023     		movs	r3, #0
 2090 0124 FB62     		str	r3, [r7, #44]
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     
 2091              		.loc 1 926 5
 2092 0126 07F11C03 		add	r3, r7, #28
 2093 012a 1946     		mov	r1, r3
 2094 012c 0B48     		ldr	r0, .L138+12
 2095 012e FFF7FEFF 		bl	HAL_GPIO_Init
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 2096              		.loc 1 929 5
 2097 0132 084B     		ldr	r3, .L138+4
 2098 0134 9B68     		ldr	r3, [r3, #8]
 2099 0136 23F07842 		bic	r2, r3, #-134217728
 2100 013a 7B68     		ldr	r3, [r7, #4]
 2101 013c D900     		lsls	r1, r3, #3
 2102 013e BB68     		ldr	r3, [r7, #8]
 2103 0140 0B43     		orrs	r3, r3, r1
 2104 0142 0449     		ldr	r1, .L138+4
 2105 0144 1343     		orrs	r3, r3, r2
 2106 0146 8B60     		str	r3, [r1, #8]
 2107              	.L137:
 2108              		.loc 1 936 1
 2109 0148 00BF     		nop
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 66


 2110 014a 3037     		adds	r7, r7, #48
 2111              	.LCFI17:
 2112              		.cfi_def_cfa_offset 8
 2113 014c BD46     		mov	sp, r7
 2114              	.LCFI18:
 2115              		.cfi_def_cfa_register 13
 2116              		@ sp needed
 2117 014e 80BD     		pop	{r7, pc}
 2118              	.L139:
 2119              		.align	2
 2120              	.L138:
 2121 0150 00000000 		.word	.LC0
 2122 0154 00380240 		.word	1073887232
 2123 0158 00000240 		.word	1073872896
 2124 015c 00080240 		.word	1073874944
 2125              		.cfi_endproc
 2126              	.LFE131:
 2128              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2129              		.align	1
 2130              		.global	HAL_RCC_EnableCSS
 2131              		.syntax unified
 2132              		.thumb
 2133              		.thumb_func
 2135              	HAL_RCC_EnableCSS:
 2136              	.LFB132:
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2137              		.loc 1 948 1
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141              		@ link register save eliminated.
 2142 0000 80B4     		push	{r7}
 2143              	.LCFI19:
 2144              		.cfi_def_cfa_offset 4
 2145              		.cfi_offset 7, -4
 2146 0002 00AF     		add	r7, sp, #0
 2147              	.LCFI20:
 2148              		.cfi_def_cfa_register 7
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 2149              		.loc 1 949 3
 2150 0004 034B     		ldr	r3, .L141
 2151              		.loc 1 949 38
 2152 0006 0122     		movs	r2, #1
 2153 0008 1A60     		str	r2, [r3]
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2154              		.loc 1 950 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 67


 2155 000a 00BF     		nop
 2156 000c BD46     		mov	sp, r7
 2157              	.LCFI21:
 2158              		.cfi_def_cfa_register 13
 2159              		@ sp needed
 2160 000e 5DF8047B 		ldr	r7, [sp], #4
 2161              	.LCFI22:
 2162              		.cfi_restore 7
 2163              		.cfi_def_cfa_offset 0
 2164 0012 7047     		bx	lr
 2165              	.L142:
 2166              		.align	2
 2167              	.L141:
 2168 0014 4C004742 		.word	1111949388
 2169              		.cfi_endproc
 2170              	.LFE132:
 2172              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 2173              		.align	1
 2174              		.global	HAL_RCC_DisableCSS
 2175              		.syntax unified
 2176              		.thumb
 2177              		.thumb_func
 2179              	HAL_RCC_DisableCSS:
 2180              	.LFB133:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2181              		.loc 1 957 1
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 0
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185              		@ link register save eliminated.
 2186 0000 80B4     		push	{r7}
 2187              	.LCFI23:
 2188              		.cfi_def_cfa_offset 4
 2189              		.cfi_offset 7, -4
 2190 0002 00AF     		add	r7, sp, #0
 2191              	.LCFI24:
 2192              		.cfi_def_cfa_register 7
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 2193              		.loc 1 958 3
 2194 0004 034B     		ldr	r3, .L144
 2195              		.loc 1 958 38
 2196 0006 0022     		movs	r2, #0
 2197 0008 1A60     		str	r2, [r3]
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2198              		.loc 1 959 1
 2199 000a 00BF     		nop
 2200 000c BD46     		mov	sp, r7
 2201              	.LCFI25:
 2202              		.cfi_def_cfa_register 13
 2203              		@ sp needed
 2204 000e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 68


 2205              	.LCFI26:
 2206              		.cfi_restore 7
 2207              		.cfi_def_cfa_offset 0
 2208 0012 7047     		bx	lr
 2209              	.L145:
 2210              		.align	2
 2211              	.L144:
 2212 0014 4C004742 		.word	1111949388
 2213              		.cfi_endproc
 2214              	.LFE133:
 2216              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 2217              		.align	1
 2218              		.weak	HAL_RCC_GetSysClockFreq
 2219              		.syntax unified
 2220              		.thumb
 2221              		.thumb_func
 2223              	HAL_RCC_GetSysClockFreq:
 2224              	.LFB134:
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) 
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                  
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2225              		.loc 1 992 1
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 40
 2228              		@ frame_needed = 1, uses_anonymous_args = 0
 2229              		@ link register save eliminated.
 2230 0000 80B4     		push	{r7}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 69


 2231              	.LCFI27:
 2232              		.cfi_def_cfa_offset 4
 2233              		.cfi_offset 7, -4
 2234 0002 8BB0     		sub	sp, sp, #44
 2235              	.LCFI28:
 2236              		.cfi_def_cfa_offset 48
 2237 0004 00AF     		add	r7, sp, #0
 2238              	.LCFI29:
 2239              		.cfi_def_cfa_register 7
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0, pllvco = 0, pllp = 0;
 2240              		.loc 1 993 12
 2241 0006 0023     		movs	r3, #0
 2242 0008 FB61     		str	r3, [r7, #28]
 2243              		.loc 1 993 22
 2244 000a 0023     		movs	r3, #0
 2245 000c 7B62     		str	r3, [r7, #36]
 2246              		.loc 1 993 34
 2247 000e 0023     		movs	r3, #0
 2248 0010 BB61     		str	r3, [r7, #24]
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
 2249              		.loc 1 994 12
 2250 0012 0023     		movs	r3, #0
 2251 0014 3B62     		str	r3, [r7, #32]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 2252              		.loc 1 997 14
 2253 0016 384B     		ldr	r3, .L158
 2254 0018 9B68     		ldr	r3, [r3, #8]
 2255              		.loc 1 997 21
 2256 001a 03F00C03 		and	r3, r3, #12
 2257              		.loc 1 997 3
 2258 001e 082B     		cmp	r3, #8
 2259 0020 0CD0     		beq	.L147
 2260 0022 082B     		cmp	r3, #8
 2261 0024 5DD8     		bhi	.L148
 2262 0026 002B     		cmp	r3, #0
 2263 0028 02D0     		beq	.L149
 2264 002a 042B     		cmp	r3, #4
 2265 002c 03D0     		beq	.L150
 2266 002e 58E0     		b	.L148
 2267              	.L149:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 2268              		.loc 1 1001 20
 2269 0030 324B     		ldr	r3, .L158+4
 2270 0032 3B62     		str	r3, [r7, #32]
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 2271              		.loc 1 1002 8
 2272 0034 58E0     		b	.L151
 2273              	.L150:
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 70


 2274              		.loc 1 1006 20
 2275 0036 324B     		ldr	r3, .L158+8
 2276 0038 3B62     		str	r3, [r7, #32]
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2277              		.loc 1 1007 7
 2278 003a 55E0     		b	.L151
 2279              	.L147:
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 2280              		.loc 1 1013 17
 2281 003c 2E4B     		ldr	r3, .L158
 2282 003e 5B68     		ldr	r3, [r3, #4]
 2283              		.loc 1 1013 12
 2284 0040 03F03F03 		and	r3, r3, #63
 2285 0044 FB61     		str	r3, [r7, #28]
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 2286              		.loc 1 1014 10
 2287 0046 2C4B     		ldr	r3, .L158
 2288 0048 5B68     		ldr	r3, [r3, #4]
 2289 004a 03F48003 		and	r3, r3, #4194304
 2290              		.loc 1 1014 9
 2291 004e 002B     		cmp	r3, #0
 2292 0050 17D0     		beq	.L152
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = ((HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCF
 2293              		.loc 1 1017 30
 2294 0052 2B4A     		ldr	r2, .L158+8
 2295 0054 FB69     		ldr	r3, [r7, #28]
 2296 0056 B2FBF3F2 		udiv	r2, r2, r3
 2297              		.loc 1 1017 45
 2298 005a 274B     		ldr	r3, .L158
 2299 005c 5968     		ldr	r1, [r3, #4]
 2300              		.loc 1 1017 55
 2301 005e 47F6C073 		movw	r3, #32704
 2302 0062 0B40     		ands	r3, r3, r1
 2303 0064 47F6C071 		movw	r1, #32704
 2304 0068 7961     		str	r1, [r7, #20]
 2305              	.LBB46:
 2306              	.LBB47:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2307              		.loc 2 581 4
 2308 006a 7969     		ldr	r1, [r7, #20]
 2309              		.syntax unified
 2310              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2311 006c 91FAA1F1 		rbit r1, r1
 2312              	@ 0 "" 2
 2313              		.thumb
 2314              		.syntax unified
 2315 0070 3961     		str	r1, [r7, #16]
 2316              		.loc 2 594 9
 2317 0072 3969     		ldr	r1, [r7, #16]
 2318              	.LBE47:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 71


 2319              	.LBE46:
 2320              		.loc 1 1017 78
 2321 0074 B1FA81F1 		clz	r1, r1
 2322              		.loc 1 1017 75
 2323 0078 CB40     		lsrs	r3, r3, r1
 2324              		.loc 1 1017 16
 2325 007a 02FB03F3 		mul	r3, r2, r3
 2326 007e 7B62     		str	r3, [r7, #36]
 2327 0080 16E0     		b	.L154
 2328              	.L152:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCF
 2329              		.loc 1 1022 30
 2330 0082 1E4A     		ldr	r2, .L158+4
 2331 0084 FB69     		ldr	r3, [r7, #28]
 2332 0086 B2FBF3F2 		udiv	r2, r2, r3
 2333              		.loc 1 1022 45
 2334 008a 1B4B     		ldr	r3, .L158
 2335 008c 5968     		ldr	r1, [r3, #4]
 2336              		.loc 1 1022 55
 2337 008e 47F6C073 		movw	r3, #32704
 2338 0092 0B40     		ands	r3, r3, r1
 2339 0094 47F6C071 		movw	r1, #32704
 2340 0098 F960     		str	r1, [r7, #12]
 2341              	.LBB48:
 2342              	.LBB49:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2343              		.loc 2 581 4
 2344 009a F968     		ldr	r1, [r7, #12]
 2345              		.syntax unified
 2346              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2347 009c 91FAA1F1 		rbit r1, r1
 2348              	@ 0 "" 2
 2349              		.thumb
 2350              		.syntax unified
 2351 00a0 B960     		str	r1, [r7, #8]
 2352              		.loc 2 594 9
 2353 00a2 B968     		ldr	r1, [r7, #8]
 2354              	.LBE49:
 2355              	.LBE48:
 2356              		.loc 1 1022 78
 2357 00a4 B1FA81F1 		clz	r1, r1
 2358              		.loc 1 1022 75
 2359 00a8 CB40     		lsrs	r3, r3, r1
 2360              		.loc 1 1022 16
 2361 00aa 02FB03F3 		mul	r3, r2, r3
 2362 00ae 7B62     		str	r3, [r7, #36]
 2363              	.L154:
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> POSITION_VAL(RCC_PLLCFGR_PLLP)) + 1 ) *2);
 2364              		.loc 1 1024 21
 2365 00b0 114B     		ldr	r3, .L158
 2366 00b2 5B68     		ldr	r3, [r3, #4]
 2367              		.loc 1 1024 31
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 72


 2368 00b4 03F44032 		and	r2, r3, #196608
 2369 00b8 4FF44033 		mov	r3, #196608
 2370 00bc 7B60     		str	r3, [r7, #4]
 2371              	.LBB50:
 2372              	.LBB51:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2373              		.loc 2 581 4
 2374 00be 7B68     		ldr	r3, [r7, #4]
 2375              		.syntax unified
 2376              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2377 00c0 93FAA3F3 		rbit r3, r3
 2378              	@ 0 "" 2
 2379              		.thumb
 2380              		.syntax unified
 2381 00c4 3B60     		str	r3, [r7]
 2382              		.loc 2 594 9
 2383 00c6 3B68     		ldr	r3, [r7]
 2384              	.LBE51:
 2385              	.LBE50:
 2386              		.loc 1 1024 54
 2387 00c8 B3FA83F3 		clz	r3, r3
 2388              		.loc 1 1024 51
 2389 00cc 22FA03F3 		lsr	r3, r2, r3
 2390              		.loc 1 1024 86
 2391 00d0 0133     		adds	r3, r3, #1
 2392              		.loc 1 1024 12
 2393 00d2 5B00     		lsls	r3, r3, #1
 2394 00d4 BB61     		str	r3, [r7, #24]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 2395              		.loc 1 1026 20
 2396 00d6 7A6A     		ldr	r2, [r7, #36]
 2397 00d8 BB69     		ldr	r3, [r7, #24]
 2398 00da B2FBF3F3 		udiv	r3, r2, r3
 2399 00de 3B62     		str	r3, [r7, #32]
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2400              		.loc 1 1027 7
 2401 00e0 02E0     		b	.L151
 2402              	.L148:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 2403              		.loc 1 1031 20
 2404 00e2 064B     		ldr	r3, .L158+4
 2405 00e4 3B62     		str	r3, [r7, #32]
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2406              		.loc 1 1032 7
 2407 00e6 00BF     		nop
 2408              	.L151:
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 2409              		.loc 1 1035 10
 2410 00e8 3B6A     		ldr	r3, [r7, #32]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2411              		.loc 1 1036 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 73


 2412 00ea 1846     		mov	r0, r3
 2413 00ec 2C37     		adds	r7, r7, #44
 2414              	.LCFI30:
 2415              		.cfi_def_cfa_offset 4
 2416 00ee BD46     		mov	sp, r7
 2417              	.LCFI31:
 2418              		.cfi_def_cfa_register 13
 2419              		@ sp needed
 2420 00f0 5DF8047B 		ldr	r7, [sp], #4
 2421              	.LCFI32:
 2422              		.cfi_restore 7
 2423              		.cfi_def_cfa_offset 0
 2424 00f4 7047     		bx	lr
 2425              	.L159:
 2426 00f6 00BF     		.align	2
 2427              	.L158:
 2428 00f8 00380240 		.word	1073887232
 2429 00fc 0024F400 		.word	16000000
 2430 0100 00127A00 		.word	8000000
 2431              		.cfi_endproc
 2432              	.LFE134:
 2434              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2435              		.align	1
 2436              		.global	HAL_RCC_GetHCLKFreq
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2441              	HAL_RCC_GetHCLKFreq:
 2442              	.LFB135:
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2443              		.loc 1 1048 1
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 8
 2446              		@ frame_needed = 1, uses_anonymous_args = 0
 2447 0000 80B5     		push	{r7, lr}
 2448              	.LCFI33:
 2449              		.cfi_def_cfa_offset 8
 2450              		.cfi_offset 7, -8
 2451              		.cfi_offset 14, -4
 2452 0002 82B0     		sub	sp, sp, #8
 2453              	.LCFI34:
 2454              		.cfi_def_cfa_offset 16
 2455 0004 00AF     		add	r7, sp, #0
 2456              	.LCFI35:
 2457              		.cfi_def_cfa_register 7
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POS
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 74


 2458              		.loc 1 1049 21
 2459 0006 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2460 000a 0146     		mov	r1, r0
 2461              		.loc 1 1049 71
 2462 000c 0D4B     		ldr	r3, .L163
 2463 000e 9B68     		ldr	r3, [r3, #8]
 2464              		.loc 1 1049 78
 2465 0010 03F0F002 		and	r2, r3, #240
 2466 0014 F023     		movs	r3, #240
 2467 0016 7B60     		str	r3, [r7, #4]
 2468              	.LBB52:
 2469              	.LBB53:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2470              		.loc 2 581 4
 2471 0018 7B68     		ldr	r3, [r7, #4]
 2472              		.syntax unified
 2473              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2474 001a 93FAA3F3 		rbit r3, r3
 2475              	@ 0 "" 2
 2476              		.thumb
 2477              		.syntax unified
 2478 001e 3B60     		str	r3, [r7]
 2479              		.loc 2 594 9
 2480 0020 3B68     		ldr	r3, [r7]
 2481              	.LBE53:
 2482              	.LBE52:
 2483              		.loc 1 1049 97
 2484 0022 B3FA83F3 		clz	r3, r3
 2485              		.loc 1 1049 94
 2486 0026 22FA03F3 		lsr	r3, r2, r3
 2487              		.loc 1 1049 66
 2488 002a 074A     		ldr	r2, .L163+4
 2489 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2490              		.loc 1 1049 47
 2491 002e 21FA03F3 		lsr	r3, r1, r3
 2492              		.loc 1 1049 19
 2493 0032 064A     		ldr	r2, .L163+8
 2494 0034 1360     		str	r3, [r2]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 2495              		.loc 1 1050 10
 2496 0036 054B     		ldr	r3, .L163+8
 2497 0038 1B68     		ldr	r3, [r3]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2498              		.loc 1 1051 1
 2499 003a 1846     		mov	r0, r3
 2500 003c 0837     		adds	r7, r7, #8
 2501              	.LCFI36:
 2502              		.cfi_def_cfa_offset 8
 2503 003e BD46     		mov	sp, r7
 2504              	.LCFI37:
 2505              		.cfi_def_cfa_register 13
 2506              		@ sp needed
 2507 0040 80BD     		pop	{r7, pc}
 2508              	.L164:
 2509 0042 00BF     		.align	2
 2510              	.L163:
 2511 0044 00380240 		.word	1073887232
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 75


 2512 0048 00000000 		.word	APBAHBPrescTable
 2513 004c 00000000 		.word	SystemCoreClock
 2514              		.cfi_endproc
 2515              	.LFE135:
 2517              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2518              		.align	1
 2519              		.global	HAL_RCC_GetPCLK1Freq
 2520              		.syntax unified
 2521              		.thumb
 2522              		.thumb_func
 2524              	HAL_RCC_GetPCLK1Freq:
 2525              	.LFB136:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {  
 2526              		.loc 1 1060 1
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 8
 2529              		@ frame_needed = 1, uses_anonymous_args = 0
 2530 0000 80B5     		push	{r7, lr}
 2531              	.LCFI38:
 2532              		.cfi_def_cfa_offset 8
 2533              		.cfi_offset 7, -8
 2534              		.cfi_offset 14, -4
 2535 0002 82B0     		sub	sp, sp, #8
 2536              	.LCFI39:
 2537              		.cfi_def_cfa_offset 16
 2538 0004 00AF     		add	r7, sp, #0
 2539              	.LCFI40:
 2540              		.cfi_def_cfa_register 7
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC
 2541              		.loc 1 1062 11
 2542 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2543 000a 0146     		mov	r1, r0
 2544              		.loc 1 1062 57
 2545 000c 0B4B     		ldr	r3, .L168
 2546 000e 9B68     		ldr	r3, [r3, #8]
 2547              		.loc 1 1062 64
 2548 0010 03F4E052 		and	r2, r3, #7168
 2549 0014 4FF4E053 		mov	r3, #7168
 2550 0018 7B60     		str	r3, [r7, #4]
 2551              	.LBB54:
 2552              	.LBB55:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2553              		.loc 2 581 4
 2554 001a 7B68     		ldr	r3, [r7, #4]
 2555              		.syntax unified
 2556              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2557 001c 93FAA3F3 		rbit r3, r3
 2558              	@ 0 "" 2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 76


 2559              		.thumb
 2560              		.syntax unified
 2561 0020 3B60     		str	r3, [r7]
 2562              		.loc 2 594 9
 2563 0022 3B68     		ldr	r3, [r7]
 2564              	.LBE55:
 2565              	.LBE54:
 2566              		.loc 1 1062 84
 2567 0024 B3FA83F3 		clz	r3, r3
 2568              		.loc 1 1062 81
 2569 0028 22FA03F3 		lsr	r3, r2, r3
 2570              		.loc 1 1062 52
 2571 002c 044A     		ldr	r2, .L168+4
 2572 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2573              		.loc 1 1062 33
 2574 0030 21FA03F3 		lsr	r3, r1, r3
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2575              		.loc 1 1063 1
 2576 0034 1846     		mov	r0, r3
 2577 0036 0837     		adds	r7, r7, #8
 2578              	.LCFI41:
 2579              		.cfi_def_cfa_offset 8
 2580 0038 BD46     		mov	sp, r7
 2581              	.LCFI42:
 2582              		.cfi_def_cfa_register 13
 2583              		@ sp needed
 2584 003a 80BD     		pop	{r7, pc}
 2585              	.L169:
 2586              		.align	2
 2587              	.L168:
 2588 003c 00380240 		.word	1073887232
 2589 0040 00000000 		.word	APBAHBPrescTable
 2590              		.cfi_endproc
 2591              	.LFE136:
 2593              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2594              		.align	1
 2595              		.global	HAL_RCC_GetPCLK2Freq
 2596              		.syntax unified
 2597              		.thumb
 2598              		.thumb_func
 2600              	HAL_RCC_GetPCLK2Freq:
 2601              	.LFB137:
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2602              		.loc 1 1072 1
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 8
 2605              		@ frame_needed = 1, uses_anonymous_args = 0
 2606 0000 80B5     		push	{r7, lr}
 2607              	.LCFI43:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 77


 2608              		.cfi_def_cfa_offset 8
 2609              		.cfi_offset 7, -8
 2610              		.cfi_offset 14, -4
 2611 0002 82B0     		sub	sp, sp, #8
 2612              	.LCFI44:
 2613              		.cfi_def_cfa_offset 16
 2614 0004 00AF     		add	r7, sp, #0
 2615              	.LCFI45:
 2616              		.cfi_def_cfa_register 7
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_
 2617              		.loc 1 1074 11
 2618 0006 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2619 000a 0146     		mov	r1, r0
 2620              		.loc 1 1074 56
 2621 000c 0B4B     		ldr	r3, .L173
 2622 000e 9B68     		ldr	r3, [r3, #8]
 2623              		.loc 1 1074 63
 2624 0010 03F46042 		and	r2, r3, #57344
 2625 0014 4FF46043 		mov	r3, #57344
 2626 0018 7B60     		str	r3, [r7, #4]
 2627              	.LBB56:
 2628              	.LBB57:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2629              		.loc 2 581 4
 2630 001a 7B68     		ldr	r3, [r7, #4]
 2631              		.syntax unified
 2632              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2633 001c 93FAA3F3 		rbit r3, r3
 2634              	@ 0 "" 2
 2635              		.thumb
 2636              		.syntax unified
 2637 0020 3B60     		str	r3, [r7]
 2638              		.loc 2 594 9
 2639 0022 3B68     		ldr	r3, [r7]
 2640              	.LBE57:
 2641              	.LBE56:
 2642              		.loc 1 1074 83
 2643 0024 B3FA83F3 		clz	r3, r3
 2644              		.loc 1 1074 80
 2645 0028 22FA03F3 		lsr	r3, r2, r3
 2646              		.loc 1 1074 51
 2647 002c 044A     		ldr	r2, .L173+4
 2648 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2649              		.loc 1 1074 32
 2650 0030 21FA03F3 		lsr	r3, r1, r3
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** } 
 2651              		.loc 1 1075 1
 2652 0034 1846     		mov	r0, r3
 2653 0036 0837     		adds	r7, r7, #8
 2654              	.LCFI46:
 2655              		.cfi_def_cfa_offset 8
 2656 0038 BD46     		mov	sp, r7
 2657              	.LCFI47:
 2658              		.cfi_def_cfa_register 13
 2659              		@ sp needed
 2660 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 78


 2661              	.L174:
 2662              		.align	2
 2663              	.L173:
 2664 003c 00380240 		.word	1073887232
 2665 0040 00000000 		.word	APBAHBPrescTable
 2666              		.cfi_endproc
 2667              	.LFE137:
 2669              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2670              		.align	1
 2671              		.weak	HAL_RCC_GetOscConfig
 2672              		.syntax unified
 2673              		.thumb
 2674              		.thumb_func
 2676              	HAL_RCC_GetOscConfig:
 2677              	.LFB138:
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2678              		.loc 1 1085 1
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 40
 2681              		@ frame_needed = 1, uses_anonymous_args = 0
 2682              		@ link register save eliminated.
 2683 0000 80B4     		push	{r7}
 2684              	.LCFI48:
 2685              		.cfi_def_cfa_offset 4
 2686              		.cfi_offset 7, -4
 2687 0002 8BB0     		sub	sp, sp, #44
 2688              	.LCFI49:
 2689              		.cfi_def_cfa_offset 48
 2690 0004 00AF     		add	r7, sp, #0
 2691              	.LCFI50:
 2692              		.cfi_def_cfa_register 7
 2693 0006 7860     		str	r0, [r7, #4]
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2694              		.loc 1 1087 37
 2695 0008 7B68     		ldr	r3, [r7, #4]
 2696 000a 0F22     		movs	r2, #15
 2697 000c 1A60     		str	r2, [r3]
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2698              		.loc 1 1090 10
 2699 000e 594B     		ldr	r3, .L192
 2700 0010 1B68     		ldr	r3, [r3]
 2701              		.loc 1 1090 15
 2702 0012 03F48023 		and	r3, r3, #262144
 2703              		.loc 1 1090 5
 2704 0016 B3F5802F 		cmp	r3, #262144
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 79


 2705 001a 03D1     		bne	.L176
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2706              		.loc 1 1092 33
 2707 001c 7B68     		ldr	r3, [r7, #4]
 2708 001e 0522     		movs	r2, #5
 2709 0020 5A60     		str	r2, [r3, #4]
 2710 0022 0DE0     		b	.L177
 2711              	.L176:
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2712              		.loc 1 1094 15
 2713 0024 534B     		ldr	r3, .L192
 2714 0026 1B68     		ldr	r3, [r3]
 2715              		.loc 1 1094 20
 2716 0028 03F48033 		and	r3, r3, #65536
 2717              		.loc 1 1094 10
 2718 002c B3F5803F 		cmp	r3, #65536
 2719 0030 03D1     		bne	.L178
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2720              		.loc 1 1096 33
 2721 0032 7B68     		ldr	r3, [r7, #4]
 2722 0034 0122     		movs	r2, #1
 2723 0036 5A60     		str	r2, [r3, #4]
 2724 0038 02E0     		b	.L177
 2725              	.L178:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2726              		.loc 1 1100 33
 2727 003a 7B68     		ldr	r3, [r7, #4]
 2728 003c 0022     		movs	r2, #0
 2729 003e 5A60     		str	r2, [r3, #4]
 2730              	.L177:
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2731              		.loc 1 1104 10
 2732 0040 4C4B     		ldr	r3, .L192
 2733 0042 1B68     		ldr	r3, [r3]
 2734              		.loc 1 1104 15
 2735 0044 03F00103 		and	r3, r3, #1
 2736              		.loc 1 1104 5
 2737 0048 012B     		cmp	r3, #1
 2738 004a 03D1     		bne	.L179
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2739              		.loc 1 1106 33
 2740 004c 7B68     		ldr	r3, [r7, #4]
 2741 004e 0122     		movs	r2, #1
 2742 0050 DA60     		str	r2, [r3, #12]
 2743 0052 02E0     		b	.L180
 2744              	.L179:
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 80


1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2745              		.loc 1 1110 33
 2746 0054 7B68     		ldr	r3, [r7, #4]
 2747 0056 0022     		movs	r2, #0
 2748 0058 DA60     		str	r2, [r3, #12]
 2749              	.L180:
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> POSITION_VAL(RCC
 2750              		.loc 1 1113 59
 2751 005a 464B     		ldr	r3, .L192
 2752 005c 1B68     		ldr	r3, [r3]
 2753              		.loc 1 1113 64
 2754 005e 03F0F802 		and	r2, r3, #248
 2755 0062 F823     		movs	r3, #248
 2756 0064 7B62     		str	r3, [r7, #36]
 2757              	.LBB58:
 2758              	.LBB59:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2759              		.loc 2 581 4
 2760 0066 7B6A     		ldr	r3, [r7, #36]
 2761              		.syntax unified
 2762              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2763 0068 93FAA3F3 		rbit r3, r3
 2764              	@ 0 "" 2
 2765              		.thumb
 2766              		.syntax unified
 2767 006c 3B62     		str	r3, [r7, #32]
 2768              		.loc 2 594 9
 2769 006e 3B6A     		ldr	r3, [r7, #32]
 2770              	.LBE59:
 2771              	.LBE58:
 2772              		.loc 1 1113 84
 2773 0070 B3FA83F3 		clz	r3, r3
 2774              		.loc 1 1113 44
 2775 0074 DA40     		lsrs	r2, r2, r3
 2776              		.loc 1 1113 42
 2777 0076 7B68     		ldr	r3, [r7, #4]
 2778 0078 1A61     		str	r2, [r3, #16]
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2779              		.loc 1 1116 10
 2780 007a 3E4B     		ldr	r3, .L192
 2781 007c 1B6F     		ldr	r3, [r3, #112]
 2782              		.loc 1 1116 17
 2783 007e 03F00403 		and	r3, r3, #4
 2784              		.loc 1 1116 5
 2785 0082 042B     		cmp	r3, #4
 2786 0084 03D1     		bne	.L182
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2787              		.loc 1 1118 33
 2788 0086 7B68     		ldr	r3, [r7, #4]
 2789 0088 0522     		movs	r2, #5
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 81


 2790 008a 9A60     		str	r2, [r3, #8]
 2791 008c 0CE0     		b	.L183
 2792              	.L182:
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2793              		.loc 1 1120 15
 2794 008e 394B     		ldr	r3, .L192
 2795 0090 1B6F     		ldr	r3, [r3, #112]
 2796              		.loc 1 1120 22
 2797 0092 03F00103 		and	r3, r3, #1
 2798              		.loc 1 1120 10
 2799 0096 012B     		cmp	r3, #1
 2800 0098 03D1     		bne	.L184
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2801              		.loc 1 1122 33
 2802 009a 7B68     		ldr	r3, [r7, #4]
 2803 009c 0122     		movs	r2, #1
 2804 009e 9A60     		str	r2, [r3, #8]
 2805 00a0 02E0     		b	.L183
 2806              	.L184:
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2807              		.loc 1 1126 33
 2808 00a2 7B68     		ldr	r3, [r7, #4]
 2809 00a4 0022     		movs	r2, #0
 2810 00a6 9A60     		str	r2, [r3, #8]
 2811              	.L183:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2812              		.loc 1 1130 10
 2813 00a8 324B     		ldr	r3, .L192
 2814 00aa 5B6F     		ldr	r3, [r3, #116]
 2815              		.loc 1 1130 16
 2816 00ac 03F00103 		and	r3, r3, #1
 2817              		.loc 1 1130 5
 2818 00b0 012B     		cmp	r3, #1
 2819 00b2 03D1     		bne	.L185
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2820              		.loc 1 1132 33
 2821 00b4 7B68     		ldr	r3, [r7, #4]
 2822 00b6 0122     		movs	r2, #1
 2823 00b8 5A61     		str	r2, [r3, #20]
 2824 00ba 02E0     		b	.L186
 2825              	.L185:
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2826              		.loc 1 1136 33
 2827 00bc 7B68     		ldr	r3, [r7, #4]
 2828 00be 0022     		movs	r2, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 82


 2829 00c0 5A61     		str	r2, [r3, #20]
 2830              	.L186:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2831              		.loc 1 1140 10
 2832 00c2 2C4B     		ldr	r3, .L192
 2833 00c4 1B68     		ldr	r3, [r3]
 2834              		.loc 1 1140 15
 2835 00c6 03F08073 		and	r3, r3, #16777216
 2836              		.loc 1 1140 5
 2837 00ca B3F1807F 		cmp	r3, #16777216
 2838 00ce 03D1     		bne	.L187
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2839              		.loc 1 1142 37
 2840 00d0 7B68     		ldr	r3, [r7, #4]
 2841 00d2 0222     		movs	r2, #2
 2842 00d4 9A61     		str	r2, [r3, #24]
 2843 00d6 02E0     		b	.L188
 2844              	.L187:
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2845              		.loc 1 1146 37
 2846 00d8 7B68     		ldr	r3, [r7, #4]
 2847 00da 0122     		movs	r2, #1
 2848 00dc 9A61     		str	r2, [r3, #24]
 2849              	.L188:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2850              		.loc 1 1148 52
 2851 00de 254B     		ldr	r3, .L192
 2852 00e0 5B68     		ldr	r3, [r3, #4]
 2853              		.loc 1 1148 38
 2854 00e2 03F48002 		and	r2, r3, #4194304
 2855              		.loc 1 1148 36
 2856 00e6 7B68     		ldr	r3, [r7, #4]
 2857 00e8 DA61     		str	r2, [r3, #28]
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2858              		.loc 1 1149 47
 2859 00ea 224B     		ldr	r3, .L192
 2860 00ec 5B68     		ldr	r3, [r3, #4]
 2861              		.loc 1 1149 33
 2862 00ee 03F03F02 		and	r2, r3, #63
 2863              		.loc 1 1149 31
 2864 00f2 7B68     		ldr	r3, [r7, #4]
 2865 00f4 1A62     		str	r2, [r3, #32]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PL
 2866              		.loc 1 1150 48
 2867 00f6 1F4B     		ldr	r3, .L192
 2868 00f8 5A68     		ldr	r2, [r3, #4]
 2869              		.loc 1 1150 58
 2870 00fa 47F6C073 		movw	r3, #32704
 2871 00fe 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 83


 2872 0100 47F6C072 		movw	r2, #32704
 2873 0104 FA60     		str	r2, [r7, #12]
 2874              	.LBB60:
 2875              	.LBB61:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2876              		.loc 2 581 4
 2877 0106 FA68     		ldr	r2, [r7, #12]
 2878              		.syntax unified
 2879              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2880 0108 92FAA2F2 		rbit r2, r2
 2881              	@ 0 "" 2
 2882              		.thumb
 2883              		.syntax unified
 2884 010c BA60     		str	r2, [r7, #8]
 2885              		.loc 2 594 9
 2886 010e BA68     		ldr	r2, [r7, #8]
 2887              	.LBE61:
 2888              	.LBE60:
 2889              		.loc 1 1150 81
 2890 0110 B2FA82F2 		clz	r2, r2
 2891              		.loc 1 1150 33
 2892 0114 23FA02F2 		lsr	r2, r3, r2
 2893              		.loc 1 1150 31
 2894 0118 7B68     		ldr	r3, [r7, #4]
 2895 011a 5A62     		str	r2, [r3, #36]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2896              		.loc 1 1151 50
 2897 011c 154B     		ldr	r3, .L192
 2898 011e 5B68     		ldr	r3, [r3, #4]
 2899              		.loc 1 1151 60
 2900 0120 03F44033 		and	r3, r3, #196608
 2901              		.loc 1 1151 80
 2902 0124 03F58033 		add	r3, r3, #65536
 2903              		.loc 1 1151 102
 2904 0128 5A00     		lsls	r2, r3, #1
 2905 012a 4FF44033 		mov	r3, #196608
 2906 012e 7B61     		str	r3, [r7, #20]
 2907              	.LBB62:
 2908              	.LBB63:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2909              		.loc 2 581 4
 2910 0130 7B69     		ldr	r3, [r7, #20]
 2911              		.syntax unified
 2912              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2913 0132 93FAA3F3 		rbit r3, r3
 2914              	@ 0 "" 2
 2915              		.thumb
 2916              		.syntax unified
 2917 0136 3B61     		str	r3, [r7, #16]
 2918              		.loc 2 594 9
 2919 0138 3B69     		ldr	r3, [r7, #16]
 2920              	.LBE63:
 2921              	.LBE62:
 2922              		.loc 1 1151 111
 2923 013a B3FA83F3 		clz	r3, r3
 2924              		.loc 1 1151 33
 2925 013e DA40     		lsrs	r2, r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 84


 2926              		.loc 1 1151 31
 2927 0140 7B68     		ldr	r3, [r7, #4]
 2928 0142 9A62     		str	r2, [r3, #40]
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> POSITION_VAL(RCC_PL
 2929              		.loc 1 1152 48
 2930 0144 0B4B     		ldr	r3, .L192
 2931 0146 5B68     		ldr	r3, [r3, #4]
 2932              		.loc 1 1152 58
 2933 0148 03F07062 		and	r2, r3, #251658240
 2934 014c 4FF07063 		mov	r3, #251658240
 2935 0150 FB61     		str	r3, [r7, #28]
 2936              	.LBB64:
 2937              	.LBB65:
 581:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 2938              		.loc 2 581 4
 2939 0152 FB69     		ldr	r3, [r7, #28]
 2940              		.syntax unified
 2941              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2942 0154 93FAA3F3 		rbit r3, r3
 2943              	@ 0 "" 2
 2944              		.thumb
 2945              		.syntax unified
 2946 0158 BB61     		str	r3, [r7, #24]
 2947              		.loc 2 594 9
 2948 015a BB69     		ldr	r3, [r7, #24]
 2949              	.LBE65:
 2950              	.LBE64:
 2951              		.loc 1 1152 81
 2952 015c B3FA83F3 		clz	r3, r3
 2953              		.loc 1 1152 33
 2954 0160 DA40     		lsrs	r2, r2, r3
 2955              		.loc 1 1152 31
 2956 0162 7B68     		ldr	r3, [r7, #4]
 2957 0164 DA62     		str	r2, [r3, #44]
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2958              		.loc 1 1153 1
 2959 0166 00BF     		nop
 2960 0168 2C37     		adds	r7, r7, #44
 2961              	.LCFI51:
 2962              		.cfi_def_cfa_offset 4
 2963 016a BD46     		mov	sp, r7
 2964              	.LCFI52:
 2965              		.cfi_def_cfa_register 13
 2966              		@ sp needed
 2967 016c 5DF8047B 		ldr	r7, [sp], #4
 2968              	.LCFI53:
 2969              		.cfi_restore 7
 2970              		.cfi_def_cfa_offset 0
 2971 0170 7047     		bx	lr
 2972              	.L193:
 2973 0172 00BF     		.align	2
 2974              	.L192:
 2975 0174 00380240 		.word	1073887232
 2976              		.cfi_endproc
 2977              	.LFE138:
 2979              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2980              		.align	1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 85


 2981              		.global	HAL_RCC_GetClockConfig
 2982              		.syntax unified
 2983              		.thumb
 2984              		.thumb_func
 2986              	HAL_RCC_GetClockConfig:
 2987              	.LFB139:
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_ClkInitTypeDef structure that 
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency: Pointer on the Flash Latency.
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2988              		.loc 1 1164 1
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 8
 2991              		@ frame_needed = 1, uses_anonymous_args = 0
 2992              		@ link register save eliminated.
 2993 0000 80B4     		push	{r7}
 2994              	.LCFI54:
 2995              		.cfi_def_cfa_offset 4
 2996              		.cfi_offset 7, -4
 2997 0002 83B0     		sub	sp, sp, #12
 2998              	.LCFI55:
 2999              		.cfi_def_cfa_offset 16
 3000 0004 00AF     		add	r7, sp, #0
 3001              	.LCFI56:
 3002              		.cfi_def_cfa_register 7
 3003 0006 7860     		str	r0, [r7, #4]
 3004 0008 3960     		str	r1, [r7]
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 3005              		.loc 1 1166 32
 3006 000a 7B68     		ldr	r3, [r7, #4]
 3007 000c 0F22     		movs	r2, #15
 3008 000e 1A60     		str	r2, [r3]
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 3009              		.loc 1 1169 51
 3010 0010 124B     		ldr	r3, .L195
 3011 0012 9B68     		ldr	r3, [r3, #8]
 3012              		.loc 1 1169 37
 3013 0014 03F00302 		and	r2, r3, #3
 3014              		.loc 1 1169 35
 3015 0018 7B68     		ldr	r3, [r7, #4]
 3016 001a 5A60     		str	r2, [r3, #4]
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 3017              		.loc 1 1172 52
 3018 001c 0F4B     		ldr	r3, .L195
 3019 001e 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 86


 3020              		.loc 1 1172 38
 3021 0020 03F0F002 		and	r2, r3, #240
 3022              		.loc 1 1172 36
 3023 0024 7B68     		ldr	r3, [r7, #4]
 3024 0026 9A60     		str	r2, [r3, #8]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 3025              		.loc 1 1175 53
 3026 0028 0C4B     		ldr	r3, .L195
 3027 002a 9B68     		ldr	r3, [r3, #8]
 3028              		.loc 1 1175 39
 3029 002c 03F4E052 		and	r2, r3, #7168
 3030              		.loc 1 1175 37
 3031 0030 7B68     		ldr	r3, [r7, #4]
 3032 0032 DA60     		str	r2, [r3, #12]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 3033              		.loc 1 1178 54
 3034 0034 094B     		ldr	r3, .L195
 3035 0036 9B68     		ldr	r3, [r3, #8]
 3036              		.loc 1 1178 39
 3037 0038 DB08     		lsrs	r3, r3, #3
 3038 003a 03F4E052 		and	r2, r3, #7168
 3039              		.loc 1 1178 37
 3040 003e 7B68     		ldr	r3, [r7, #4]
 3041 0040 1A61     		str	r2, [r3, #16]
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 3042              		.loc 1 1181 32
 3043 0042 074B     		ldr	r3, .L195+4
 3044 0044 1B68     		ldr	r3, [r3]
 3045              		.loc 1 1181 16
 3046 0046 03F00F02 		and	r2, r3, #15
 3047              		.loc 1 1181 14
 3048 004a 3B68     		ldr	r3, [r7]
 3049 004c 1A60     		str	r2, [r3]
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 3050              		.loc 1 1182 1
 3051 004e 00BF     		nop
 3052 0050 0C37     		adds	r7, r7, #12
 3053              	.LCFI57:
 3054              		.cfi_def_cfa_offset 4
 3055 0052 BD46     		mov	sp, r7
 3056              	.LCFI58:
 3057              		.cfi_def_cfa_register 13
 3058              		@ sp needed
 3059 0054 5DF8047B 		ldr	r7, [sp], #4
 3060              	.LCFI59:
 3061              		.cfi_restore 7
 3062              		.cfi_def_cfa_offset 0
 3063 0058 7047     		bx	lr
 3064              	.L196:
 3065 005a 00BF     		.align	2
 3066              	.L195:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 87


 3067 005c 00380240 		.word	1073887232
 3068 0060 003C0240 		.word	1073888256
 3069              		.cfi_endproc
 3070              	.LFE139:
 3072              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 3073              		.align	1
 3074              		.global	HAL_RCC_NMI_IRQHandler
 3075              		.syntax unified
 3076              		.thumb
 3077              		.thumb_func
 3079              	HAL_RCC_NMI_IRQHandler:
 3080              	.LFB140:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 3081              		.loc 1 1190 1
 3082              		.cfi_startproc
 3083              		@ args = 0, pretend = 0, frame = 0
 3084              		@ frame_needed = 1, uses_anonymous_args = 0
 3085 0000 80B5     		push	{r7, lr}
 3086              	.LCFI60:
 3087              		.cfi_def_cfa_offset 8
 3088              		.cfi_offset 7, -8
 3089              		.cfi_offset 14, -4
 3090 0002 00AF     		add	r7, sp, #0
 3091              	.LCFI61:
 3092              		.cfi_def_cfa_register 7
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 3093              		.loc 1 1192 6
 3094 0004 064B     		ldr	r3, .L200
 3095 0006 DB68     		ldr	r3, [r3, #12]
 3096 0008 03F08003 		and	r3, r3, #128
 3097              		.loc 1 1192 5
 3098 000c 802B     		cmp	r3, #128
 3099 000e 04D1     		bne	.L199
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 3100              		.loc 1 1195 5
 3101 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 3102              		.loc 1 1198 5
 3103 0014 034B     		ldr	r3, .L200+4
 3104 0016 8022     		movs	r2, #128
 3105 0018 1A70     		strb	r2, [r3]
 3106              	.L199:
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 3107              		.loc 1 1200 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 88


 3108 001a 00BF     		nop
 3109 001c 80BD     		pop	{r7, pc}
 3110              	.L201:
 3111 001e 00BF     		.align	2
 3112              	.L200:
 3113 0020 00380240 		.word	1073887232
 3114 0024 0E380240 		.word	1073887246
 3115              		.cfi_endproc
 3116              	.LFE140:
 3118              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 3119              		.align	1
 3120              		.weak	HAL_RCC_CSSCallback
 3121              		.syntax unified
 3122              		.thumb
 3123              		.thumb_func
 3125              	HAL_RCC_CSSCallback:
 3126              	.LFB141:
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 3127              		.loc 1 1207 1
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 0
 3130              		@ frame_needed = 1, uses_anonymous_args = 0
 3131              		@ link register save eliminated.
 3132 0000 80B4     		push	{r7}
 3133              	.LCFI62:
 3134              		.cfi_def_cfa_offset 4
 3135              		.cfi_offset 7, -4
 3136 0002 00AF     		add	r7, sp, #0
 3137              	.LCFI63:
 3138              		.cfi_def_cfa_register 7
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */ 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 3139              		.loc 1 1211 1
 3140 0004 00BF     		nop
 3141 0006 BD46     		mov	sp, r7
 3142              	.LCFI64:
 3143              		.cfi_def_cfa_register 13
 3144              		@ sp needed
 3145 0008 5DF8047B 		ldr	r7, [sp], #4
 3146              	.LCFI65:
 3147              		.cfi_restore 7
 3148              		.cfi_def_cfa_offset 0
 3149 000c 7047     		bx	lr
 3150              		.cfi_endproc
 3151              	.LFE141:
 3153              		.text
 3154              	.Letext0:
 3155              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3156              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 89


 3157              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 3158              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3159              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3160              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3161              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3162              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3163              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 90


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_rcc.c
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:24     .rodata.APBAHBPrescTable:00000000 APBAHBPrescTable
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:21     .rodata.APBAHBPrescTable:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:28     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:34     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:64     .rodata:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:69     .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:75     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:523    .text.HAL_RCC_OscConfig:0000028c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:530    .text.HAL_RCC_OscConfig:000002a0 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:902    .text.HAL_RCC_OscConfig:000004f0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:910    .text.HAL_RCC_OscConfig:00000508 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1079   .text.HAL_RCC_OscConfig:000005ec $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1085   .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1091   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1479   .text.HAL_RCC_ClockConfig:00000244 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1484   .text.HAL_RCC_ClockConfig:00000250 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1900   .text.HAL_RCC_ClockConfig:000004e0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1907   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:1913   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2121   .text.HAL_RCC_MCOConfig:00000150 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2129   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2135   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2168   .text.HAL_RCC_EnableCSS:00000014 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2173   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2179   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2212   .text.HAL_RCC_DisableCSS:00000014 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2217   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2223   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2428   .text.HAL_RCC_GetSysClockFreq:000000f8 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2435   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2441   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2511   .text.HAL_RCC_GetHCLKFreq:00000044 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2518   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2524   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2588   .text.HAL_RCC_GetPCLK1Freq:0000003c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2594   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2600   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2664   .text.HAL_RCC_GetPCLK2Freq:0000003c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2670   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2676   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2975   .text.HAL_RCC_GetOscConfig:00000174 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2980   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:2986   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:3067   .text.HAL_RCC_GetClockConfig:0000005c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:3073   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:3079   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:3125   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:3113   .text.HAL_RCC_NMI_IRQHandler:00000020 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s:3119   .text.HAL_RCC_CSSCallback:00000000 $t

UNDEFINED SYMBOLS
assert_failed
HAL_GetTick
HAL_InitTick
HAL_GPIO_Init
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccXXLKhj.s 			page 91


SystemCoreClock
