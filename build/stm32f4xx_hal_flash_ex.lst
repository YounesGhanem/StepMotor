ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_flash_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flas"
  22      6572732F 
  22      53544D33 
  22      32463478 
  22      785F4841 
  23 0033 685F6578 		.ascii	"h_ex.c\000"
  23      2E6300
  24              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
  25              		.align	1
  26              		.global	HAL_FLASHEx_Erase
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	HAL_FLASHEx_Erase:
  32              	.LFB128:
  33              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @file    stm32f4xx_hal_flash_ex.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @version V1.4.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @date    09-October-2015
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          functionalities of the FLASH extension peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *           + Extended programming operations functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *  
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                    ##### Flash Extension features #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   [..] Comparing to other previous devices, the FLASH interface for STM32F427xx/437xx and 
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        STM32F429xx/439xx devices contains the following additional features 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (+) Capacity up to 2 Mbyte with dual bank architecture supporting read-while-write
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 2


  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            capability (RWW)
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (+) Dual bank memory organization       
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (+) PCROP protection for all banks
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****    
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   ==============================================================================
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        of all STM32F427xx/437xx, STM32F429xx/439xx, STM32F469xx/479xx and STM32F446xx 
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        devices. It includes
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       (#) FLASH Memory Erase functions: 
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                 HAL_FLASH_Lock() functions
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Erase function: Erase sector, erase all sectors
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) There are two modes of erase :
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****              (+++) Polling Mode using HAL_FLASHEx_Erase()
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****              (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****              
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       (#) Option Bytes Programming functions: Use HAL_FLASHEx_OBProgram() to :
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Set/Reset the write protection
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Set the Read protection Level
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Set the BOR level
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****            (++) Program the user Option Bytes
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       (#) Advanced Option Bytes Programming functions: Use HAL_FLASHEx_AdvOBProgram() to :  
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Extended space (bank 2) erase function
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Full FLASH space (2 Mo) erase (bank 1 and bank 2)
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Dual Boot activation
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) Write protection configuration for bank 2
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        (++) PCROP protection configuration and control for both banks
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   @endverbatim
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   ******************************************************************************
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @attention
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * are permitted provided that the following conditions are met:
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer.
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *      and/or other materials provided with the distribution.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *      may be used to endorse or promote products derived from this software
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *      without specific prior written permission.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 3


  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   ******************************************************************************
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */ 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #include "stm32f4xx_hal.h"
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup STM32F4xx_HAL_Driver
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Constants
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */    
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #define FLASH_TIMEOUT_VALUE       ((uint32_t)50000)/* 50 s */
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Variables
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Option bytes control */
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static void               FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks);
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** void                      FLASH_FlushCaches(void);
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks);
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks);
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_RDP_LevelConfig(uint8_t Level);
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby);
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BOR_LevelConfig(uint8_t Level);
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetUser(void);
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint16_t           FLASH_OB_GetWRP(void);
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetRDP(void);
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOR(void);
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F446xx) 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_EnablePCROP(uint32_t Sector);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 4


 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_DisablePCROP(uint32_t Sector);
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx  */
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx)|| defined(STM32F439xx) || 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BootConfig(uint8_t BootConfig);
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** extern HAL_StatusTypeDef         FLASH_WaitForLastOperation(uint32_t Timeout);
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /* Exported functions --------------------------------------------------------*/
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 Extended IO operation functions
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****  *  @brief   Extended IO operation functions 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****  *
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** @verbatim   
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****  ===============================================================================
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                 ##### Extended programming operation functions #####
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****  ===============================================================================  
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     [..]
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to manage the Extension FLASH 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     programming operations.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** @endverbatim
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @{
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param[in]  pEraseInit: pointer to an FLASH_EraseInitTypeDef structure that
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param[out]  SectorError: pointer to variable  that
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information on faulty sector in case of error 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the sectors have been correctly erased)
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *SectorError)
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
  34              		.loc 1 180 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 16
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 84B0     		sub	sp, sp, #16
  44              	.LCFI1:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 5


  45              		.cfi_def_cfa_offset 24
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 7860     		str	r0, [r7, #4]
  50 0008 3960     		str	r1, [r7]
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  51              		.loc 1 181 21
  52 000a 0123     		movs	r3, #1
  53 000c FB73     		strb	r3, [r7, #15]
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t index = 0;
  54              		.loc 1 182 12
  55 000e 0023     		movs	r3, #0
  56 0010 BB60     		str	r3, [r7, #8]
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Locked */
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
  57              		.loc 1 185 3
  58 0012 404B     		ldr	r3, .L13
  59 0014 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  60 0016 012B     		cmp	r3, #1
  61 0018 01D1     		bne	.L2
  62              		.loc 1 185 3 is_stmt 0 discriminator 1
  63 001a 0223     		movs	r3, #2
  64 001c 76E0     		b	.L3
  65              	.L2:
  66              		.loc 1 185 3 discriminator 2
  67 001e 3D4B     		ldr	r3, .L13
  68 0020 0122     		movs	r2, #1
  69 0022 1A76     		strb	r2, [r3, #24]
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
  70              		.loc 1 188 3 is_stmt 1 discriminator 2
  71 0024 7B68     		ldr	r3, [r7, #4]
  72 0026 1B68     		ldr	r3, [r3]
  73 0028 002B     		cmp	r3, #0
  74 002a 07D0     		beq	.L4
  75              		.loc 1 188 3 is_stmt 0 discriminator 1
  76 002c 7B68     		ldr	r3, [r7, #4]
  77 002e 1B68     		ldr	r3, [r3]
  78 0030 012B     		cmp	r3, #1
  79 0032 03D0     		beq	.L4
  80              		.loc 1 188 3 discriminator 2
  81 0034 BC21     		movs	r1, #188
  82 0036 3848     		ldr	r0, .L13+4
  83 0038 FFF7FEFF 		bl	assert_failed
  84              	.L4:
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  85              		.loc 1 191 12 is_stmt 1
  86 003c 4CF25030 		movw	r0, #50000
  87 0040 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  88 0044 0346     		mov	r3, r0
  89 0046 FB73     		strb	r3, [r7, #15]
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 6


 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
  90              		.loc 1 193 5
  91 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  92 004a 002B     		cmp	r3, #0
  93 004c 5AD1     		bne	.L5
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Initialization of SectorError variable*/
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *SectorError = 0xFFFFFFFF;
  94              		.loc 1 196 18
  95 004e 3B68     		ldr	r3, [r7]
  96 0050 4FF0FF32 		mov	r2, #-1
  97 0054 1A60     		str	r2, [r3]
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
  98              		.loc 1 198 18
  99 0056 7B68     		ldr	r3, [r7, #4]
 100 0058 1B68     		ldr	r3, [r3]
 101              		.loc 1 198 7
 102 005a 012B     		cmp	r3, #1
 103 005c 15D1     		bne	.L6
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Mass erase to be done*/
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 104              		.loc 1 201 43
 105 005e 7B68     		ldr	r3, [r7, #4]
 106 0060 1B69     		ldr	r3, [r3, #16]
 107              		.loc 1 201 7
 108 0062 DAB2     		uxtb	r2, r3
 109 0064 7B68     		ldr	r3, [r7, #4]
 110 0066 5B68     		ldr	r3, [r3, #4]
 111 0068 1946     		mov	r1, r3
 112 006a 1046     		mov	r0, r2
 113 006c FFF7FEFF 		bl	FLASH_MassErase
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 114              		.loc 1 204 16
 115 0070 4CF25030 		movw	r0, #50000
 116 0074 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 117 0078 0346     		mov	r3, r0
 118 007a FB73     		strb	r3, [r7, #15]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* if the erase operation is completed, disable the MER Bit */
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       FLASH->CR &= (~FLASH_MER_BIT);
 119              		.loc 1 207 17
 120 007c 274B     		ldr	r3, .L13+8
 121 007e 1B69     		ldr	r3, [r3, #16]
 122 0080 264A     		ldr	r2, .L13+8
 123 0082 23F00403 		bic	r3, r3, #4
 124 0086 1361     		str	r3, [r2, #16]
 125 0088 3AE0     		b	.L7
 126              	.L6:
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Check the parameters */
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 7


 127              		.loc 1 212 7
 128 008a 7B68     		ldr	r3, [r7, #4]
 129 008c DA68     		ldr	r2, [r3, #12]
 130 008e 7B68     		ldr	r3, [r7, #4]
 131 0090 9B68     		ldr	r3, [r3, #8]
 132 0092 1344     		add	r3, r3, r2
 133 0094 002B     		cmp	r3, #0
 134 0096 06D0     		beq	.L8
 135              		.loc 1 212 7 is_stmt 0 discriminator 2
 136 0098 7B68     		ldr	r3, [r7, #4]
 137 009a DA68     		ldr	r2, [r3, #12]
 138 009c 7B68     		ldr	r3, [r7, #4]
 139 009e 9B68     		ldr	r3, [r3, #8]
 140 00a0 1344     		add	r3, r3, r2
 141 00a2 082B     		cmp	r3, #8
 142 00a4 03D9     		bls	.L9
 143              	.L8:
 144              		.loc 1 212 7 discriminator 3
 145 00a6 D421     		movs	r1, #212
 146 00a8 1B48     		ldr	r0, .L13+4
 147 00aa FFF7FEFF 		bl	assert_failed
 148              	.L9:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Erase by sector by sector to be done*/
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       for(index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++
 149              		.loc 1 215 17 is_stmt 1
 150 00ae 7B68     		ldr	r3, [r7, #4]
 151 00b0 9B68     		ldr	r3, [r3, #8]
 152 00b2 BB60     		str	r3, [r7, #8]
 153              		.loc 1 215 7
 154 00b4 1CE0     		b	.L10
 155              	.L12:
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 156              		.loc 1 217 55
 157 00b6 7B68     		ldr	r3, [r7, #4]
 158 00b8 1B69     		ldr	r3, [r3, #16]
 159              		.loc 1 217 9
 160 00ba DBB2     		uxtb	r3, r3
 161 00bc 1946     		mov	r1, r3
 162 00be B868     		ldr	r0, [r7, #8]
 163 00c0 FFF7FEFF 		bl	FLASH_Erase_Sector
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 164              		.loc 1 220 18
 165 00c4 4CF25030 		movw	r0, #50000
 166 00c8 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 167 00cc 0346     		mov	r3, r0
 168 00ce FB73     		strb	r3, [r7, #15]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the SER and SNB Bits */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 169              		.loc 1 223 9
 170 00d0 124B     		ldr	r3, .L13+8
 171 00d2 1B69     		ldr	r3, [r3, #16]
 172 00d4 114A     		ldr	r2, .L13+8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 8


 173 00d6 23F0FA03 		bic	r3, r3, #250
 174 00da 1361     		str	r3, [r2, #16]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         if(status != HAL_OK) 
 175              		.loc 1 225 11
 176 00dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 177 00de 002B     		cmp	r3, #0
 178 00e0 03D0     		beq	.L11
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         {
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           /* In case of error, stop erase procedure and return the faulty sector*/
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           *SectorError = index;
 179              		.loc 1 228 24
 180 00e2 3B68     		ldr	r3, [r7]
 181 00e4 BA68     		ldr	r2, [r7, #8]
 182 00e6 1A60     		str	r2, [r3]
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           break;
 183              		.loc 1 229 11
 184 00e8 0AE0     		b	.L7
 185              	.L11:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 186              		.loc 1 215 98 discriminator 2
 187 00ea BB68     		ldr	r3, [r7, #8]
 188 00ec 0133     		adds	r3, r3, #1
 189 00ee BB60     		str	r3, [r7, #8]
 190              	.L10:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 191              		.loc 1 215 58 discriminator 1
 192 00f0 7B68     		ldr	r3, [r7, #4]
 193 00f2 DA68     		ldr	r2, [r3, #12]
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 194              		.loc 1 215 82 discriminator 1
 195 00f4 7B68     		ldr	r3, [r7, #4]
 196 00f6 9B68     		ldr	r3, [r3, #8]
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 197              		.loc 1 215 70 discriminator 1
 198 00f8 1344     		add	r3, r3, r2
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       {
 199              		.loc 1 215 7 discriminator 1
 200 00fa BA68     		ldr	r2, [r7, #8]
 201 00fc 9A42     		cmp	r2, r3
 202 00fe DAD3     		bcc	.L12
 203              	.L7:
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         }
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Flush the caches to be sure of the data consistency */
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_FlushCaches();    
 204              		.loc 1 234 5
 205 0100 FFF7FEFF 		bl	FLASH_FlushCaches
 206              	.L5:
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Unlocked */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 207              		.loc 1 238 3
 208 0104 034B     		ldr	r3, .L13
 209 0106 0022     		movs	r2, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 9


 210 0108 1A76     		strb	r2, [r3, #24]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 211              		.loc 1 240 10
 212 010a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 213              	.L3:
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 214              		.loc 1 241 1
 215 010c 1846     		mov	r0, r3
 216 010e 1037     		adds	r7, r7, #16
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219 0110 BD46     		mov	sp, r7
 220              	.LCFI4:
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0112 80BD     		pop	{r7, pc}
 224              	.L14:
 225              		.align	2
 226              	.L13:
 227 0114 00000000 		.word	pFlash
 228 0118 00000000 		.word	.LC0
 229 011c 003C0240 		.word	1073888256
 230              		.cfi_endproc
 231              	.LFE128:
 233              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_FLASHEx_Erase_IT
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	HAL_FLASHEx_Erase_IT:
 241              	.LFB129:
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors  with interrupt enable
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pEraseInit: pointer to an FLASH_EraseInitTypeDef structure that
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 242              		.loc 1 251 1
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 16
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 84B0     		sub	sp, sp, #16
 252              	.LCFI6:
 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
 255              	.LCFI7:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 10


 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 258              		.loc 1 252 21
 259 0008 0023     		movs	r3, #0
 260 000a FB73     		strb	r3, [r7, #15]
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Locked */
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 261              		.loc 1 255 3
 262 000c 354B     		ldr	r3, .L23
 263 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 264 0010 012B     		cmp	r3, #1
 265 0012 01D1     		bne	.L16
 266              		.loc 1 255 3 is_stmt 0 discriminator 1
 267 0014 0223     		movs	r3, #2
 268 0016 60E0     		b	.L17
 269              	.L16:
 270              		.loc 1 255 3 discriminator 2
 271 0018 324B     		ldr	r3, .L23
 272 001a 0122     		movs	r2, #1
 273 001c 1A76     		strb	r2, [r3, #24]
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 274              		.loc 1 258 3 is_stmt 1 discriminator 2
 275 001e 7B68     		ldr	r3, [r7, #4]
 276 0020 1B68     		ldr	r3, [r3]
 277 0022 002B     		cmp	r3, #0
 278 0024 08D0     		beq	.L18
 279              		.loc 1 258 3 is_stmt 0 discriminator 1
 280 0026 7B68     		ldr	r3, [r7, #4]
 281 0028 1B68     		ldr	r3, [r3]
 282 002a 012B     		cmp	r3, #1
 283 002c 04D0     		beq	.L18
 284              		.loc 1 258 3 discriminator 2
 285 002e 4FF48171 		mov	r1, #258
 286 0032 2D48     		ldr	r0, .L23+4
 287 0034 FFF7FEFF 		bl	assert_failed
 288              	.L18:
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation interrupt */
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 289              		.loc 1 261 3 is_stmt 1
 290 0038 2C4B     		ldr	r3, .L23+8
 291 003a 1B69     		ldr	r3, [r3, #16]
 292 003c 2B4A     		ldr	r2, .L23+8
 293 003e 43F08073 		orr	r3, r3, #16777216
 294 0042 1361     		str	r3, [r2, #16]
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Enable Error source interrupt */
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 295              		.loc 1 264 3
 296 0044 294B     		ldr	r3, .L23+8
 297 0046 1B69     		ldr	r3, [r3, #16]
 298 0048 284A     		ldr	r2, .L23+8
 299 004a 43F00073 		orr	r3, r3, #33554432
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 11


 300 004e 1361     		str	r3, [r2, #16]
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Clear pending flags (if any) */  
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 301              		.loc 1 267 3
 302 0050 264B     		ldr	r3, .L23+8
 303 0052 F322     		movs	r2, #243
 304 0054 DA60     		str	r2, [r3, #12]
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 305              		.loc 1 270 16
 306 0056 7B68     		ldr	r3, [r7, #4]
 307 0058 1B68     		ldr	r3, [r3]
 308              		.loc 1 270 5
 309 005a 012B     		cmp	r3, #1
 310 005c 10D1     		bne	.L19
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 311              		.loc 1 273 29
 312 005e 214B     		ldr	r3, .L23
 313 0060 0222     		movs	r2, #2
 314 0062 1A70     		strb	r2, [r3]
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 315              		.loc 1 274 29
 316 0064 7B68     		ldr	r3, [r7, #4]
 317 0066 5B68     		ldr	r3, [r3, #4]
 318              		.loc 1 274 17
 319 0068 1E4A     		ldr	r2, .L23
 320 006a 1361     		str	r3, [r2, #16]
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 321              		.loc 1 275 41
 322 006c 7B68     		ldr	r3, [r7, #4]
 323 006e 1B69     		ldr	r3, [r3, #16]
 324              		.loc 1 275 5
 325 0070 DAB2     		uxtb	r2, r3
 326 0072 7B68     		ldr	r3, [r7, #4]
 327 0074 5B68     		ldr	r3, [r3, #4]
 328 0076 1946     		mov	r1, r3
 329 0078 1046     		mov	r0, r2
 330 007a FFF7FEFF 		bl	FLASH_MassErase
 331 007e 2BE0     		b	.L20
 332              	.L19:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Erase by sector to be done*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Check the parameters */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 333              		.loc 1 282 5
 334 0080 7B68     		ldr	r3, [r7, #4]
 335 0082 DA68     		ldr	r2, [r3, #12]
 336 0084 7B68     		ldr	r3, [r7, #4]
 337 0086 9B68     		ldr	r3, [r3, #8]
 338 0088 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 12


 339 008a 002B     		cmp	r3, #0
 340 008c 06D0     		beq	.L21
 341              		.loc 1 282 5 is_stmt 0 discriminator 2
 342 008e 7B68     		ldr	r3, [r7, #4]
 343 0090 DA68     		ldr	r2, [r3, #12]
 344 0092 7B68     		ldr	r3, [r7, #4]
 345 0094 9B68     		ldr	r3, [r3, #8]
 346 0096 1344     		add	r3, r3, r2
 347 0098 082B     		cmp	r3, #8
 348 009a 04D9     		bls	.L22
 349              	.L21:
 350              		.loc 1 282 5 discriminator 3
 351 009c 4FF48D71 		mov	r1, #282
 352 00a0 1148     		ldr	r0, .L23+4
 353 00a2 FFF7FEFF 		bl	assert_failed
 354              	.L22:
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE;
 355              		.loc 1 284 29 is_stmt 1
 356 00a6 0F4B     		ldr	r3, .L23
 357 00a8 0122     		movs	r2, #1
 358 00aa 1A70     		strb	r2, [r3]
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 359              		.loc 1 285 41
 360 00ac 7B68     		ldr	r3, [r7, #4]
 361 00ae DB68     		ldr	r3, [r3, #12]
 362              		.loc 1 285 29
 363 00b0 0C4A     		ldr	r2, .L23
 364 00b2 5360     		str	r3, [r2, #4]
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 365              		.loc 1 286 31
 366 00b4 7B68     		ldr	r3, [r7, #4]
 367 00b6 9B68     		ldr	r3, [r3, #8]
 368              		.loc 1 286 19
 369 00b8 0A4A     		ldr	r2, .L23
 370 00ba D360     		str	r3, [r2, #12]
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 371              		.loc 1 287 49
 372 00bc 7B68     		ldr	r3, [r7, #4]
 373 00be 1B69     		ldr	r3, [r3, #16]
 374              		.loc 1 287 30
 375 00c0 DAB2     		uxtb	r2, r3
 376              		.loc 1 287 28
 377 00c2 084B     		ldr	r3, .L23
 378 00c4 1A72     		strb	r2, [r3, #8]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Erase 1st sector and wait for IT*/
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH_Erase_Sector(pEraseInit->Sector, pEraseInit->VoltageRange);
 379              		.loc 1 290 5
 380 00c6 7B68     		ldr	r3, [r7, #4]
 381 00c8 9A68     		ldr	r2, [r3, #8]
 382              		.loc 1 290 54
 383 00ca 7B68     		ldr	r3, [r7, #4]
 384 00cc 1B69     		ldr	r3, [r3, #16]
 385              		.loc 1 290 5
 386 00ce DBB2     		uxtb	r3, r3
 387 00d0 1946     		mov	r1, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 13


 388 00d2 1046     		mov	r0, r2
 389 00d4 FFF7FEFF 		bl	FLASH_Erase_Sector
 390              	.L20:
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 391              		.loc 1 293 10
 392 00d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 393              	.L17:
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 394              		.loc 1 294 1
 395 00da 1846     		mov	r0, r3
 396 00dc 1037     		adds	r7, r7, #16
 397              	.LCFI8:
 398              		.cfi_def_cfa_offset 8
 399 00de BD46     		mov	sp, r7
 400              	.LCFI9:
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 00e0 80BD     		pop	{r7, pc}
 404              	.L24:
 405 00e2 00BF     		.align	2
 406              	.L23:
 407 00e4 00000000 		.word	pFlash
 408 00e8 00000000 		.word	.LC0
 409 00ec 003C0240 		.word	1073888256
 410              		.cfi_endproc
 411              	.LFE129:
 413              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_FLASHEx_OBProgram
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	HAL_FLASHEx_OBProgram:
 421              	.LFB130:
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Program option bytes
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pOBInit: pointer to an FLASH_OBInitStruct structure that
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 422              		.loc 1 304 1
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 16
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              	.LCFI10:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 84B0     		sub	sp, sp, #16
 432              	.LCFI11:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 14


 433              		.cfi_def_cfa_offset 24
 434 0004 00AF     		add	r7, sp, #0
 435              	.LCFI12:
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 438              		.loc 1 305 21
 439 0008 0123     		movs	r3, #1
 440 000a FB73     		strb	r3, [r7, #15]
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Locked */
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 441              		.loc 1 308 3
 442 000c 3D4B     		ldr	r3, .L35
 443 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 444 0010 012B     		cmp	r3, #1
 445 0012 01D1     		bne	.L26
 446              		.loc 1 308 3 is_stmt 0 discriminator 1
 447 0014 0223     		movs	r3, #2
 448 0016 71E0     		b	.L27
 449              	.L26:
 450              		.loc 1 308 3 discriminator 2
 451 0018 3A4B     		ldr	r3, .L35
 452 001a 0122     		movs	r2, #1
 453 001c 1A76     		strb	r2, [r3, #24]
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 454              		.loc 1 311 3 is_stmt 1 discriminator 2
 455 001e 7B68     		ldr	r3, [r7, #4]
 456 0020 1B68     		ldr	r3, [r3]
 457 0022 0F2B     		cmp	r3, #15
 458 0024 04D9     		bls	.L28
 459              		.loc 1 311 3 is_stmt 0 discriminator 1
 460 0026 40F23711 		movw	r1, #311
 461 002a 3748     		ldr	r0, .L35+4
 462 002c FFF7FEFF 		bl	assert_failed
 463              	.L28:
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Write protection configuration*/
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 464              		.loc 1 314 14 is_stmt 1
 465 0030 7B68     		ldr	r3, [r7, #4]
 466 0032 1B68     		ldr	r3, [r3]
 467              		.loc 1 314 27
 468 0034 03F00103 		and	r3, r3, #1
 469              		.loc 1 314 5
 470 0038 002B     		cmp	r3, #0
 471 003a 25D0     		beq	.L29
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 472              		.loc 1 316 5
 473 003c 7B68     		ldr	r3, [r7, #4]
 474 003e 5B68     		ldr	r3, [r3, #4]
 475 0040 002B     		cmp	r3, #0
 476 0042 08D0     		beq	.L30
 477              		.loc 1 316 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 15


 478 0044 7B68     		ldr	r3, [r7, #4]
 479 0046 5B68     		ldr	r3, [r3, #4]
 480 0048 012B     		cmp	r3, #1
 481 004a 04D0     		beq	.L30
 482              		.loc 1 316 5 discriminator 2
 483 004c 4FF49E71 		mov	r1, #316
 484 0050 2D48     		ldr	r0, .L35+4
 485 0052 FFF7FEFF 		bl	assert_failed
 486              	.L30:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if(pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 487              		.loc 1 317 15 is_stmt 1
 488 0056 7B68     		ldr	r3, [r7, #4]
 489 0058 5B68     		ldr	r3, [r3, #4]
 490              		.loc 1 317 7
 491 005a 012B     		cmp	r3, #1
 492 005c 0AD1     		bne	.L31
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPSector, pOBInit->Banks);
 493              		.loc 1 320 16
 494 005e 7B68     		ldr	r3, [r7, #4]
 495 0060 9A68     		ldr	r2, [r3, #8]
 496 0062 7B68     		ldr	r3, [r7, #4]
 497 0064 DB68     		ldr	r3, [r3, #12]
 498 0066 1946     		mov	r1, r3
 499 0068 1046     		mov	r0, r2
 500 006a FFF7FEFF 		bl	FLASH_OB_EnableWRP
 501 006e 0346     		mov	r3, r0
 502 0070 FB73     		strb	r3, [r7, #15]
 503 0072 09E0     		b	.L29
 504              	.L31:
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Disable of Write protection on the selected Sector*/
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPSector, pOBInit->Banks);
 505              		.loc 1 325 16
 506 0074 7B68     		ldr	r3, [r7, #4]
 507 0076 9A68     		ldr	r2, [r3, #8]
 508 0078 7B68     		ldr	r3, [r7, #4]
 509 007a DB68     		ldr	r3, [r3, #12]
 510 007c 1946     		mov	r1, r3
 511 007e 1046     		mov	r0, r2
 512 0080 FFF7FEFF 		bl	FLASH_OB_DisableWRP
 513 0084 0346     		mov	r3, r0
 514 0086 FB73     		strb	r3, [r7, #15]
 515              	.L29:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Read protection configuration*/
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 516              		.loc 1 330 14
 517 0088 7B68     		ldr	r3, [r7, #4]
 518 008a 1B68     		ldr	r3, [r3]
 519              		.loc 1 330 27
 520 008c 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 16


 521              		.loc 1 330 5
 522 0090 002B     		cmp	r3, #0
 523 0092 07D0     		beq	.L32
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 524              		.loc 1 332 46
 525 0094 7B68     		ldr	r3, [r7, #4]
 526 0096 1B69     		ldr	r3, [r3, #16]
 527              		.loc 1 332 14
 528 0098 DBB2     		uxtb	r3, r3
 529 009a 1846     		mov	r0, r3
 530 009c FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 531 00a0 0346     		mov	r3, r0
 532 00a2 FB73     		strb	r3, [r7, #15]
 533              	.L32:
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*USER  configuration*/
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 534              		.loc 1 336 14
 535 00a4 7B68     		ldr	r3, [r7, #4]
 536 00a6 1B68     		ldr	r3, [r3]
 537              		.loc 1 336 27
 538 00a8 03F00403 		and	r3, r3, #4
 539              		.loc 1 336 5
 540 00ac 002B     		cmp	r3, #0
 541 00ae 13D0     		beq	.L33
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig&OB_IWDG_SW, 
 542              		.loc 1 338 41
 543 00b0 7B68     		ldr	r3, [r7, #4]
 544 00b2 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 545              		.loc 1 338 14
 546 00b4 03F02003 		and	r3, r3, #32
 547 00b8 D8B2     		uxtb	r0, r3
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 548              		.loc 1 339 45
 549 00ba 7B68     		ldr	r3, [r7, #4]
 550 00bc 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 551              		.loc 1 338 14
 552 00be 03F04003 		and	r3, r3, #64
 553 00c2 D9B2     		uxtb	r1, r3
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STDBY_NO_RST);
 554              		.loc 1 340 45
 555 00c4 7B68     		ldr	r3, [r7, #4]
 556 00c6 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 557              		.loc 1 338 14
 558 00c8 23F07F03 		bic	r3, r3, #127
 559 00cc DBB2     		uxtb	r3, r3
 560 00ce 1A46     		mov	r2, r3
 561 00d0 FFF7FEFF 		bl	FLASH_OB_UserConfig
 562 00d4 0346     		mov	r3, r0
 563 00d6 FB73     		strb	r3, [r7, #15]
 564              	.L33:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 17


 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*BOR Level  configuration*/
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 565              		.loc 1 344 14
 566 00d8 7B68     		ldr	r3, [r7, #4]
 567 00da 1B68     		ldr	r3, [r3]
 568              		.loc 1 344 27
 569 00dc 03F00803 		and	r3, r3, #8
 570              		.loc 1 344 5
 571 00e0 002B     		cmp	r3, #0
 572 00e2 07D0     		beq	.L34
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_BOR_LevelConfig(pOBInit->BORLevel);
 573              		.loc 1 346 46
 574 00e4 7B68     		ldr	r3, [r7, #4]
 575 00e6 5B69     		ldr	r3, [r3, #20]
 576              		.loc 1 346 14
 577 00e8 DBB2     		uxtb	r3, r3
 578 00ea 1846     		mov	r0, r3
 579 00ec FFF7FEFF 		bl	FLASH_OB_BOR_LevelConfig
 580 00f0 0346     		mov	r3, r0
 581 00f2 FB73     		strb	r3, [r7, #15]
 582              	.L34:
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Process Unlocked */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 583              		.loc 1 350 3
 584 00f4 034B     		ldr	r3, .L35
 585 00f6 0022     		movs	r2, #0
 586 00f8 1A76     		strb	r2, [r3, #24]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 587              		.loc 1 352 10
 588 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 589              	.L27:
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 590              		.loc 1 353 1
 591 00fc 1846     		mov	r0, r3
 592 00fe 1037     		adds	r7, r7, #16
 593              	.LCFI13:
 594              		.cfi_def_cfa_offset 8
 595 0100 BD46     		mov	sp, r7
 596              	.LCFI14:
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0102 80BD     		pop	{r7, pc}
 600              	.L36:
 601              		.align	2
 602              	.L35:
 603 0104 00000000 		.word	pFlash
 604 0108 00000000 		.word	.LC0
 605              		.cfi_endproc
 606              	.LFE130:
 608              		.section	.text.FLASH_FlushCaches,"ax",%progbits
 609              		.align	1
 610              		.global	FLASH_FlushCaches
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 18


 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	FLASH_FlushCaches:
 616              	.LFB131:
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Flush the instruction and data caches
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** void FLASH_FlushCaches(void)
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 617              		.loc 1 360 1
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622 0000 80B4     		push	{r7}
 623              	.LCFI15:
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 00AF     		add	r7, sp, #0
 627              	.LCFI16:
 628              		.cfi_def_cfa_register 7
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Flush instruction cache  */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_ICEN))
 629              		.loc 1 362 6
 630 0004 204B     		ldr	r3, .L41
 631 0006 1B68     		ldr	r3, [r3]
 632 0008 03F40073 		and	r3, r3, #512
 633              		.loc 1 362 5
 634 000c 002B     		cmp	r3, #0
 635 000e 17D0     		beq	.L38
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Disable instruction cache  */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 636              		.loc 1 365 5
 637 0010 1D4B     		ldr	r3, .L41
 638 0012 1B68     		ldr	r3, [r3]
 639 0014 1C4A     		ldr	r2, .L41
 640 0016 23F40073 		bic	r3, r3, #512
 641 001a 1360     		str	r3, [r2]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Reset instruction cache */
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 642              		.loc 1 367 5
 643 001c 1A4B     		ldr	r3, .L41
 644 001e 1B68     		ldr	r3, [r3]
 645 0020 194A     		ldr	r2, .L41
 646 0022 43F40063 		orr	r3, r3, #2048
 647 0026 1360     		str	r3, [r2]
 648 0028 174B     		ldr	r3, .L41
 649 002a 1B68     		ldr	r3, [r3]
 650 002c 164A     		ldr	r2, .L41
 651 002e 23F40063 		bic	r3, r3, #2048
 652 0032 1360     		str	r3, [r2]
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Enable instruction cache */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 19


 653              		.loc 1 369 5
 654 0034 144B     		ldr	r3, .L41
 655 0036 1B68     		ldr	r3, [r3]
 656 0038 134A     		ldr	r2, .L41
 657 003a 43F40073 		orr	r3, r3, #512
 658 003e 1360     		str	r3, [r2]
 659              	.L38:
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Flush data cache */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN))
 660              		.loc 1 373 6
 661 0040 114B     		ldr	r3, .L41
 662 0042 1B68     		ldr	r3, [r3]
 663 0044 03F48063 		and	r3, r3, #1024
 664              		.loc 1 373 5
 665 0048 002B     		cmp	r3, #0
 666 004a 17D0     		beq	.L40
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Disable data cache  */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 667              		.loc 1 376 5
 668 004c 0E4B     		ldr	r3, .L41
 669 004e 1B68     		ldr	r3, [r3]
 670 0050 0D4A     		ldr	r2, .L41
 671 0052 23F48063 		bic	r3, r3, #1024
 672 0056 1360     		str	r3, [r2]
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Reset data cache */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_RESET();
 673              		.loc 1 378 5
 674 0058 0B4B     		ldr	r3, .L41
 675 005a 1B68     		ldr	r3, [r3]
 676 005c 0A4A     		ldr	r2, .L41
 677 005e 43F48053 		orr	r3, r3, #4096
 678 0062 1360     		str	r3, [r2]
 679 0064 084B     		ldr	r3, .L41
 680 0066 1B68     		ldr	r3, [r3]
 681 0068 074A     		ldr	r2, .L41
 682 006a 23F48053 		bic	r3, r3, #4096
 683 006e 1360     		str	r3, [r2]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Enable data cache */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_ENABLE();
 684              		.loc 1 380 5
 685 0070 054B     		ldr	r3, .L41
 686 0072 1B68     		ldr	r3, [r3]
 687 0074 044A     		ldr	r2, .L41
 688 0076 43F48063 		orr	r3, r3, #1024
 689 007a 1360     		str	r3, [r2]
 690              	.L40:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 691              		.loc 1 382 1
 692 007c 00BF     		nop
 693 007e BD46     		mov	sp, r7
 694              	.LCFI17:
 695              		.cfi_def_cfa_register 13
 696              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 20


 697 0080 5DF8047B 		ldr	r7, [sp], #4
 698              	.LCFI18:
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 0084 7047     		bx	lr
 702              	.L42:
 703 0086 00BF     		.align	2
 704              	.L41:
 705 0088 003C0240 		.word	1073888256
 706              		.cfi_endproc
 707              	.LFE131:
 709              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 710              		.align	1
 711              		.global	HAL_FLASHEx_OBGetConfig
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 716              	HAL_FLASHEx_OBGetConfig:
 717              	.LFB132:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Get the Option byte configuration
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pOBInit: pointer to an FLASH_OBInitStruct structure that
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 718              		.loc 1 392 1
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              	.LCFI19:
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 82B0     		sub	sp, sp, #8
 728              	.LCFI20:
 729              		.cfi_def_cfa_offset 16
 730 0004 00AF     		add	r7, sp, #0
 731              	.LCFI21:
 732              		.cfi_def_cfa_register 7
 733 0006 7860     		str	r0, [r7, #4]
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 734              		.loc 1 393 23
 735 0008 7B68     		ldr	r3, [r7, #4]
 736 000a 0F22     		movs	r2, #15
 737 000c 1A60     		str	r2, [r3]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get WRP*/
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->WRPSector = (uint32_t)FLASH_OB_GetWRP();
 738              		.loc 1 396 34
 739 000e FFF7FEFF 		bl	FLASH_OB_GetWRP
 740 0012 0346     		mov	r3, r0
 741              		.loc 1 396 24
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 21


 742 0014 1A46     		mov	r2, r3
 743              		.loc 1 396 22
 744 0016 7B68     		ldr	r3, [r7, #4]
 745 0018 9A60     		str	r2, [r3, #8]
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get RDP Level*/
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->RDPLevel = (uint32_t)FLASH_OB_GetRDP();
 746              		.loc 1 399 33
 747 001a FFF7FEFF 		bl	FLASH_OB_GetRDP
 748 001e 0346     		mov	r3, r0
 749              		.loc 1 399 23
 750 0020 1A46     		mov	r2, r3
 751              		.loc 1 399 21
 752 0022 7B68     		ldr	r3, [r7, #4]
 753 0024 1A61     		str	r2, [r3, #16]
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get USER*/
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->USERConfig = (uint8_t)FLASH_OB_GetUser();
 754              		.loc 1 402 34
 755 0026 FFF7FEFF 		bl	FLASH_OB_GetUser
 756 002a 0346     		mov	r3, r0
 757 002c 1A46     		mov	r2, r3
 758              		.loc 1 402 23
 759 002e 7B68     		ldr	r3, [r7, #4]
 760 0030 1A76     		strb	r2, [r3, #24]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get BOR Level*/
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pOBInit->BORLevel = (uint32_t)FLASH_OB_GetBOR();
 761              		.loc 1 405 33
 762 0032 FFF7FEFF 		bl	FLASH_OB_GetBOR
 763 0036 0346     		mov	r3, r0
 764              		.loc 1 405 23
 765 0038 1A46     		mov	r2, r3
 766              		.loc 1 405 21
 767 003a 7B68     		ldr	r3, [r7, #4]
 768 003c 5A61     		str	r2, [r3, #20]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 769              		.loc 1 406 1
 770 003e 00BF     		nop
 771 0040 0837     		adds	r7, r7, #8
 772              	.LCFI22:
 773              		.cfi_def_cfa_offset 8
 774 0042 BD46     		mov	sp, r7
 775              	.LCFI23:
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 0044 80BD     		pop	{r7, pc}
 779              		.cfi_endproc
 780              	.LFE132:
 782              		.section	.text.HAL_FLASHEx_AdvOBProgram,"ax",%progbits
 783              		.align	1
 784              		.global	HAL_FLASHEx_AdvOBProgram
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	HAL_FLASHEx_AdvOBProgram:
 790              	.LFB133:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 22


 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F410Rx) || defined(STM32F411xE) || defined(STM32F446xx) || defined(STM32F469xx) ||
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F479xx) 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Program option bytes
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pAdvOBInit: pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_AdvOBProgram (FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 791              		.loc 1 420 1
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 16
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              	.LCFI24:
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 84B0     		sub	sp, sp, #16
 801              	.LCFI25:
 802              		.cfi_def_cfa_offset 24
 803 0004 00AF     		add	r7, sp, #0
 804              	.LCFI26:
 805              		.cfi_def_cfa_register 7
 806 0006 7860     		str	r0, [r7, #4]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 807              		.loc 1 421 21
 808 0008 0123     		movs	r3, #1
 809 000a FB73     		strb	r3, [r7, #15]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OBEX(pAdvOBInit->OptionType));
 810              		.loc 1 424 3
 811 000c 7B68     		ldr	r3, [r7, #4]
 812 000e 1B68     		ldr	r3, [r3]
 813 0010 012B     		cmp	r3, #1
 814 0012 04D0     		beq	.L45
 815              		.loc 1 424 3 is_stmt 0 discriminator 1
 816 0014 4FF4D471 		mov	r1, #424
 817 0018 1648     		ldr	r0, .L50
 818 001a FFF7FEFF 		bl	assert_failed
 819              	.L45:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Program PCROP option byte*/
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(((pAdvOBInit->OptionType) & OPTIONBYTE_PCROP) == OPTIONBYTE_PCROP)
 820              		.loc 1 427 18 is_stmt 1
 821 001e 7B68     		ldr	r3, [r7, #4]
 822 0020 1B68     		ldr	r3, [r3]
 823              		.loc 1 427 32
 824 0022 03F00103 		and	r3, r3, #1
 825              		.loc 1 427 5
 826 0026 002B     		cmp	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 23


 827 0028 1FD0     		beq	.L46
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Check the parameters */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     assert_param(IS_PCROPSTATE(pAdvOBInit->PCROPState));
 828              		.loc 1 430 5
 829 002a 7B68     		ldr	r3, [r7, #4]
 830 002c 5B68     		ldr	r3, [r3, #4]
 831 002e 002B     		cmp	r3, #0
 832 0030 08D0     		beq	.L47
 833              		.loc 1 430 5 is_stmt 0 discriminator 1
 834 0032 7B68     		ldr	r3, [r7, #4]
 835 0034 5B68     		ldr	r3, [r3, #4]
 836 0036 012B     		cmp	r3, #1
 837 0038 04D0     		beq	.L47
 838              		.loc 1 430 5 discriminator 2
 839 003a 4FF4D771 		mov	r1, #430
 840 003e 0D48     		ldr	r0, .L50
 841 0040 FFF7FEFF 		bl	assert_failed
 842              	.L47:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if((pAdvOBInit->PCROPState) == OB_PCROP_STATE_ENABLE)
 843              		.loc 1 431 19 is_stmt 1
 844 0044 7B68     		ldr	r3, [r7, #4]
 845 0046 5B68     		ldr	r3, [r3, #4]
 846              		.loc 1 431 7
 847 0048 012B     		cmp	r3, #1
 848 004a 07D1     		bne	.L48
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_EnablePCROP(pAdvOBInit->Sectors);
 849              		.loc 1 436 47
 850 004c 7B68     		ldr	r3, [r7, #4]
 851 004e 1B89     		ldrh	r3, [r3, #8]
 852              		.loc 1 436 16
 853 0050 1846     		mov	r0, r3
 854 0052 FFF7FEFF 		bl	FLASH_OB_EnablePCROP
 855 0056 0346     		mov	r3, r0
 856 0058 FB73     		strb	r3, [r7, #15]
 857 005a 06E0     		b	.L46
 858              	.L48:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #else  /* STM32F427xx || STM32F437xx || STM32F429xx|| STM32F439xx || STM32F469xx || STM32F479xx */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_EnablePCROP(pAdvOBInit->SectorsBank1, pAdvOBInit->SectorsBank2, pAdvOBInit-
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx  */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Disable of Write protection on the selected Sector*/
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx)  
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_DisablePCROP(pAdvOBInit->Sectors);
 859              		.loc 1 446 48
 860 005c 7B68     		ldr	r3, [r7, #4]
 861 005e 1B89     		ldrh	r3, [r3, #8]
 862              		.loc 1 446 16
 863 0060 1846     		mov	r0, r3
 864 0062 FFF7FEFF 		bl	FLASH_OB_DisablePCROP
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 24


 865 0066 0346     		mov	r3, r0
 866 0068 FB73     		strb	r3, [r7, #15]
 867              	.L46:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #else /* STM32F427xx || STM32F437xx || STM32F429xx|| STM32F439xx || STM32F469xx || STM32F479xx */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_OB_DisablePCROP(pAdvOBInit->SectorsBank1, pAdvOBInit->SectorsBank2, pAdvOBInit
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx  */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****    
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Program BOOT config option byte*/
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(((pAdvOBInit->OptionType) & OPTIONBYTE_BOOTCONFIG) == OPTIONBYTE_BOOTCONFIG)
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     status = FLASH_OB_BootConfig(pAdvOBInit->BootConfig);
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 868              		.loc 1 461 10
 869 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 870              		.loc 1 462 1
 871 006c 1846     		mov	r0, r3
 872 006e 1037     		adds	r7, r7, #16
 873              	.LCFI27:
 874              		.cfi_def_cfa_offset 8
 875 0070 BD46     		mov	sp, r7
 876              	.LCFI28:
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 0072 80BD     		pop	{r7, pc}
 880              	.L51:
 881              		.align	2
 882              	.L50:
 883 0074 00000000 		.word	.LC0
 884              		.cfi_endproc
 885              	.LFE133:
 887              		.section	.text.HAL_FLASHEx_AdvOBGetConfig,"ax",%progbits
 888              		.align	1
 889              		.global	HAL_FLASHEx_AdvOBGetConfig
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	HAL_FLASHEx_AdvOBGetConfig:
 895              	.LFB134:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief   Get the OBEX byte configuration
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  pAdvOBInit: pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** void HAL_FLASHEx_AdvOBGetConfig(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 896              		.loc 1 472 1
 897              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 25


 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 0000 80B4     		push	{r7}
 902              	.LCFI29:
 903              		.cfi_def_cfa_offset 4
 904              		.cfi_offset 7, -4
 905 0002 83B0     		sub	sp, sp, #12
 906              	.LCFI30:
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              	.LCFI31:
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Sector*/
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->Sectors = (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 912              		.loc 1 476 26
 913 0008 054B     		ldr	r3, .L53
 914 000a 1B88     		ldrh	r3, [r3]	@ movhi
 915 000c 9AB2     		uxth	r2, r3
 916              		.loc 1 476 23
 917 000e 7B68     		ldr	r3, [r7, #4]
 918 0010 1A81     		strh	r2, [r3, #8]	@ movhi
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #else  /* STM32F427xx || STM32F437xx || STM32F429xx|| STM32F439xx || STM32F469xx || STM32F479xx */
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Sector for Bank1*/
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->SectorsBank1 = (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Sector for Bank2*/
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->SectorsBank2 = (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /*Get Boot config OB*/
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   pAdvOBInit->BootConfig = *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS;
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F410xx || STM32F411xE || STM32F446xx  */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 919              		.loc 1 487 1
 920 0012 00BF     		nop
 921 0014 0C37     		adds	r7, r7, #12
 922              	.LCFI32:
 923              		.cfi_def_cfa_offset 4
 924 0016 BD46     		mov	sp, r7
 925              	.LCFI33:
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 0018 5DF8047B 		ldr	r7, [sp], #4
 929              	.LCFI34:
 930              		.cfi_restore 7
 931              		.cfi_def_cfa_offset 0
 932 001c 7047     		bx	lr
 933              	.L54:
 934 001e 00BF     		.align	2
 935              	.L53:
 936 0020 163C0240 		.word	1073888278
 937              		.cfi_endproc
 938              	.LFE134:
 940              		.section	.text.HAL_FLASHEx_OB_SelectPCROP,"ax",%progbits
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 26


 941              		.align	1
 942              		.global	HAL_FLASHEx_OB_SelectPCROP
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 947              	HAL_FLASHEx_OB_SelectPCROP:
 948              	.LFB135:
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Select the Protection Mode 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   After PCROP activated Option Byte modification NOT POSSIBLE! excepted 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         Global Read Out Protection modification (from level1 to level0) 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Once SPRMOD bit is active unprotection of a protected sector is not possible 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/STM32F43xxx/STM32F401xx/STM32F411xx/STM3
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         STM32F469xx/STM32F479xx devices.
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_SelectPCROP(void)
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 949              		.loc 1 502 1
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 8
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954 0000 80B4     		push	{r7}
 955              	.LCFI35:
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 0002 83B0     		sub	sp, sp, #12
 959              	.LCFI36:
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              	.LCFI37:
 963              		.cfi_def_cfa_register 7
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 964              		.loc 1 503 11
 965 0006 FF23     		movs	r3, #255
 966 0008 FB71     		strb	r3, [r7, #7]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Mask SPRMOD bit */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE3_ADDRESS) & (uint8_t)0x7F); 
 967              		.loc 1 506 65
 968 000a 094B     		ldr	r3, .L57
 969 000c 1B78     		ldrb	r3, [r3]
 970 000e DBB2     		uxtb	r3, r3
 971              		.loc 1 506 13
 972 0010 03F07F03 		and	r3, r3, #127
 973 0014 FB71     		strb	r3, [r7, #7]
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Update Option Byte */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE3_ADDRESS = (uint8_t)(OB_PCROP_SELECTED | optiontmp); 
 974              		.loc 1 509 3
 975 0016 064A     		ldr	r2, .L57
 976              		.loc 1 509 42
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 27


 977 0018 FB79     		ldrb	r3, [r7, #7]
 978 001a 63F07F03 		orn	r3, r3, #127
 979 001e DBB2     		uxtb	r3, r3
 980              		.loc 1 509 40
 981 0020 1370     		strb	r3, [r2]
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return HAL_OK;
 982              		.loc 1 511 10
 983 0022 0023     		movs	r3, #0
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 984              		.loc 1 512 1
 985 0024 1846     		mov	r0, r3
 986 0026 0C37     		adds	r7, r7, #12
 987              	.LCFI38:
 988              		.cfi_def_cfa_offset 4
 989 0028 BD46     		mov	sp, r7
 990              	.LCFI39:
 991              		.cfi_def_cfa_register 13
 992              		@ sp needed
 993 002a 5DF8047B 		ldr	r7, [sp], #4
 994              	.LCFI40:
 995              		.cfi_restore 7
 996              		.cfi_def_cfa_offset 0
 997 002e 7047     		bx	lr
 998              	.L58:
 999              		.align	2
 1000              	.L57:
 1001 0030 173C0240 		.word	1073888279
 1002              		.cfi_endproc
 1003              	.LFE135:
 1005              		.section	.text.HAL_FLASHEx_OB_DeSelectPCROP,"ax",%progbits
 1006              		.align	1
 1007              		.global	HAL_FLASHEx_OB_DeSelectPCROP
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1012              	HAL_FLASHEx_OB_DeSelectPCROP:
 1013              	.LFB136:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Deselect the Protection Mode 
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   After PCROP activated Option Byte modification NOT POSSIBLE! excepted 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         Global Read Out Protection modification (from level1 to level0) 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Once SPRMOD bit is active unprotection of a protected sector is not possible 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/STM32F43xxx/STM32F401xx/STM32F411xx/STM3
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         STM32F469xx/STM32F479xx devices.
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_DeSelectPCROP(void)
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1014              		.loc 1 527 1
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 8
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 28


 1018              		@ link register save eliminated.
 1019 0000 80B4     		push	{r7}
 1020              	.LCFI41:
 1021              		.cfi_def_cfa_offset 4
 1022              		.cfi_offset 7, -4
 1023 0002 83B0     		sub	sp, sp, #12
 1024              	.LCFI42:
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              	.LCFI43:
 1028              		.cfi_def_cfa_register 7
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 1029              		.loc 1 528 11
 1030 0006 FF23     		movs	r3, #255
 1031 0008 FB71     		strb	r3, [r7, #7]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Mask SPRMOD bit */
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE3_ADDRESS) & (uint8_t)0x7F); 
 1032              		.loc 1 531 65
 1033 000a 084B     		ldr	r3, .L61
 1034 000c 1B78     		ldrb	r3, [r3]
 1035 000e DBB2     		uxtb	r3, r3
 1036              		.loc 1 531 13
 1037 0010 03F07F03 		and	r3, r3, #127
 1038 0014 FB71     		strb	r3, [r7, #7]
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Update Option Byte */
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE3_ADDRESS = (uint8_t)(OB_PCROP_DESELECTED | optiontmp);  
 1039              		.loc 1 534 3
 1040 0016 054A     		ldr	r2, .L61
 1041              		.loc 1 534 40
 1042 0018 FB79     		ldrb	r3, [r7, #7]
 1043 001a 1370     		strb	r3, [r2]
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return HAL_OK;
 1044              		.loc 1 536 10
 1045 001c 0023     		movs	r3, #0
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1046              		.loc 1 537 1
 1047 001e 1846     		mov	r0, r3
 1048 0020 0C37     		adds	r7, r7, #12
 1049              	.LCFI44:
 1050              		.cfi_def_cfa_offset 4
 1051 0022 BD46     		mov	sp, r7
 1052              	.LCFI45:
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 0024 5DF8047B 		ldr	r7, [sp], #4
 1056              	.LCFI46:
 1057              		.cfi_restore 7
 1058              		.cfi_def_cfa_offset 0
 1059 0028 7047     		bx	lr
 1060              	.L62:
 1061 002a 00BF     		.align	2
 1062              	.L61:
 1063 002c 173C0240 		.word	1073888279
 1064              		.cfi_endproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 29


 1065              	.LFE136:
 1067              		.section	.text.FLASH_MassErase,"ax",%progbits
 1068              		.align	1
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1073              	FLASH_MassErase:
 1074              	.LFB137:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F401xC || STM32F401xE ||
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           STM32F411xE || STM32F469xx || STM32F479xx  */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx)|| defined(STM32F439xx) || 
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value for Bank 2
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/STM32F43xxx/STM32F469xx/STM32F479xx devi
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection  Option Bytes value
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** uint16_t HAL_FLASHEx_OB_GetBank2WRP(void)
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {                            
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return (*(__IO uint16_t *)(OPTCR1_BYTE2_ADDRESS));
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @}
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx) ||
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Full erase of FLASH memory sectors 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks: Banks to be erased
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0;
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 30


 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* if the previous operation is completed, proceed to erase all sectors */
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(Banks == FLASH_BANK_BOTH)
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* bank1 & bank2 will be erased*/
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH->CR |= FLASH_MER_BIT;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else if(Banks == FLASH_BANK_1)
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Only bank1 will be erased*/
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH->CR |= FLASH_CR_MER1;
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Only bank2 will be erased*/
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     FLASH->CR |= FLASH_CR_MER2;
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector: FLASH sector to erase
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(VoltageRange == FLASH_VOLTAGE_RANGE_1)
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_2)
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_3)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 31


 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_WORD;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Need to add offset of 4 when sector higher than FLASH_SECTOR_11 */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(Sector > FLASH_SECTOR_11) 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     Sector += 4;
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase the sector */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << POSITION_VAL(FLASH_CR_SNB));
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank1 or bank 2 sectors
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).   
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector: specifies the sector(s) to be write protected.
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg WRPSector: A value between OB_WRP_SECTOR_0 and OB_WRP_SECTOR_23
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_WRP_SECTOR_All
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   BANK2 starts from OB_WRP_SECTOR_12
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks: Enable write protection on all the sectors for the specific bank
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: WRP on all sectors of bank2
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: WRP on all sectors of bank1 & bank2
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL FLASH State   
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if(((WRPSector == OB_WRP_SECTOR_All) && ((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH))
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****          (WRPSector < OB_WRP_SECTOR_12))
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 32


 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        if(WRPSector == OB_WRP_SECTOR_All)
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        {
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           /*Write protection on all sector of BANK1*/
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~(WRPSector>>12));  
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        }
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        else
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        {
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           /*Write protection done on sectors of BANK1*/
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~WRPSector);  
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else 
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~(WRPSector>>12));  
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector of BANK2*/
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if((WRPSector == OB_WRP_SECTOR_All) && (Banks == FLASH_BANK_BOTH))
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       if(status == HAL_OK)
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       { 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~(WRPSector>>12));  
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank1 or bank 2 sectors
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).   
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector: specifies the sector(s) to be write protected.
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg WRPSector: A value between OB_WRP_SECTOR_0 and OB_WRP_SECTOR_23
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_WRP_Sector_All
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   BANK2 starts from OB_WRP_SECTOR_12
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks: Disable write protection on all the sectors for the specific bank
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status   
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 33


 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if(((WRPSector == OB_WRP_SECTOR_All) && ((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH))
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****          (WRPSector < OB_WRP_SECTOR_12))
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        if(WRPSector == OB_WRP_SECTOR_All)
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           /*Write protection on all sector of BANK1*/
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)(WRPSector>>12); 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        else
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        {
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           /*Write protection done on sectors of BANK1*/
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****           *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)WRPSector; 
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****        }
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)(WRPSector>>12); 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector  of BANK2*/
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if((WRPSector == OB_WRP_SECTOR_All) && (Banks == FLASH_BANK_BOTH))
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       if(status == HAL_OK)
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       { 
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)(WRPSector>>12); 
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Configure the Dual Bank Boot.
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *   
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *      
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  BootConfig specifies the Dual Bank Boot Option byte.
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_Dual_BootEnabled: Dual Bank Boot Enable
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 34


 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_Dual_BootDisabled: Dual Bank Boot Disabled
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BootConfig(uint8_t BootConfig)
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT(BootConfig));
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */  
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   { 
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Set Dual Bank Boot */
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BFB2);
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= BootConfig;
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the read/write protection (PCROP) of the desired 
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         sectors of Bank 1 and/or Bank 2.
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank1 Specifies the sector(s) to be read/write protected or unprotected for bank1
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_0 and OB_PCROP_SECTOR_11
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All                         
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank2 Specifies the sector(s) to be read/write protected or unprotected for bank2
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_12 and OB_PCROP_SECTOR_23
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All                         
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Enable PCROP protection on all the sectors for the specific bank
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: WRP on all sectors of bank2
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: WRP on all sectors of bank1 & bank2
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status  
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t 
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH))
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank1));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 35


 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK1*/
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)SectorBank1; 
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else 
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)SectorBank2; 
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector  of BANK2*/
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if(Banks == FLASH_BANK_BOTH)
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       if(status == HAL_OK)
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       { 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection done on sectors of BANK2*/
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS |= (uint16_t)SectorBank2; 
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the read/write protection (PCROP) of the desired 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         sectors  of Bank 1 and/or Bank 2.
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices.
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank1 specifies the sector(s) to be read/write protected or unprotected for bank1
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_0 and OB_PCROP_SECTOR_11
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All                         
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  SectorBank2 Specifies the sector(s) to be read/write protected or unprotected for bank2
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_SECTOR_12 and OB_PCROP_SECTOR_23
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_SECTOR__All                         
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks Disable PCROP protection on all the sectors for the specific bank
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: WRP on all sectors of bank2
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: WRP on all sectors of bank1 & bank2
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status  
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisablePCROP(uint32_t SectorBank1, uint32_t SectorBank2, uint32_t
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {  
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 36


 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if((Banks == FLASH_BANK_1) || (Banks == FLASH_BANK_BOTH))
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank1));
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK1*/
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~SectorBank1); 
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     else 
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       /*Write protection done on sectors of BANK2*/
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~SectorBank2); 
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /*Write protection on all sector  of BANK2*/
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     if(Banks == FLASH_BANK_BOTH)
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     {
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       assert_param(IS_OB_PCROP(SectorBank2));
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****      /* Wait for last operation to be completed */
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       if(status == HAL_OK)
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       { 
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         /*Write protection done on sectors of BANK2*/
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****         *(__IO uint16_t*)OPTCR1_BYTE2_ADDRESS &= (~SectorBank2); 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****       }
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     }
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F469xx || STM32F479xx */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx) ||
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F410Rx) || defined(STM32F411xE) || defined(STM32F446xx) 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Mass erase of FLASH memory
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks: Banks to be erased
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 37


 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1075              		.loc 1 992 1
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 16
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0000 80B5     		push	{r7, lr}
 1080              	.LCFI47:
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 84B0     		sub	sp, sp, #16
 1085              	.LCFI48:
 1086              		.cfi_def_cfa_offset 24
 1087 0004 00AF     		add	r7, sp, #0
 1088              	.LCFI49:
 1089              		.cfi_def_cfa_register 7
 1090 0006 0346     		mov	r3, r0
 1091 0008 3960     		str	r1, [r7]
 1092 000a FB71     		strb	r3, [r7, #7]
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0;
 1093              		.loc 1 993 12
 1094 000c 0023     		movs	r3, #0
 1095 000e FB60     		str	r3, [r7, #12]
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1096              		.loc 1 996 3
 1097 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1098 0012 002B     		cmp	r3, #0
 1099 0014 0DD0     		beq	.L64
 1100              		.loc 1 996 3 is_stmt 0 discriminator 1
 1101 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1102 0018 012B     		cmp	r3, #1
 1103 001a 0AD0     		beq	.L64
 1104              		.loc 1 996 3 discriminator 2
 1105 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1106 001e 022B     		cmp	r3, #2
 1107 0020 07D0     		beq	.L64
 1108              		.loc 1 996 3 discriminator 3
 1109 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1110 0024 032B     		cmp	r3, #3
 1111 0026 04D0     		beq	.L64
 1112              		.loc 1 996 3 discriminator 4
 1113 0028 4FF47971 		mov	r1, #996
 1114 002c 1348     		ldr	r0, .L66
 1115 002e FFF7FEFF 		bl	assert_failed
 1116              	.L64:
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 1117              		.loc 1 997 3 is_stmt 1
 1118 0032 3B68     		ldr	r3, [r7]
 1119 0034 012B     		cmp	r3, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 38


 1120 0036 04D0     		beq	.L65
 1121              		.loc 1 997 3 is_stmt 0 discriminator 1
 1122 0038 40F2E531 		movw	r1, #997
 1123 003c 0F48     		ldr	r0, .L66
 1124 003e FFF7FEFF 		bl	assert_failed
 1125              	.L65:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase all sectors */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 1126              		.loc 1 1000 3 is_stmt 1
 1127 0042 0F4B     		ldr	r3, .L66+4
 1128 0044 1B69     		ldr	r3, [r3, #16]
 1129 0046 0E4A     		ldr	r2, .L66+4
 1130 0048 23F44073 		bic	r3, r3, #768
 1131 004c 1361     		str	r3, [r2, #16]
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 1132              		.loc 1 1001 13
 1133 004e 0C4B     		ldr	r3, .L66+4
 1134 0050 1A69     		ldr	r2, [r3, #16]
 1135 0052 0B49     		ldr	r1, .L66+4
 1136 0054 FB68     		ldr	r3, [r7, #12]
 1137 0056 1343     		orrs	r3, r3, r2
 1138 0058 0B61     		str	r3, [r1, #16]
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_MER;
 1139              		.loc 1 1002 13
 1140 005a 094B     		ldr	r3, .L66+4
 1141 005c 1B69     		ldr	r3, [r3, #16]
 1142 005e 084A     		ldr	r2, .L66+4
 1143 0060 43F00403 		orr	r3, r3, #4
 1144 0064 1361     		str	r3, [r2, #16]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 1145              		.loc 1 1003 13
 1146 0066 064B     		ldr	r3, .L66+4
 1147 0068 1B69     		ldr	r3, [r3, #16]
 1148 006a 054A     		ldr	r2, .L66+4
 1149 006c 43F48033 		orr	r3, r3, #65536
 1150 0070 1361     		str	r3, [r2, #16]
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1151              		.loc 1 1004 1
 1152 0072 00BF     		nop
 1153 0074 1037     		adds	r7, r7, #16
 1154              	.LCFI50:
 1155              		.cfi_def_cfa_offset 8
 1156 0076 BD46     		mov	sp, r7
 1157              	.LCFI51:
 1158              		.cfi_def_cfa_register 13
 1159              		@ sp needed
 1160 0078 80BD     		pop	{r7, pc}
 1161              	.L67:
 1162 007a 00BF     		.align	2
 1163              	.L66:
 1164 007c 00000000 		.word	.LC0
 1165 0080 003C0240 		.word	1073888256
 1166              		.cfi_endproc
 1167              	.LFE137:
 1169              		.section	.text.FLASH_Erase_Sector,"ax",%progbits
 1170              		.align	1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 39


 1171              		.global	FLASH_Erase_Sector
 1172              		.syntax unified
 1173              		.thumb
 1174              		.thumb_func
 1176              	FLASH_Erase_Sector:
 1177              	.LFB138:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector: FLASH sector to erase
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval None
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1178              		.loc 1 1024 1
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 24
 1181              		@ frame_needed = 1, uses_anonymous_args = 0
 1182 0000 80B5     		push	{r7, lr}
 1183              	.LCFI52:
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 86B0     		sub	sp, sp, #24
 1188              	.LCFI53:
 1189              		.cfi_def_cfa_offset 32
 1190 0004 00AF     		add	r7, sp, #0
 1191              	.LCFI54:
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
 1194 0008 0B46     		mov	r3, r1
 1195 000a FB70     		strb	r3, [r7, #3]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0;
 1196              		.loc 1 1025 12
 1197 000c 0023     		movs	r3, #0
 1198 000e 7B61     		str	r3, [r7, #20]
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 1199              		.loc 1 1028 3
 1200 0010 7B68     		ldr	r3, [r7, #4]
 1201 0012 002B     		cmp	r3, #0
 1202 0014 19D0     		beq	.L69
 1203              		.loc 1 1028 3 is_stmt 0 discriminator 1
 1204 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 40


 1205 0018 012B     		cmp	r3, #1
 1206 001a 16D0     		beq	.L69
 1207              		.loc 1 1028 3 discriminator 2
 1208 001c 7B68     		ldr	r3, [r7, #4]
 1209 001e 022B     		cmp	r3, #2
 1210 0020 13D0     		beq	.L69
 1211              		.loc 1 1028 3 discriminator 3
 1212 0022 7B68     		ldr	r3, [r7, #4]
 1213 0024 032B     		cmp	r3, #3
 1214 0026 10D0     		beq	.L69
 1215              		.loc 1 1028 3 discriminator 4
 1216 0028 7B68     		ldr	r3, [r7, #4]
 1217 002a 042B     		cmp	r3, #4
 1218 002c 0DD0     		beq	.L69
 1219              		.loc 1 1028 3 discriminator 5
 1220 002e 7B68     		ldr	r3, [r7, #4]
 1221 0030 052B     		cmp	r3, #5
 1222 0032 0AD0     		beq	.L69
 1223              		.loc 1 1028 3 discriminator 6
 1224 0034 7B68     		ldr	r3, [r7, #4]
 1225 0036 062B     		cmp	r3, #6
 1226 0038 07D0     		beq	.L69
 1227              		.loc 1 1028 3 discriminator 7
 1228 003a 7B68     		ldr	r3, [r7, #4]
 1229 003c 072B     		cmp	r3, #7
 1230 003e 04D0     		beq	.L69
 1231              		.loc 1 1028 3 discriminator 8
 1232 0040 40F20441 		movw	r1, #1028
 1233 0044 2C48     		ldr	r0, .L76
 1234 0046 FFF7FEFF 		bl	assert_failed
 1235              	.L69:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 1236              		.loc 1 1029 3 is_stmt 1
 1237 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1238 004c 002B     		cmp	r3, #0
 1239 004e 0DD0     		beq	.L70
 1240              		.loc 1 1029 3 is_stmt 0 discriminator 1
 1241 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1242 0052 012B     		cmp	r3, #1
 1243 0054 0AD0     		beq	.L70
 1244              		.loc 1 1029 3 discriminator 2
 1245 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1246 0058 022B     		cmp	r3, #2
 1247 005a 07D0     		beq	.L70
 1248              		.loc 1 1029 3 discriminator 3
 1249 005c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1250 005e 032B     		cmp	r3, #3
 1251 0060 04D0     		beq	.L70
 1252              		.loc 1 1029 3 discriminator 4
 1253 0062 40F20541 		movw	r1, #1029
 1254 0066 2448     		ldr	r0, .L76
 1255 0068 FFF7FEFF 		bl	assert_failed
 1256              	.L70:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(VoltageRange == FLASH_VOLTAGE_RANGE_1)
 1257              		.loc 1 1031 5 is_stmt 1
 1258 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 41


 1259 006e 002B     		cmp	r3, #0
 1260 0070 02D1     		bne	.L71
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 1261              		.loc 1 1033 16
 1262 0072 0023     		movs	r3, #0
 1263 0074 7B61     		str	r3, [r7, #20]
 1264 0076 10E0     		b	.L72
 1265              	.L71:
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_2)
 1266              		.loc 1 1035 10
 1267 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1268 007a 012B     		cmp	r3, #1
 1269 007c 03D1     		bne	.L73
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 1270              		.loc 1 1037 15
 1271 007e 4FF48073 		mov	r3, #256
 1272 0082 7B61     		str	r3, [r7, #20]
 1273 0084 09E0     		b	.L72
 1274              	.L73:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_3)
 1275              		.loc 1 1039 10
 1276 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1277 0088 022B     		cmp	r3, #2
 1278 008a 03D1     		bne	.L74
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_WORD;
 1279              		.loc 1 1041 15
 1280 008c 4FF40073 		mov	r3, #512
 1281 0090 7B61     		str	r3, [r7, #20]
 1282 0092 02E0     		b	.L72
 1283              	.L74:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 1284              		.loc 1 1045 15
 1285 0094 4FF44073 		mov	r3, #768
 1286 0098 7B61     		str	r3, [r7, #20]
 1287              	.L72:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase the sector */
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 1288              		.loc 1 1049 3
 1289 009a 184B     		ldr	r3, .L76+4
 1290 009c 1B69     		ldr	r3, [r3, #16]
 1291 009e 174A     		ldr	r2, .L76+4
 1292 00a0 23F44073 		bic	r3, r3, #768
 1293 00a4 1361     		str	r3, [r2, #16]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 1294              		.loc 1 1050 13
 1295 00a6 154B     		ldr	r3, .L76+4
 1296 00a8 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 42


 1297 00aa 1449     		ldr	r1, .L76+4
 1298 00ac 7B69     		ldr	r3, [r7, #20]
 1299 00ae 1343     		orrs	r3, r3, r2
 1300 00b0 0B61     		str	r3, [r1, #16]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 1301              		.loc 1 1051 3
 1302 00b2 124B     		ldr	r3, .L76+4
 1303 00b4 1B69     		ldr	r3, [r3, #16]
 1304 00b6 114A     		ldr	r2, .L76+4
 1305 00b8 23F0F803 		bic	r3, r3, #248
 1306 00bc 1361     		str	r3, [r2, #16]
 1307 00be F823     		movs	r3, #248
 1308 00c0 3B61     		str	r3, [r7, #16]
 1309              	.LBB4:
 1310              	.LBB5:
 1311              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 43


  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 44


  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 45


 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 46


 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 47


 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 48


 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 49


 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 50


 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:Drivers/CMSIS/Include/core_cmInstr.h **** }
 452:Drivers/CMSIS/Include/core_cmInstr.h **** 
 453:Drivers/CMSIS/Include/core_cmInstr.h **** 
 454:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:Drivers/CMSIS/Include/core_cmInstr.h **** 
 456:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 460:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:Drivers/CMSIS/Include/core_cmInstr.h **** {
 462:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:Drivers/CMSIS/Include/core_cmInstr.h **** }
 464:Drivers/CMSIS/Include/core_cmInstr.h **** 
 465:Drivers/CMSIS/Include/core_cmInstr.h **** 
 466:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:Drivers/CMSIS/Include/core_cmInstr.h **** 
 468:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 471:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:Drivers/CMSIS/Include/core_cmInstr.h **** {
 473:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:Drivers/CMSIS/Include/core_cmInstr.h **** }
 475:Drivers/CMSIS/Include/core_cmInstr.h **** 
 476:Drivers/CMSIS/Include/core_cmInstr.h **** 
 477:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:Drivers/CMSIS/Include/core_cmInstr.h **** 
 479:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 482:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:Drivers/CMSIS/Include/core_cmInstr.h **** {
 484:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:Drivers/CMSIS/Include/core_cmInstr.h **** }
 486:Drivers/CMSIS/Include/core_cmInstr.h **** 
 487:Drivers/CMSIS/Include/core_cmInstr.h **** 
 488:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:Drivers/CMSIS/Include/core_cmInstr.h **** 
 490:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:Drivers/CMSIS/Include/core_cmInstr.h **** 
 492:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 494:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 495:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 496:Drivers/CMSIS/Include/core_cmInstr.h **** {
 497:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 51


 498:Drivers/CMSIS/Include/core_cmInstr.h ****   return __builtin_bswap32(value);
 499:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 500:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 501:Drivers/CMSIS/Include/core_cmInstr.h **** 
 502:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 503:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 504:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 505:Drivers/CMSIS/Include/core_cmInstr.h **** }
 506:Drivers/CMSIS/Include/core_cmInstr.h **** 
 507:Drivers/CMSIS/Include/core_cmInstr.h **** 
 508:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 509:Drivers/CMSIS/Include/core_cmInstr.h **** 
 510:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 511:Drivers/CMSIS/Include/core_cmInstr.h **** 
 512:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 513:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 514:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 515:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 516:Drivers/CMSIS/Include/core_cmInstr.h **** {
 517:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 518:Drivers/CMSIS/Include/core_cmInstr.h **** 
 519:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 520:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 521:Drivers/CMSIS/Include/core_cmInstr.h **** }
 522:Drivers/CMSIS/Include/core_cmInstr.h **** 
 523:Drivers/CMSIS/Include/core_cmInstr.h **** 
 524:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 525:Drivers/CMSIS/Include/core_cmInstr.h **** 
 526:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 527:Drivers/CMSIS/Include/core_cmInstr.h **** 
 528:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 529:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 530:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 531:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 532:Drivers/CMSIS/Include/core_cmInstr.h **** {
 533:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 534:Drivers/CMSIS/Include/core_cmInstr.h ****   return (short)__builtin_bswap16(value);
 535:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 536:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 537:Drivers/CMSIS/Include/core_cmInstr.h **** 
 538:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 539:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 540:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 541:Drivers/CMSIS/Include/core_cmInstr.h **** }
 542:Drivers/CMSIS/Include/core_cmInstr.h **** 
 543:Drivers/CMSIS/Include/core_cmInstr.h **** 
 544:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 545:Drivers/CMSIS/Include/core_cmInstr.h **** 
 546:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 547:Drivers/CMSIS/Include/core_cmInstr.h **** 
 548:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 549:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 550:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 551:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 552:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 553:Drivers/CMSIS/Include/core_cmInstr.h **** {
 554:Drivers/CMSIS/Include/core_cmInstr.h ****   return (op1 >> op2) | (op1 << (32 - op2));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 52


 555:Drivers/CMSIS/Include/core_cmInstr.h **** }
 556:Drivers/CMSIS/Include/core_cmInstr.h **** 
 557:Drivers/CMSIS/Include/core_cmInstr.h **** 
 558:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 559:Drivers/CMSIS/Include/core_cmInstr.h **** 
 560:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 561:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 562:Drivers/CMSIS/Include/core_cmInstr.h **** 
 563:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 564:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 565:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 566:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 567:Drivers/CMSIS/Include/core_cmInstr.h **** 
 568:Drivers/CMSIS/Include/core_cmInstr.h **** 
 569:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 570:Drivers/CMSIS/Include/core_cmInstr.h **** 
 571:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 572:Drivers/CMSIS/Include/core_cmInstr.h **** 
 573:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 574:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 575:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 576:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 577:Drivers/CMSIS/Include/core_cmInstr.h **** {
 578:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 579:Drivers/CMSIS/Include/core_cmInstr.h **** 
 580:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 581:Drivers/CMSIS/Include/core_cmInstr.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1312              		.loc 2 581 4
 1313 00c2 3B69     		ldr	r3, [r7, #16]
 1314              		.syntax unified
 1315              	@ 581 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 1316 00c4 93FAA3F3 		rbit r3, r3
 1317              	@ 0 "" 2
 1318              		.thumb
 1319              		.syntax unified
 1320 00c8 FB60     		str	r3, [r7, #12]
 582:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 583:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 584:Drivers/CMSIS/Include/core_cmInstr.h **** 
 585:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 586:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 587:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 588:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 589:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 590:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 591:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 592:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 593:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 594:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 1321              		.loc 2 594 9
 1322 00ca FB68     		ldr	r3, [r7, #12]
 1323              	.LBE5:
 1324              	.LBE4:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << POSITION_VAL(FLASH_CR_SNB));
 1325              		.loc 1 1052 42
 1326 00cc B3FA83F3 		clz	r3, r3
 1327              		.loc 1 1052 39
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 53


 1328 00d0 7A68     		ldr	r2, [r7, #4]
 1329 00d2 02FA03F3 		lsl	r3, r2, r3
 1330              		.loc 1 1052 29
 1331 00d6 43F00202 		orr	r2, r3, #2
 1332              		.loc 1 1052 13
 1333 00da 084B     		ldr	r3, .L76+4
 1334 00dc 1B69     		ldr	r3, [r3, #16]
 1335 00de 0749     		ldr	r1, .L76+4
 1336 00e0 1343     		orrs	r3, r3, r2
 1337 00e2 0B61     		str	r3, [r1, #16]
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 1338              		.loc 1 1053 13
 1339 00e4 054B     		ldr	r3, .L76+4
 1340 00e6 1B69     		ldr	r3, [r3, #16]
 1341 00e8 044A     		ldr	r2, .L76+4
 1342 00ea 43F48033 		orr	r3, r3, #65536
 1343 00ee 1361     		str	r3, [r2, #16]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1344              		.loc 1 1054 1
 1345 00f0 00BF     		nop
 1346 00f2 1837     		adds	r7, r7, #24
 1347              	.LCFI55:
 1348              		.cfi_def_cfa_offset 8
 1349 00f4 BD46     		mov	sp, r7
 1350              	.LCFI56:
 1351              		.cfi_def_cfa_register 13
 1352              		@ sp needed
 1353 00f6 80BD     		pop	{r7, pc}
 1354              	.L77:
 1355              		.align	2
 1356              	.L76:
 1357 00f8 00000000 		.word	.LC0
 1358 00fc 003C0240 		.word	1073888256
 1359              		.cfi_endproc
 1360              	.LFE138:
 1362              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 1363              		.align	1
 1364              		.syntax unified
 1365              		.thumb
 1366              		.thumb_func
 1368              	FLASH_OB_EnableWRP:
 1369              	.LFB139:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank 1 sectors
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).   
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector: specifies the sector(s) to be write protected.
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks: Enable write protection on all the sectors for the specific bank
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 54


1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status 
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1370              		.loc 1 1074 1
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 16
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374 0000 80B5     		push	{r7, lr}
 1375              	.LCFI57:
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 7, -8
 1378              		.cfi_offset 14, -4
 1379 0002 84B0     		sub	sp, sp, #16
 1380              	.LCFI58:
 1381              		.cfi_def_cfa_offset 24
 1382 0004 00AF     		add	r7, sp, #0
 1383              	.LCFI59:
 1384              		.cfi_def_cfa_register 7
 1385 0006 7860     		str	r0, [r7, #4]
 1386 0008 3960     		str	r1, [r7]
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1387              		.loc 1 1075 21
 1388 000a 0023     		movs	r3, #0
 1389 000c FB73     		strb	r3, [r7, #15]
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 1390              		.loc 1 1078 3
 1391 000e 7B68     		ldr	r3, [r7, #4]
 1392 0010 23F47F63 		bic	r3, r3, #4080
 1393 0014 23F00F03 		bic	r3, r3, #15
 1394 0018 002B     		cmp	r3, #0
 1395 001a 02D1     		bne	.L79
 1396              		.loc 1 1078 3 is_stmt 0 discriminator 2
 1397 001c 7B68     		ldr	r3, [r7, #4]
 1398 001e 002B     		cmp	r3, #0
 1399 0020 04D1     		bne	.L80
 1400              	.L79:
 1401              		.loc 1 1078 3 discriminator 3
 1402 0022 40F23641 		movw	r1, #1078
 1403 0026 1248     		ldr	r0, .L84
 1404 0028 FFF7FEFF 		bl	assert_failed
 1405              	.L80:
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 1406              		.loc 1 1079 3 is_stmt 1
 1407 002c 3B68     		ldr	r3, [r7]
 1408 002e 012B     		cmp	r3, #1
 1409 0030 04D0     		beq	.L81
 1410              		.loc 1 1079 3 is_stmt 0 discriminator 1
 1411 0032 40F23741 		movw	r1, #1079
 1412 0036 0E48     		ldr	r0, .L84
 1413 0038 FFF7FEFF 		bl	assert_failed
 1414              	.L81:
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 55


1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1415              		.loc 1 1082 12 is_stmt 1
 1416 003c 4CF25030 		movw	r0, #50000
 1417 0040 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1418 0044 0346     		mov	r3, r0
 1419 0046 FB73     		strb	r3, [r7, #15]
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1420              		.loc 1 1084 5
 1421 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1422 004a 002B     		cmp	r3, #0
 1423 004c 0AD1     		bne	.L82
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   { 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~WRPSector);  
 1424              		.loc 1 1086 42
 1425 004e 094B     		ldr	r3, .L84+4
 1426 0050 1B88     		ldrh	r3, [r3]	@ movhi
 1427 0052 9AB2     		uxth	r2, r3
 1428 0054 7B68     		ldr	r3, [r7, #4]
 1429 0056 9BB2     		uxth	r3, r3
 1430 0058 DB43     		mvns	r3, r3
 1431 005a 9BB2     		uxth	r3, r3
 1432 005c 0549     		ldr	r1, .L84+4
 1433 005e 1340     		ands	r3, r3, r2
 1434 0060 9BB2     		uxth	r3, r3
 1435 0062 0B80     		strh	r3, [r1]	@ movhi
 1436              	.L82:
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 1437              		.loc 1 1089 10
 1438 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1439              		.loc 1 1090 1
 1440 0066 1846     		mov	r0, r3
 1441 0068 1037     		adds	r7, r7, #16
 1442              	.LCFI60:
 1443              		.cfi_def_cfa_offset 8
 1444 006a BD46     		mov	sp, r7
 1445              	.LCFI61:
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
 1448 006c 80BD     		pop	{r7, pc}
 1449              	.L85:
 1450 006e 00BF     		.align	2
 1451              	.L84:
 1452 0070 00000000 		.word	.LC0
 1453 0074 163C0240 		.word	1073888278
 1454              		.cfi_endproc
 1455              	.LFE139:
 1457              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 1458              		.align	1
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1463              	FLASH_OB_DisableWRP:
 1464              	.LFB140:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 56


1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank 1 sectors
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM4  
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   Active value of nWRPi bits is inverted when PCROP mode is active (SPRMOD =1).   
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  WRPSector: specifies the sector(s) to be write protected.
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Banks: Enable write protection on all the sectors for the specific bank
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status 
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1465              		.loc 1 1110 1
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 16
 1468              		@ frame_needed = 1, uses_anonymous_args = 0
 1469 0000 80B5     		push	{r7, lr}
 1470              	.LCFI62:
 1471              		.cfi_def_cfa_offset 8
 1472              		.cfi_offset 7, -8
 1473              		.cfi_offset 14, -4
 1474 0002 84B0     		sub	sp, sp, #16
 1475              	.LCFI63:
 1476              		.cfi_def_cfa_offset 24
 1477 0004 00AF     		add	r7, sp, #0
 1478              	.LCFI64:
 1479              		.cfi_def_cfa_register 7
 1480 0006 7860     		str	r0, [r7, #4]
 1481 0008 3960     		str	r1, [r7]
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1482              		.loc 1 1111 21
 1483 000a 0023     		movs	r3, #0
 1484 000c FB73     		strb	r3, [r7, #15]
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 1485              		.loc 1 1114 3
 1486 000e 7B68     		ldr	r3, [r7, #4]
 1487 0010 23F47F63 		bic	r3, r3, #4080
 1488 0014 23F00F03 		bic	r3, r3, #15
 1489 0018 002B     		cmp	r3, #0
 1490 001a 02D1     		bne	.L87
 1491              		.loc 1 1114 3 is_stmt 0 discriminator 2
 1492 001c 7B68     		ldr	r3, [r7, #4]
 1493 001e 002B     		cmp	r3, #0
 1494 0020 04D1     		bne	.L88
 1495              	.L87:
 1496              		.loc 1 1114 3 discriminator 3
 1497 0022 40F25A41 		movw	r1, #1114
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 57


 1498 0026 1148     		ldr	r0, .L92
 1499 0028 FFF7FEFF 		bl	assert_failed
 1500              	.L88:
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 1501              		.loc 1 1115 3 is_stmt 1
 1502 002c 3B68     		ldr	r3, [r7]
 1503 002e 012B     		cmp	r3, #1
 1504 0030 04D0     		beq	.L89
 1505              		.loc 1 1115 3 is_stmt 0 discriminator 1
 1506 0032 40F25B41 		movw	r1, #1115
 1507 0036 0D48     		ldr	r0, .L92
 1508 0038 FFF7FEFF 		bl	assert_failed
 1509              	.L89:
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1510              		.loc 1 1118 12 is_stmt 1
 1511 003c 4CF25030 		movw	r0, #50000
 1512 0040 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1513 0044 0346     		mov	r3, r0
 1514 0046 FB73     		strb	r3, [r7, #15]
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1515              		.loc 1 1120 5
 1516 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1517 004a 002B     		cmp	r3, #0
 1518 004c 08D1     		bne	.L90
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   { 
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)WRPSector; 
 1519              		.loc 1 1122 42
 1520 004e 084B     		ldr	r3, .L92+4
 1521 0050 1B88     		ldrh	r3, [r3]	@ movhi
 1522 0052 9AB2     		uxth	r2, r3
 1523              		.loc 1 1122 45
 1524 0054 7B68     		ldr	r3, [r7, #4]
 1525 0056 9BB2     		uxth	r3, r3
 1526              		.loc 1 1122 42
 1527 0058 0549     		ldr	r1, .L92+4
 1528 005a 1343     		orrs	r3, r3, r2
 1529 005c 9BB2     		uxth	r3, r3
 1530 005e 0B80     		strh	r3, [r1]	@ movhi
 1531              	.L90:
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 1532              		.loc 1 1125 10
 1533 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1534              		.loc 1 1126 1
 1535 0062 1846     		mov	r0, r3
 1536 0064 1037     		adds	r7, r7, #16
 1537              	.LCFI65:
 1538              		.cfi_def_cfa_offset 8
 1539 0066 BD46     		mov	sp, r7
 1540              	.LCFI66:
 1541              		.cfi_def_cfa_register 13
 1542              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 58


 1543 0068 80BD     		pop	{r7, pc}
 1544              	.L93:
 1545 006a 00BF     		.align	2
 1546              	.L92:
 1547 006c 00000000 		.word	.LC0
 1548 0070 163C0240 		.word	1073888278
 1549              		.cfi_endproc
 1550              	.LFE140:
 1552              		.section	.text.FLASH_OB_EnablePCROP,"ax",%progbits
 1553              		.align	1
 1554              		.syntax unified
 1555              		.thumb
 1556              		.thumb_func
 1558              	FLASH_OB_EnablePCROP:
 1559              	.LFB141:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F401xx || STM32F410xx || STM32F411xE || STM32F446xx  *
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #if defined(STM32F401xC) || defined(STM32F401xE) || defined(STM32F410Tx) || defined(STM32F410Cx) ||
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     defined(STM32F411xE) || defined(STM32F446xx) 
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Enable the read/write protection (PCROP) of the desired sectors.
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F401xx devices.
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector specifies the sector(s) to be read/write protected or unprotected.
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector0 and OB_PCROP_Sector5
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_Sector_All                         
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status  
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnablePCROP(uint32_t Sector)
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1560              		.loc 1 1141 1
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 16
 1563              		@ frame_needed = 1, uses_anonymous_args = 0
 1564 0000 80B5     		push	{r7, lr}
 1565              	.LCFI67:
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 7, -8
 1568              		.cfi_offset 14, -4
 1569 0002 84B0     		sub	sp, sp, #16
 1570              	.LCFI68:
 1571              		.cfi_def_cfa_offset 24
 1572 0004 00AF     		add	r7, sp, #0
 1573              	.LCFI69:
 1574              		.cfi_def_cfa_register 7
 1575 0006 7860     		str	r0, [r7, #4]
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1576              		.loc 1 1142 21
 1577 0008 0023     		movs	r3, #0
 1578 000a FB73     		strb	r3, [r7, #15]
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_PCROP(Sector));
 1579              		.loc 1 1145 3
 1580 000c 7B68     		ldr	r3, [r7, #4]
 1581 000e 23F47F63 		bic	r3, r3, #4080
 1582 0012 23F00F03 		bic	r3, r3, #15
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 59


 1583 0016 002B     		cmp	r3, #0
 1584 0018 02D1     		bne	.L95
 1585              		.loc 1 1145 3 is_stmt 0 discriminator 2
 1586 001a 7B68     		ldr	r3, [r7, #4]
 1587 001c 002B     		cmp	r3, #0
 1588 001e 04D1     		bne	.L96
 1589              	.L95:
 1590              		.loc 1 1145 3 discriminator 3
 1591 0020 40F27941 		movw	r1, #1145
 1592 0024 0C48     		ldr	r0, .L99
 1593 0026 FFF7FEFF 		bl	assert_failed
 1594              	.L96:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */  
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1595              		.loc 1 1148 12 is_stmt 1
 1596 002a 4CF25030 		movw	r0, #50000
 1597 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1598 0032 0346     		mov	r3, r0
 1599 0034 FB73     		strb	r3, [r7, #15]
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1600              		.loc 1 1150 5
 1601 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1602 0038 002B     		cmp	r3, #0
 1603 003a 08D1     		bne	.L97
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   { 
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)Sector;
 1604              		.loc 1 1152 42
 1605 003c 074B     		ldr	r3, .L99+4
 1606 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1607 0040 9AB2     		uxth	r2, r3
 1608              		.loc 1 1152 45
 1609 0042 7B68     		ldr	r3, [r7, #4]
 1610 0044 9BB2     		uxth	r3, r3
 1611              		.loc 1 1152 42
 1612 0046 0549     		ldr	r1, .L99+4
 1613 0048 1343     		orrs	r3, r3, r2
 1614 004a 9BB2     		uxth	r3, r3
 1615 004c 0B80     		strh	r3, [r1]	@ movhi
 1616              	.L97:
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 1617              		.loc 1 1155 10
 1618 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1619              		.loc 1 1156 1
 1620 0050 1846     		mov	r0, r3
 1621 0052 1037     		adds	r7, r7, #16
 1622              	.LCFI70:
 1623              		.cfi_def_cfa_offset 8
 1624 0054 BD46     		mov	sp, r7
 1625              	.LCFI71:
 1626              		.cfi_def_cfa_register 13
 1627              		@ sp needed
 1628 0056 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 60


 1629              	.L100:
 1630              		.align	2
 1631              	.L99:
 1632 0058 00000000 		.word	.LC0
 1633 005c 163C0240 		.word	1073888278
 1634              		.cfi_endproc
 1635              	.LFE141:
 1637              		.section	.text.FLASH_OB_DisablePCROP,"ax",%progbits
 1638              		.align	1
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1643              	FLASH_OB_DisablePCROP:
 1644              	.LFB142:
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Disable the read/write protection (PCROP) of the desired sectors.
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32F401xx devices.
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Sector specifies the sector(s) to be read/write protected or unprotected.
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP: A value between OB_PCROP_Sector0 and OB_PCROP_Sector5
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_PCROP_Sector_All                         
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status  
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisablePCROP(uint32_t Sector)
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {  
 1645              		.loc 1 1169 1
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 16
 1648              		@ frame_needed = 1, uses_anonymous_args = 0
 1649 0000 80B5     		push	{r7, lr}
 1650              	.LCFI72:
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 84B0     		sub	sp, sp, #16
 1655              	.LCFI73:
 1656              		.cfi_def_cfa_offset 24
 1657 0004 00AF     		add	r7, sp, #0
 1658              	.LCFI74:
 1659              		.cfi_def_cfa_register 7
 1660 0006 7860     		str	r0, [r7, #4]
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1661              		.loc 1 1170 21
 1662 0008 0023     		movs	r3, #0
 1663 000a FB73     		strb	r3, [r7, #15]
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_PCROP(Sector));
 1664              		.loc 1 1173 3
 1665 000c 7B68     		ldr	r3, [r7, #4]
 1666 000e 23F47F63 		bic	r3, r3, #4080
 1667 0012 23F00F03 		bic	r3, r3, #15
 1668 0016 002B     		cmp	r3, #0
 1669 0018 02D1     		bne	.L102
 1670              		.loc 1 1173 3 is_stmt 0 discriminator 2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 61


 1671 001a 7B68     		ldr	r3, [r7, #4]
 1672 001c 002B     		cmp	r3, #0
 1673 001e 04D1     		bne	.L103
 1674              	.L102:
 1675              		.loc 1 1173 3 discriminator 3
 1676 0020 40F29541 		movw	r1, #1173
 1677 0024 0D48     		ldr	r0, .L106
 1678 0026 FFF7FEFF 		bl	assert_failed
 1679              	.L103:
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */  
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1680              		.loc 1 1176 12 is_stmt 1
 1681 002a 4CF25030 		movw	r0, #50000
 1682 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1683 0032 0346     		mov	r3, r0
 1684 0034 FB73     		strb	r3, [r7, #15]
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1685              		.loc 1 1178 5
 1686 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1687 0038 002B     		cmp	r3, #0
 1688 003a 0AD1     		bne	.L104
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   { 
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~Sector);
 1689              		.loc 1 1180 42
 1690 003c 084B     		ldr	r3, .L106+4
 1691 003e 1B88     		ldrh	r3, [r3]	@ movhi
 1692 0040 9AB2     		uxth	r2, r3
 1693 0042 7B68     		ldr	r3, [r7, #4]
 1694 0044 9BB2     		uxth	r3, r3
 1695 0046 DB43     		mvns	r3, r3
 1696 0048 9BB2     		uxth	r3, r3
 1697 004a 0549     		ldr	r1, .L106+4
 1698 004c 1340     		ands	r3, r3, r2
 1699 004e 9BB2     		uxth	r3, r3
 1700 0050 0B80     		strh	r3, [r1]	@ movhi
 1701              	.L104:
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 1702              		.loc 1 1183 10
 1703 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1704              		.loc 1 1185 1
 1705 0054 1846     		mov	r0, r3
 1706 0056 1037     		adds	r7, r7, #16
 1707              	.LCFI75:
 1708              		.cfi_def_cfa_offset 8
 1709 0058 BD46     		mov	sp, r7
 1710              	.LCFI76:
 1711              		.cfi_def_cfa_register 13
 1712              		@ sp needed
 1713 005a 80BD     		pop	{r7, pc}
 1714              	.L107:
 1715              		.align	2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 62


 1716              	.L106:
 1717 005c 00000000 		.word	.LC0
 1718 0060 163C0240 		.word	1073888278
 1719              		.cfi_endproc
 1720              	.LFE142:
 1722              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 1723              		.align	1
 1724              		.syntax unified
 1725              		.thumb
 1726              		.thumb_func
 1728              	FLASH_OB_RDP_LevelConfig:
 1729              	.LFB143:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** #endif /* STM32F401xC || STM32F401xE || STM32F411xE || STM32F446xx  */
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Level: specifies the read protection level.
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *   
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @note WARNING: When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *    
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t Level)
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1730              		.loc 1 1201 1
 1731              		.cfi_startproc
 1732              		@ args = 0, pretend = 0, frame = 16
 1733              		@ frame_needed = 1, uses_anonymous_args = 0
 1734 0000 80B5     		push	{r7, lr}
 1735              	.LCFI77:
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 7, -8
 1738              		.cfi_offset 14, -4
 1739 0002 84B0     		sub	sp, sp, #16
 1740              	.LCFI78:
 1741              		.cfi_def_cfa_offset 24
 1742 0004 00AF     		add	r7, sp, #0
 1743              	.LCFI79:
 1744              		.cfi_def_cfa_register 7
 1745 0006 0346     		mov	r3, r0
 1746 0008 FB71     		strb	r3, [r7, #7]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1747              		.loc 1 1202 21
 1748 000a 0023     		movs	r3, #0
 1749 000c FB73     		strb	r3, [r7, #15]
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(Level));
 1750              		.loc 1 1205 3
 1751 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1752 0010 AA2B     		cmp	r3, #170
 1753 0012 0AD0     		beq	.L109
 1754              		.loc 1 1205 3 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 63


 1755 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1756 0016 552B     		cmp	r3, #85
 1757 0018 07D0     		beq	.L109
 1758              		.loc 1 1205 3 discriminator 2
 1759 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1760 001c CC2B     		cmp	r3, #204
 1761 001e 04D0     		beq	.L109
 1762              		.loc 1 1205 3 discriminator 3
 1763 0020 40F2B541 		movw	r1, #1205
 1764 0024 0948     		ldr	r0, .L112
 1765 0026 FFF7FEFF 		bl	assert_failed
 1766              	.L109:
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1767              		.loc 1 1208 12 is_stmt 1
 1768 002a 4CF25030 		movw	r0, #50000
 1769 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1770 0032 0346     		mov	r3, r0
 1771 0034 FB73     		strb	r3, [r7, #15]
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1772              		.loc 1 1210 5
 1773 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1774 0038 002B     		cmp	r3, #0
 1775 003a 02D1     		bne	.L110
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   { 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = Level;
 1776              		.loc 1 1212 5
 1777 003c 044A     		ldr	r2, .L112+4
 1778              		.loc 1 1212 41
 1779 003e FB79     		ldrb	r3, [r7, #7]
 1780 0040 1370     		strb	r3, [r2]
 1781              	.L110:
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status;
 1782              		.loc 1 1215 10
 1783 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1784              		.loc 1 1216 1
 1785 0044 1846     		mov	r0, r3
 1786 0046 1037     		adds	r7, r7, #16
 1787              	.LCFI80:
 1788              		.cfi_def_cfa_offset 8
 1789 0048 BD46     		mov	sp, r7
 1790              	.LCFI81:
 1791              		.cfi_def_cfa_register 13
 1792              		@ sp needed
 1793 004a 80BD     		pop	{r7, pc}
 1794              	.L113:
 1795              		.align	2
 1796              	.L112:
 1797 004c 00000000 		.word	.LC0
 1798 0050 153C0240 		.word	1073888277
 1799              		.cfi_endproc
 1800              	.LFE143:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 64


 1802              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 1803              		.align	1
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1808              	FLASH_OB_UserConfig:
 1809              	.LFB144:
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Iwdg: Selects the IWDG mode
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Stop: Reset event when entering STOP mode.
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STOP_NO_RST: No reset generated when entering in STOP
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Stdby: Reset event when entering Standby mode.
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STDBY_NO_RST: No reset generated when entering in STANDBY
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby)
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1810              		.loc 1 1235 1
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 16
 1813              		@ frame_needed = 1, uses_anonymous_args = 0
 1814 0000 80B5     		push	{r7, lr}
 1815              	.LCFI82:
 1816              		.cfi_def_cfa_offset 8
 1817              		.cfi_offset 7, -8
 1818              		.cfi_offset 14, -4
 1819 0002 84B0     		sub	sp, sp, #16
 1820              	.LCFI83:
 1821              		.cfi_def_cfa_offset 24
 1822 0004 00AF     		add	r7, sp, #0
 1823              	.LCFI84:
 1824              		.cfi_def_cfa_register 7
 1825 0006 0346     		mov	r3, r0
 1826 0008 FB71     		strb	r3, [r7, #7]
 1827 000a 0B46     		mov	r3, r1
 1828 000c BB71     		strb	r3, [r7, #6]
 1829 000e 1346     		mov	r3, r2
 1830 0010 7B71     		strb	r3, [r7, #5]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 1831              		.loc 1 1236 11
 1832 0012 FF23     		movs	r3, #255
 1833 0014 FB73     		strb	r3, [r7, #15]
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1834              		.loc 1 1237 21
 1835 0016 0023     		movs	r3, #0
 1836 0018 BB73     		strb	r3, [r7, #14]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 65


1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE(Iwdg));
 1837              		.loc 1 1240 3
 1838 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1839 001c 202B     		cmp	r3, #32
 1840 001e 07D0     		beq	.L115
 1841              		.loc 1 1240 3 is_stmt 0 discriminator 1
 1842 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1843 0022 002B     		cmp	r3, #0
 1844 0024 04D0     		beq	.L115
 1845              		.loc 1 1240 3 discriminator 2
 1846 0026 4FF49B61 		mov	r1, #1240
 1847 002a 1C48     		ldr	r0, .L120
 1848 002c FFF7FEFF 		bl	assert_failed
 1849              	.L115:
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
 1850              		.loc 1 1241 3 is_stmt 1
 1851 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1852 0032 402B     		cmp	r3, #64
 1853 0034 07D0     		beq	.L116
 1854              		.loc 1 1241 3 is_stmt 0 discriminator 1
 1855 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1856 0038 002B     		cmp	r3, #0
 1857 003a 04D0     		beq	.L116
 1858              		.loc 1 1241 3 discriminator 2
 1859 003c 40F2D941 		movw	r1, #1241
 1860 0040 1648     		ldr	r0, .L120
 1861 0042 FFF7FEFF 		bl	assert_failed
 1862              	.L116:
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
 1863              		.loc 1 1242 3 is_stmt 1
 1864 0046 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1865 0048 802B     		cmp	r3, #128
 1866 004a 07D0     		beq	.L117
 1867              		.loc 1 1242 3 is_stmt 0 discriminator 1
 1868 004c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1869 004e 002B     		cmp	r3, #0
 1870 0050 04D0     		beq	.L117
 1871              		.loc 1 1242 3 discriminator 2
 1872 0052 40F2DA41 		movw	r1, #1242
 1873 0056 1148     		ldr	r0, .L120
 1874 0058 FFF7FEFF 		bl	assert_failed
 1875              	.L117:
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1876              		.loc 1 1245 12 is_stmt 1
 1877 005c 4CF25030 		movw	r0, #50000
 1878 0060 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1879 0064 0346     		mov	r3, r0
 1880 0066 BB73     		strb	r3, [r7, #14]
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1881              		.loc 1 1247 5
 1882 0068 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1883 006a 002B     		cmp	r3, #0
 1884 006c 11D1     		bne	.L118
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {     
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 66


1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Mask OPTLOCK, OPTSTRT, BOR_LEV and BFB2 bits */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x1F);
 1885              		.loc 1 1250 67
 1886 006e 0C4B     		ldr	r3, .L120+4
 1887 0070 1B78     		ldrb	r3, [r3]
 1888 0072 DBB2     		uxtb	r3, r3
 1889              		.loc 1 1250 15
 1890 0074 03F01F03 		and	r3, r3, #31
 1891 0078 FB73     		strb	r3, [r7, #15]
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     /* Update User Option Byte */
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = Iwdg | (uint8_t)(Stdby | (uint8_t)(Stop | ((uint8_t)opti
 1892              		.loc 1 1253 69
 1893 007a BA79     		ldrb	r2, [r7, #6]
 1894 007c FB7B     		ldrb	r3, [r7, #15]
 1895 007e 1343     		orrs	r3, r3, r2
 1896 0080 DAB2     		uxtb	r2, r3
 1897              		.loc 1 1253 51
 1898 0082 7B79     		ldrb	r3, [r7, #5]
 1899 0084 1343     		orrs	r3, r3, r2
 1900 0086 DAB2     		uxtb	r2, r3
 1901              		.loc 1 1253 5
 1902 0088 0549     		ldr	r1, .L120+4
 1903              		.loc 1 1253 42
 1904 008a FB79     		ldrb	r3, [r7, #7]
 1905 008c 1343     		orrs	r3, r3, r2
 1906 008e DBB2     		uxtb	r3, r3
 1907 0090 0B70     		strb	r3, [r1]
 1908              	.L118:
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return status; 
 1909              		.loc 1 1256 10
 1910 0092 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1911              		.loc 1 1257 1
 1912 0094 1846     		mov	r0, r3
 1913 0096 1037     		adds	r7, r7, #16
 1914              	.LCFI85:
 1915              		.cfi_def_cfa_offset 8
 1916 0098 BD46     		mov	sp, r7
 1917              	.LCFI86:
 1918              		.cfi_def_cfa_register 13
 1919              		@ sp needed
 1920 009a 80BD     		pop	{r7, pc}
 1921              	.L121:
 1922              		.align	2
 1923              	.L120:
 1924 009c 00000000 		.word	.LC0
 1925 00a0 143C0240 		.word	1073888276
 1926              		.cfi_endproc
 1927              	.LFE144:
 1929              		.section	.text.FLASH_OB_BOR_LevelConfig,"ax",%progbits
 1930              		.align	1
 1931              		.syntax unified
 1932              		.thumb
 1933              		.thumb_func
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 67


 1935              	FLASH_OB_BOR_LevelConfig:
 1936              	.LFB145:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Set the BOR Level. 
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @param  Level: specifies the Option Bytes BOR Reset Level.
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval HAL Status
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BOR_LevelConfig(uint8_t Level)
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 1937              		.loc 1 1270 1
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 8
 1940              		@ frame_needed = 1, uses_anonymous_args = 0
 1941 0000 80B5     		push	{r7, lr}
 1942              	.LCFI87:
 1943              		.cfi_def_cfa_offset 8
 1944              		.cfi_offset 7, -8
 1945              		.cfi_offset 14, -4
 1946 0002 82B0     		sub	sp, sp, #8
 1947              	.LCFI88:
 1948              		.cfi_def_cfa_offset 16
 1949 0004 00AF     		add	r7, sp, #0
 1950              	.LCFI89:
 1951              		.cfi_def_cfa_register 7
 1952 0006 0346     		mov	r3, r0
 1953 0008 FB71     		strb	r3, [r7, #7]
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Check the parameters */
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(Level));
 1954              		.loc 1 1272 3
 1955 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1956 000c 082B     		cmp	r3, #8
 1957 000e 0DD0     		beq	.L123
 1958              		.loc 1 1272 3 is_stmt 0 discriminator 1
 1959 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1960 0012 042B     		cmp	r3, #4
 1961 0014 0AD0     		beq	.L123
 1962              		.loc 1 1272 3 discriminator 2
 1963 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1964 0018 002B     		cmp	r3, #0
 1965 001a 07D0     		beq	.L123
 1966              		.loc 1 1272 3 discriminator 3
 1967 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1968 001e 0C2B     		cmp	r3, #12
 1969 0020 04D0     		beq	.L123
 1970              		.loc 1 1272 3 discriminator 4
 1971 0022 4FF49F61 		mov	r1, #1272
 1972 0026 0C48     		ldr	r0, .L125
 1973 0028 FFF7FEFF 		bl	assert_failed
 1974              	.L123:
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Set the BOR Level */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 68


1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
 1975              		.loc 1 1275 40 is_stmt 1
 1976 002c 0B4B     		ldr	r3, .L125+4
 1977 002e 1B78     		ldrb	r3, [r3]
 1978 0030 DBB2     		uxtb	r3, r3
 1979 0032 0A4A     		ldr	r2, .L125+4
 1980 0034 23F00C03 		bic	r3, r3, #12
 1981 0038 DBB2     		uxtb	r3, r3
 1982 003a 1370     		strb	r3, [r2]
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= Level;
 1983              		.loc 1 1276 40
 1984 003c 074B     		ldr	r3, .L125+4
 1985 003e 1B78     		ldrb	r3, [r3]
 1986 0040 DAB2     		uxtb	r2, r3
 1987 0042 0649     		ldr	r1, .L125+4
 1988 0044 FB79     		ldrb	r3, [r7, #7]
 1989 0046 1343     		orrs	r3, r3, r2
 1990 0048 DBB2     		uxtb	r3, r3
 1991 004a 0B70     		strb	r3, [r1]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return HAL_OK;
 1992              		.loc 1 1278 10
 1993 004c 0023     		movs	r3, #0
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 1994              		.loc 1 1280 1
 1995 004e 1846     		mov	r0, r3
 1996 0050 0837     		adds	r7, r7, #8
 1997              	.LCFI90:
 1998              		.cfi_def_cfa_offset 8
 1999 0052 BD46     		mov	sp, r7
 2000              	.LCFI91:
 2001              		.cfi_def_cfa_register 13
 2002              		@ sp needed
 2003 0054 80BD     		pop	{r7, pc}
 2004              	.L126:
 2005 0056 00BF     		.align	2
 2006              	.L125:
 2007 0058 00000000 		.word	.LC0
 2008 005c 143C0240 		.word	1073888276
 2009              		.cfi_endproc
 2010              	.LFE145:
 2012              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 2013              		.align	1
 2014              		.syntax unified
 2015              		.thumb
 2016              		.thumb_func
 2018              	FLASH_OB_GetUser:
 2019              	.LFB146:
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval uint8_t FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         and RST_STDBY(Bit2).
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 69


 2020              		.loc 1 1288 1
 2021              		.cfi_startproc
 2022              		@ args = 0, pretend = 0, frame = 0
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024              		@ link register save eliminated.
 2025 0000 80B4     		push	{r7}
 2026              	.LCFI92:
 2027              		.cfi_def_cfa_offset 4
 2028              		.cfi_offset 7, -4
 2029 0002 00AF     		add	r7, sp, #0
 2030              	.LCFI93:
 2031              		.cfi_def_cfa_register 7
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the User Option Byte */
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return ((uint8_t)(FLASH->OPTCR & 0xE0));
 2032              		.loc 1 1290 26
 2033 0004 054B     		ldr	r3, .L129
 2034 0006 5B69     		ldr	r3, [r3, #20]
 2035              		.loc 1 1290 11
 2036 0008 DBB2     		uxtb	r3, r3
 2037 000a 23F01F03 		bic	r3, r3, #31
 2038 000e DBB2     		uxtb	r3, r3
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 2039              		.loc 1 1291 1
 2040 0010 1846     		mov	r0, r3
 2041 0012 BD46     		mov	sp, r7
 2042              	.LCFI94:
 2043              		.cfi_def_cfa_register 13
 2044              		@ sp needed
 2045 0014 5DF8047B 		ldr	r7, [sp], #4
 2046              	.LCFI95:
 2047              		.cfi_restore 7
 2048              		.cfi_def_cfa_offset 0
 2049 0018 7047     		bx	lr
 2050              	.L130:
 2051 001a 00BF     		.align	2
 2052              	.L129:
 2053 001c 003C0240 		.word	1073888256
 2054              		.cfi_endproc
 2055              	.LFE146:
 2057              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 2058              		.align	1
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2063              	FLASH_OB_GetWRP:
 2064              	.LFB147:
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval uint16_t FLASH Write Protection Option Bytes value
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint16_t FLASH_OB_GetWRP(void)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 2065              		.loc 1 1298 1
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 0
 2068              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 70


 2069              		@ link register save eliminated.
 2070 0000 80B4     		push	{r7}
 2071              	.LCFI96:
 2072              		.cfi_def_cfa_offset 4
 2073              		.cfi_offset 7, -4
 2074 0002 00AF     		add	r7, sp, #0
 2075              	.LCFI97:
 2076              		.cfi_def_cfa_register 7
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 2077              		.loc 1 1300 11
 2078 0004 034B     		ldr	r3, .L133
 2079 0006 1B88     		ldrh	r3, [r3]	@ movhi
 2080 0008 9BB2     		uxth	r3, r3
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 2081              		.loc 1 1301 1
 2082 000a 1846     		mov	r0, r3
 2083 000c BD46     		mov	sp, r7
 2084              	.LCFI98:
 2085              		.cfi_def_cfa_register 13
 2086              		@ sp needed
 2087 000e 5DF8047B 		ldr	r7, [sp], #4
 2088              	.LCFI99:
 2089              		.cfi_restore 7
 2090              		.cfi_def_cfa_offset 0
 2091 0012 7047     		bx	lr
 2092              	.L134:
 2093              		.align	2
 2094              	.L133:
 2095 0014 163C0240 		.word	1073888278
 2096              		.cfi_endproc
 2097              	.LFE147:
 2099              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 2100              		.align	1
 2101              		.syntax unified
 2102              		.thumb
 2103              		.thumb_func
 2105              	FLASH_OB_GetRDP:
 2106              	.LFB148:
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval FLASH ReadOut Protection Status:
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetRDP(void)
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 2107              		.loc 1 1312 1
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 8
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112 0000 80B4     		push	{r7}
 2113              	.LCFI100:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 71


 2114              		.cfi_def_cfa_offset 4
 2115              		.cfi_offset 7, -4
 2116 0002 83B0     		sub	sp, sp, #12
 2117              	.LCFI101:
 2118              		.cfi_def_cfa_offset 16
 2119 0004 00AF     		add	r7, sp, #0
 2120              	.LCFI102:
 2121              		.cfi_def_cfa_register 7
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   uint8_t readstatus = OB_RDP_LEVEL_0;
 2122              		.loc 1 1313 11
 2123 0006 AA23     		movs	r3, #170
 2124 0008 FB71     		strb	r3, [r7, #7]
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   if((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_2))
 2125              		.loc 1 1315 7
 2126 000a 0C4B     		ldr	r3, .L140
 2127 000c 1B78     		ldrb	r3, [r3]
 2128 000e DBB2     		uxtb	r3, r3
 2129              		.loc 1 1315 5
 2130 0010 CC2B     		cmp	r3, #204
 2131 0012 02D1     		bne	.L136
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_2;
 2132              		.loc 1 1317 16
 2133 0014 CC23     		movs	r3, #204
 2134 0016 FB71     		strb	r3, [r7, #7]
 2135 0018 09E0     		b	.L137
 2136              	.L136:
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else if((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_1))
 2137              		.loc 1 1319 12
 2138 001a 084B     		ldr	r3, .L140
 2139 001c 1B78     		ldrb	r3, [r3]
 2140 001e DBB2     		uxtb	r3, r3
 2141              		.loc 1 1319 10
 2142 0020 552B     		cmp	r3, #85
 2143 0022 02D1     		bne	.L138
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_1;
 2144              		.loc 1 1321 16
 2145 0024 5523     		movs	r3, #85
 2146 0026 FB71     		strb	r3, [r7, #7]
 2147 0028 01E0     		b	.L137
 2148              	.L138:
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   else 
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   {
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_0;
 2149              		.loc 1 1325 16
 2150 002a AA23     		movs	r3, #170
 2151 002c FB71     		strb	r3, [r7, #7]
 2152              	.L137:
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   }
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return readstatus;
 2153              		.loc 1 1328 10
 2154 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 72


1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 2155              		.loc 1 1329 1
 2156 0030 1846     		mov	r0, r3
 2157 0032 0C37     		adds	r7, r7, #12
 2158              	.LCFI103:
 2159              		.cfi_def_cfa_offset 4
 2160 0034 BD46     		mov	sp, r7
 2161              	.LCFI104:
 2162              		.cfi_def_cfa_register 13
 2163              		@ sp needed
 2164 0036 5DF8047B 		ldr	r7, [sp], #4
 2165              	.LCFI105:
 2166              		.cfi_restore 7
 2167              		.cfi_def_cfa_offset 0
 2168 003a 7047     		bx	lr
 2169              	.L141:
 2170              		.align	2
 2171              	.L140:
 2172 003c 153C0240 		.word	1073888277
 2173              		.cfi_endproc
 2174              	.LFE148:
 2176              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 2177              		.align	1
 2178              		.syntax unified
 2179              		.thumb
 2180              		.thumb_func
 2182              	FLASH_OB_GetBOR:
 2183              	.LFB149:
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** /**
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOR level.
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   * @retval uint8_t The FLASH BOR level:
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOR(void)
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** {
 2184              		.loc 1 1340 1
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 1, uses_anonymous_args = 0
 2188              		@ link register save eliminated.
 2189 0000 80B4     		push	{r7}
 2190              	.LCFI106:
 2191              		.cfi_def_cfa_offset 4
 2192              		.cfi_offset 7, -4
 2193 0002 00AF     		add	r7, sp, #0
 2194              	.LCFI107:
 2195              		.cfi_def_cfa_register 7
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   /* Return the FLASH BOR level */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 2196              		.loc 1 1342 10
 2197 0004 054B     		ldr	r3, .L144
 2198 0006 1B78     		ldrb	r3, [r3]
 2199 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 73


 2200 000a 03F00C03 		and	r3, r3, #12
 2201 000e DBB2     		uxtb	r3, r3
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c **** }
 2202              		.loc 1 1343 1
 2203 0010 1846     		mov	r0, r3
 2204 0012 BD46     		mov	sp, r7
 2205              	.LCFI108:
 2206              		.cfi_def_cfa_register 13
 2207              		@ sp needed
 2208 0014 5DF8047B 		ldr	r7, [sp], #4
 2209              	.LCFI109:
 2210              		.cfi_restore 7
 2211              		.cfi_def_cfa_offset 0
 2212 0018 7047     		bx	lr
 2213              	.L145:
 2214 001a 00BF     		.align	2
 2215              	.L144:
 2216 001c 143C0240 		.word	1073888276
 2217              		.cfi_endproc
 2218              	.LFE149:
 2220              		.text
 2221              	.Letext0:
 2222              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 2223              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 2224              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 2225              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2226              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h"
 2227              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 74


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_flash_ex.c
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:20     .rodata:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:25     .text.HAL_FLASHEx_Erase:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:31     .text.HAL_FLASHEx_Erase:00000000 HAL_FLASHEx_Erase
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1073   .text.FLASH_MassErase:00000000 FLASH_MassErase
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1176   .text.FLASH_Erase_Sector:00000000 FLASH_Erase_Sector
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:615    .text.FLASH_FlushCaches:00000000 FLASH_FlushCaches
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:227    .text.HAL_FLASHEx_Erase:00000114 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:234    .text.HAL_FLASHEx_Erase_IT:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:240    .text.HAL_FLASHEx_Erase_IT:00000000 HAL_FLASHEx_Erase_IT
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:407    .text.HAL_FLASHEx_Erase_IT:000000e4 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:414    .text.HAL_FLASHEx_OBProgram:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:420    .text.HAL_FLASHEx_OBProgram:00000000 HAL_FLASHEx_OBProgram
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1368   .text.FLASH_OB_EnableWRP:00000000 FLASH_OB_EnableWRP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1463   .text.FLASH_OB_DisableWRP:00000000 FLASH_OB_DisableWRP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1728   .text.FLASH_OB_RDP_LevelConfig:00000000 FLASH_OB_RDP_LevelConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1808   .text.FLASH_OB_UserConfig:00000000 FLASH_OB_UserConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1935   .text.FLASH_OB_BOR_LevelConfig:00000000 FLASH_OB_BOR_LevelConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:603    .text.HAL_FLASHEx_OBProgram:00000104 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:609    .text.FLASH_FlushCaches:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:705    .text.FLASH_FlushCaches:00000088 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:710    .text.HAL_FLASHEx_OBGetConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:716    .text.HAL_FLASHEx_OBGetConfig:00000000 HAL_FLASHEx_OBGetConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2063   .text.FLASH_OB_GetWRP:00000000 FLASH_OB_GetWRP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2105   .text.FLASH_OB_GetRDP:00000000 FLASH_OB_GetRDP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2018   .text.FLASH_OB_GetUser:00000000 FLASH_OB_GetUser
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2182   .text.FLASH_OB_GetBOR:00000000 FLASH_OB_GetBOR
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:783    .text.HAL_FLASHEx_AdvOBProgram:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:789    .text.HAL_FLASHEx_AdvOBProgram:00000000 HAL_FLASHEx_AdvOBProgram
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1558   .text.FLASH_OB_EnablePCROP:00000000 FLASH_OB_EnablePCROP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1643   .text.FLASH_OB_DisablePCROP:00000000 FLASH_OB_DisablePCROP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:883    .text.HAL_FLASHEx_AdvOBProgram:00000074 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:888    .text.HAL_FLASHEx_AdvOBGetConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:894    .text.HAL_FLASHEx_AdvOBGetConfig:00000000 HAL_FLASHEx_AdvOBGetConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:936    .text.HAL_FLASHEx_AdvOBGetConfig:00000020 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:941    .text.HAL_FLASHEx_OB_SelectPCROP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:947    .text.HAL_FLASHEx_OB_SelectPCROP:00000000 HAL_FLASHEx_OB_SelectPCROP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1001   .text.HAL_FLASHEx_OB_SelectPCROP:00000030 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1006   .text.HAL_FLASHEx_OB_DeSelectPCROP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1012   .text.HAL_FLASHEx_OB_DeSelectPCROP:00000000 HAL_FLASHEx_OB_DeSelectPCROP
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1063   .text.HAL_FLASHEx_OB_DeSelectPCROP:0000002c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1068   .text.FLASH_MassErase:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1164   .text.FLASH_MassErase:0000007c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1170   .text.FLASH_Erase_Sector:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1357   .text.FLASH_Erase_Sector:000000f8 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1363   .text.FLASH_OB_EnableWRP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1452   .text.FLASH_OB_EnableWRP:00000070 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1458   .text.FLASH_OB_DisableWRP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1547   .text.FLASH_OB_DisableWRP:0000006c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1553   .text.FLASH_OB_EnablePCROP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1632   .text.FLASH_OB_EnablePCROP:00000058 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1638   .text.FLASH_OB_DisablePCROP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1717   .text.FLASH_OB_DisablePCROP:0000005c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1723   .text.FLASH_OB_RDP_LevelConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1797   .text.FLASH_OB_RDP_LevelConfig:0000004c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1803   .text.FLASH_OB_UserConfig:00000000 $t
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s 			page 75


C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1924   .text.FLASH_OB_UserConfig:0000009c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:1930   .text.FLASH_OB_BOR_LevelConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2007   .text.FLASH_OB_BOR_LevelConfig:00000058 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2013   .text.FLASH_OB_GetUser:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2053   .text.FLASH_OB_GetUser:0000001c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2058   .text.FLASH_OB_GetWRP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2095   .text.FLASH_OB_GetWRP:00000014 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2100   .text.FLASH_OB_GetRDP:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2172   .text.FLASH_OB_GetRDP:0000003c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2177   .text.FLASH_OB_GetBOR:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccT2i65j.s:2216   .text.FLASH_OB_GetBOR:0000001c $d

UNDEFINED SYMBOLS
assert_failed
FLASH_WaitForLastOperation
pFlash
